{"version":3,"file":"js/exposed-./RootApp.9700426e66abd0bd0fb1.js","mappings":"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","sources":["webpack:///./locale/ lazy ^\\.\\/.*\\.js$ namespace object","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/ansible-distribution.ts","webpack:///./src/api/ansible-remote.ts","webpack:///./src/api/ansible-repository.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/certificate-upload.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/controller.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/api/execution-environment-registry.ts","webpack:///./src/api/execution-environment-remote.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/generic-pulp.ts","webpack:///./src/api/group.ts","webpack:///./src/api/group-role.ts","webpack:///./src/api/import.ts","webpack:///./src/api/legacy.ts","webpack:///./src/api/legacy-namespace.ts","webpack:///./src/api/legacy-role.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/role.ts","webpack:///./src/api/settings.ts","webpack:///./src/api/sign-collections.ts","webpack:///./src/api/sign-containers.ts","webpack:///./src/api/signing-service.ts","webpack:///./src/api/task.ts","webpack:///./src/api/task-management.ts","webpack:///./src/api/user.ts","webpack:///./src/api/wisdom-deny-index.ts","webpack:///./src/components/approve-modal/approve-modal.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/collection-dependencies-list/collection-dependencies-list.tsx","webpack:///./src/components/collection-dependencies-list/collection-usedby-dependencies-list.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/collection-detail/download-signature-grid-item.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/collection-list/collection-filter.tsx","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/signing/sign-all-certificates-modal.tsx","webpack:///./src/components/signing/sign-single-certificate-modal.tsx","webpack:///./src/components/signing/signature-badge.tsx","webpack:///./src/components/signing/upload-sign-certificate-modal.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/confirm-modal/confirm-modal.tsx","webpack:///./src/components/copy-collection-to-repository-modal/copy-collection-to-repository-modal.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/components/delete-modal/delete-ansible-remote-modal.tsx","webpack:///./src/components/delete-modal/delete-ansible-repository-modal.tsx","webpack:///./src/components/delete-modal/delete-collection-modal.tsx","webpack:///./src/components/delete-modal/delete-modal.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/execution-environment/tag-manifest-modal.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/import-modal/import-modal.tsx","webpack:///./src/components/legacy-namespace-list/legacy-namespace-item.tsx","webpack:///./src/components/legacy-role-list/legacy-role-item.tsx","webpack:///./src/components/patternfly-wrappers/stateful-dropdown.tsx","webpack:///./src/components/list-item-actions/list-item-actions.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/page/list-page.tsx","webpack:///./src/components/page/page.tsx","webpack:///./src/components/page/page-with-tabs.tsx","webpack:///./src/components/patternfly-wrappers/alert-list.tsx","webpack:///./src/components/patternfly-wrappers/applied-filters.tsx","webpack:///./src/components/patternfly-wrappers/breadcrumbs.tsx","webpack:///./src/components/patternfly-wrappers/clipboard-copy.tsx","webpack:///./src/components/patternfly-wrappers/compound-filter.tsx","webpack:///./src/components/patternfly-wrappers/copy-url.tsx","webpack:///./src/components/patternfly-wrappers/fileupload.tsx","webpack:///./src/components/patternfly-wrappers/link-tabs.tsx","webpack:///./src/components/patternfly-wrappers/main.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/patternfly-wrappers/sort.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/patternfly-wrappers/tooltip.tsx","webpack:///./src/components/patternfly-wrappers/wizard-modal.tsx","webpack:///./src/components/patternfly-wrappers/write-only-field.tsx","webpack:///./src/components/rbac/access-tab.tsx","webpack:///./src/components/rbac/delete-group-modal.tsx","webpack:///./src/components/rbac/delete-user-modal.tsx","webpack:///./src/components/rbac/group-modal.tsx","webpack:///./src/components/rbac/group-role-permissions.tsx","webpack:///./src/components/rbac/permission-categories.tsx","webpack:///./src/components/rbac/permission-chip-selector.tsx","webpack:///./src/components/rbac/preview-roles.tsx","webpack:///./src/components/rbac/role-form.tsx","webpack:///./src/components/rbac/role-list-table.tsx","webpack:///./src/components/rbac/select-group.tsx","webpack:///./src/components/rbac/select-roles.tsx","webpack:///./src/components/rbac/user-form.tsx","webpack:///./src/components/rbac/user-form-page.tsx","webpack:///./src/components/render-plugin-doc/render-plugin-doc.tsx","webpack:///./src/components/repo-selector/multiple-repo-selector.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/repositories/ansible-repository-form.tsx","webpack:///./src/components/repositories/lazy-distributions.tsx","webpack:///./src/components/repositories/lazy-repositories.tsx","webpack:///./src/components/repositories/pulp-labels.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/shared/detail-list.tsx","webpack:///./src/components/shared/details.tsx","webpack:///./src/components/shared/download-count.tsx","webpack:///./src/components/shared/login-link.tsx","webpack:///./src/components/shared/ui-version.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/wisdom-modal/wisdom-modal.tsx","webpack:///./src/constants.tsx","webpack:///./src/containers/not-found/not-found.tsx","webpack:///./src/loaders/insights/routes.tsx","webpack:///./src/loaders/insights/loader.tsx","webpack:///./src/loaders/load-context.ts","webpack:///./src/entry-insights.tsx","webpack:///./src/l10n.ts","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/can-sign.tsx","webpack:///./src/utilities/chip-group-props.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/fail-alerts.ts","webpack:///./src/utilities/parse-pulp-id.ts","webpack:///./src/utilities/wait-for-task.ts","webpack:///./src/utilities/repositories.ts","webpack:///./src/utilities/delete-collection.tsx","webpack:///./src/utilities/download-data.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/has-permission.tsx","webpack:///./src/utilities/last-sync-task.tsx","webpack:///./src/utilities/param-helper.tsx","webpack:///./src/utilities/repo-signing.ts","webpack:///./src/utilities/repository-base-path.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/task-alert.tsx","webpack:///./src/utilities/translate-locked-roles-desc.ts","webpack:///./src/utilities/validateURLHelper.ts","webpack:///./src/utilities/with-router.tsx","webpack:///./src/utilities/write-only-fields.ts"],"sourcesContent":["var map = {\n\t\"./en.js\": [\n\t\t682,\n\t\t682\n\t],\n\t\"./es.js\": [\n\t\t35541,\n\t\t5541\n\t],\n\t\"./fr.js\": [\n\t\t81870,\n\t\t1870\n\t],\n\t\"./ja.js\": [\n\t\t27853,\n\t\t7853\n\t],\n\t\"./ko.js\": [\n\t\t2620,\n\t\t2620\n\t],\n\t\"./nl.js\": [\n\t\t96379,\n\t\t6379\n\t],\n\t\"./zh.js\": [\n\t\t50415,\n\t\t415\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 77025;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\n\nexport class BaseAPI {\n  apiPath: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  http: any;\n\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: apiBaseUrl,\n      paramsSerializer: {\n        serialize: (params) => ParamHelper.getQueryString(params),\n      },\n    });\n\n    this.http.interceptors.request.use((request) => this.authHandler(request));\n  }\n\n  public mapPageToOffset(p) {\n    // Need to copy the object to make sure we aren't accidentally\n    // setting page state\n    const params = { ...p };\n\n    const pageSize =\n      parseInt(params['page_size']) || Constants.DEFAULT_PAGE_SIZE;\n    const page = parseInt(params['page']) || 1;\n\n    delete params['page'];\n    delete params['page_size'];\n\n    params['offset'] = page * pageSize - pageSize;\n    params['limit'] = pageSize;\n\n    return params;\n  }\n\n  list(params?: object, apiPath?: string) {\n    // The api uses offset/limit for pagination. I think this is confusing\n    // for params on the front end, so we're going to use page/page size\n    // for the URL params and just map it to whatever the api expects.\n\n    return this.http.get(this.getPath(apiPath), {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  getPath(apiPath: string) {\n    return apiPath || this.apiPath;\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      await window.insights.chrome.auth.getUser();\n    }\n    if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  UI_API_VERSION = 'v1';\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  // Use this function to get paths in the _ui API. That will ensure the API version\n  // gets updated when it changes\n  getUIPath(url: string) {\n    return `_ui/${this.UI_API_VERSION}/${url}`;\n  }\n}\n","import { Constants } from 'src/constants';\nimport { HubAPI } from './hub';\nimport { UserType } from './response-types/user';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('me/');\n\n  getUser(): Promise<UserType> {\n    return this.http.get(this.apiPath).then((result) => result.data);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  getToken(): Promise<{ data: { token: string } }> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return Promise.reject(\n        'Use window.insights.chrome.auth to get tokens for insights deployments',\n      );\n    }\n\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post(this.getUIPath('auth/logout/'), {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = this.getUIPath('auth/login/');\n\n    // Make a get request to the login endpoint to set CSRF tokens before making\n    // the authentication reqest\n    return this.http.get(loginURL).then(() =>\n      this.http.post(loginURL, {\n        username,\n        password,\n      }),\n    );\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  useOrdering = false; // translate ?sort into ?ordering in list()\n\n  constructor() {\n    super(API_HOST + PULP_API_BASE_PATH);\n  }\n\n  list(params?, apiPath?) {\n    const changedParams = { ...params };\n    if (this.useOrdering && changedParams['sort']) {\n      changedParams['ordering'] = changedParams['sort'];\n      delete changedParams['sort'];\n    }\n    return super.list(changedParams, apiPath);\n  }\n}\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'distributions/ansible/ansible/';\n  useOrdering = true;\n\n  // list(params?)\n  // delete(pk)\n}\n\nexport const AnsibleDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\nimport { AnsibleRemoteType } from './response-types/ansible-remote';\n\n// simplified version of smartUpdate from execution-environment-registry\nfunction smartUpdate(\n  remote: AnsibleRemoteType,\n  unmodifiedRemote: AnsibleRemoteType,\n) {\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (remote.auth_url === unmodifiedRemote.auth_url) {\n    delete remote.auth_url;\n  }\n\n  for (const field of Object.keys(remote)) {\n    if (remote[field] === '') {\n      remote[field] = null;\n    }\n\n    // API returns headers:null bull doesn't accept it .. and we don't edit headers\n    if (remote[field] === null && unmodifiedRemote[field] === null) {\n      delete remote[field];\n    }\n  }\n\n  return remote;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'remotes/ansible/collection/';\n  useOrdering = true;\n\n  // create(data)\n  // delete(uuid)\n  // list(params?)\n\n  smartUpdate(pk, newValue: AnsibleRemoteType, oldValue: AnsibleRemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const AnsibleRemoteAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/ansible/ansible/';\n  useOrdering = true;\n\n  // list(params?)\n\n  listVersions(pulp_id: string, params?) {\n    return this.list(params, this.apiPath + pulp_id + '/versions/');\n  }\n\n  // delete(pulp_id: string)\n\n  sync(pulp_id: string, body = {}) {\n    return this.http.post(this.apiPath + pulp_id + '/sync/', body);\n  }\n\n  revert(pulp_id: string, version_href) {\n    return this.http.post(this.apiPath + pulp_id + '/modify/', {\n      base_version: version_href,\n    });\n  }\n\n  addContent(pulp_id: string, collection_version_hrefs) {\n    return this.http.post(this.apiPath + pulp_id + '/modify/', {\n      add_content_units: collection_version_hrefs,\n    });\n  }\n\n  removeContent(pulp_id: string, collection_version_href) {\n    return this.http.post(this.apiPath + pulp_id + '/modify/', {\n      remove_content_units: [collection_version_href],\n    });\n  }\n\n  listRoles(pulp_id: string, params?) {\n    return super.list(params, this.apiPath + pulp_id + '/list_roles/');\n  }\n\n  addRole(pulp_id: string, role) {\n    return super.create(role, this.apiPath + pulp_id + '/add_role/');\n  }\n\n  myPermissions(pulp_id: string, params?) {\n    return super.list(params, this.apiPath + pulp_id + '/my_permissions/');\n  }\n\n  removeRole(pulp_id: string, role) {\n    return super.create(role, this.apiPath + pulp_id + '/remove_role/');\n  }\n\n  copyCollectionVersion(\n    pulp_id: string,\n    body: {\n      collection_versions: string[];\n      destination_repositories: string[];\n      signing_service?: string;\n    },\n  ) {\n    return this.http.post(\n      this.apiPath + pulp_id + '/copy_collection_version/',\n      body,\n    );\n  }\n\n  moveCollectionVersion(\n    pulp_id: string,\n    body: {\n      collection_versions: string[];\n      destination_repositories: string[];\n      signing_service?: string;\n    },\n  ) {\n    return this.http.post(\n      this.apiPath + pulp_id + '/move_collection_version/',\n      body,\n    );\n  }\n}\n\nexport const AnsibleRepositoryAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '';\n\n  get() {\n    return super.get('');\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { PulpAPI } from './pulp';\n\ninterface UploadProps {\n  file: File;\n  // Takes pulp_href for repository\n  repository: string;\n  // Takes pulp_href for collection\n  signed_collection: string;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'content/ansible/collection_signatures/';\n\n  // Returns /api/automation-hub/pulp/api/v3/tasks/0be64cb4-3b7e-4a6b-b35d-c3b589923a90/\n  upload(data: UploadProps): Promise<{ data: { task: string } }> {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    formData.append('repository', data.repository);\n    formData.append('signed_collection', data.signed_collection);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    return this.http.post(this.apiPath, formData, config);\n  }\n}\n\nexport const CertificateUploadAPI = new API();\n","import axios from 'axios';\nimport { repositoryBasePath } from 'src/utilities';\nimport { HubAPI } from './hub';\nimport {\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n  CollectionVersionSearch,\n} from './response-types/collection';\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      (item) => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('repo/');\n  cachedCollection: CollectionDetailType;\n\n  list(params?, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  async setDeprecation({\n    collection_version: { namespace, name },\n    repository,\n    is_deprecated,\n  }: CollectionVersionSearch): Promise<{ data: { task: string } }> {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.patch(\n      `${namespace}/${name}`,\n      {\n        deprecated: !is_deprecated,\n      },\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/`,\n    );\n  }\n\n  upload(\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n\n    if (data.distro_base_path) {\n      return this.http.post(\n        `v3/plugin/ansible/content/${data.distro_base_path}/collections/artifacts/`,\n        formData,\n        config,\n      );\n    } else {\n      return this.http.post('v3/artifacts/collections/', formData, config);\n    }\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  async getDownloadURL(repository, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http\n      .get(\n        `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n      )\n      .then(({ data: { download_url } }) => download_url);\n  }\n\n  async deleteCollectionVersion({\n    collection_version: { namespace, name, version },\n    repository,\n  }: CollectionVersionSearch) {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http.delete(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n    );\n  }\n\n  async deleteCollection({\n    collection_version: { namespace, name },\n    repository,\n  }: CollectionVersionSearch) {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http.delete(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/`,\n    );\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      this.getUIPath(\n        `collection-versions/?dependency=${namespace}.${collection}`,\n      ),\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n\n  async getSignatures(repository, namespace, name, version) {\n    const distroBasePath = await repositoryBasePath(\n      repository.name,\n      repository.pulp_href,\n    );\n\n    return this.http.get(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/versions/${version}/`,\n    );\n  }\n\n  getContent(namespace, name, version) {\n    return super.list(\n      {\n        namespace,\n        name,\n        version,\n      },\n      `pulp/api/v3/content/ansible/collection_versions/`,\n    );\n  }\n\n  getDetail(distroBasePath, namespace, name) {\n    return this.http.get(\n      `v3/plugin/ansible/content/${distroBasePath}/collections/index/${namespace}/${name}/`,\n    );\n  }\n}\n\nexport const CollectionAPI = new API();\n","import axios from 'axios';\nimport { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/plugin/ansible/search/collection-versions/';\n\n  move(\n    namespace: string,\n    name: string,\n    version: string,\n    source_base_path: string,\n    destination_base_path: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${source_base_path}/${destination_base_path}/`;\n    return this.create({}, path);\n  }\n\n  copy(\n    namespace: string,\n    name: string,\n    version: string,\n    source_base_path: string,\n    destination_base_path: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/copy/${source_base_path}/${destination_base_path}/`;\n    return this.create({}, path);\n  }\n\n  get(id: string) {\n    return super.get(id, 'pulp/api/v3/content/ansible/collection_versions/');\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      `${this.apiPath}?dependency=${namespace}.${collection}`,\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  // list(params?)\n}\n\nexport const CollectionVersionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n\n  // patch(id, data)\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/untag/`, {\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('controllers/');\n\n  // list(params?)\n}\n\nexport const ControllerAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n  readme(name) {\n    return this.http.get(this.apiPath + name + '/_content/readme/');\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + name + '/_content/readme/', readme);\n  }\n\n  images(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/images/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  image(name, digest) {\n    return this.http.get(`${this.apiPath}${name}/_content/images/${digest}/`);\n  }\n\n  tags(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/tags/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  deleteImage(name, manifest) {\n    return this.http.delete(\n      `${this.apiPath}${name}/_content/images/${manifest}/`,\n    );\n  }\n\n  deleteExecutionEnvironment(name) {\n    return this.http.delete(`${this.apiPath}${name}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'pulp_container/namespaces/';\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import { clearSetFieldsFromRequest } from 'src/utilities';\nimport { RemoteType } from '.';\nimport { HubAPI } from './hub';\n\n// removes unchanged values and write only fields before updating\nfunction smartUpdate(remote: RemoteType, unmodifiedRemote: RemoteType) {\n  // Deletes any write only fields from the object that are market as is_set.\n  // This is to prevent accidentally clearing fields that weren't updated.\n\n  // TODO: clearing set fields from the response will be unnecesary if the API\n  // stops returning field: null on write only fields\n  const reducedData: RemoteType = clearSetFieldsFromRequest(\n    remote,\n    remote.write_only_fields,\n  ) as RemoteType;\n\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (reducedData.auth_url === unmodifiedRemote.auth_url) {\n    delete reducedData['auth_url'];\n  }\n\n  for (const field of Object.keys(reducedData)) {\n    if (reducedData[field] === '') {\n      reducedData[field] = null;\n    }\n  }\n\n  return reducedData;\n}\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/registries/');\n\n  // list(params?)\n  // create(data)\n  // get(name)\n  // delete(name)\n\n  smartUpdate(pk, newValue: RemoteType, oldValue: RemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  index(id) {\n    return this.http.post(this.apiPath + id + '/index/', {});\n  }\n\n  sync(id) {\n    return this.http.post(this.apiPath + id + '/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRegistryAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/remotes/');\n\n  // list(params?)\n  // create(data)\n  // get(pk)\n  // update(pk, data)\n\n  sync(name) {\n    const apiPath = 'v3/plugin/execution-environments/repositories/';\n    return this.http.post(apiPath + name + '/_content/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('feature-flags/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = '';\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id);\n  }\n}\n\nexport const GenericPulpAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('groups/');\n}\n\nexport const GroupAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'groups/';\n  useOrdering = true;\n\n  listRoles(groupId, params?) {\n    return super.list(params, `${this.apiPath}${groupId}/roles/`);\n  }\n\n  removeRole(groupId, roleId) {\n    return this.http.delete(`${this.apiPath}${groupId}/roles/${roleId}/`);\n  }\n\n  addRoleToGroup(groupId, role) {\n    return this.http.post(`${this.apiPath}${groupId}/roles/`, {\n      role: role.name,\n      // required field, can be empty\n      content_object: null,\n    });\n  }\n}\n\nexport const GroupRoleAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('imports/collections/');\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { BaseAPI } from './base';\nimport { LegacyRoleDetailType } from './response-types/legacy-role';\n\nexport class LegacyAPI extends BaseAPI {\n  API_VERSION = 'v1';\n\n  cachedLegacyRole: LegacyRoleDetailType;\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  public mapPageToOffset(p) {\n    // override BaseAPI's function to persist page, page_size, etc ...\n    return p;\n  }\n\n  get(apiPath: string) {\n    const fullPath = 'v1/' + apiPath;\n    if (fullPath.includes('?')) {\n      return this.http.get(this.getPath(fullPath));\n    } else {\n      return this.http.get(this.getPath(fullPath) + '/');\n    }\n  }\n\n  getApiPath(url: string) {\n    const newUrl = `/${this.API_VERSION}/${url}`;\n    return newUrl;\n  }\n}\n","import axios from 'axios';\nimport { LegacyAPI } from './legacy';\n\nexport class API extends LegacyAPI {\n  apiPath = this.getApiPath('');\n\n  list(params?) {\n    const path = this.apiPath + 'namespaces/';\n\n    // clean null'ish params\n    if (params !== undefined && params !== null) {\n      for (const [key, value] of Object.entries(params)) {\n        if (value === null || value === undefined || value === '') {\n          delete params[key];\n        }\n      }\n    }\n\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n      },\n    }));\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n}\n\nexport const LegacyNamespaceAPI = new API();\n","import axios from 'axios';\nimport { LegacyAPI } from './legacy';\n\nexport class API extends LegacyAPI {\n  apiPath = this.getApiPath('');\n\n  list(params?) {\n    const path = this.apiPath + 'roles/';\n\n    // clean null'ish params\n    if (params !== undefined && params !== null) {\n      for (const [key, value] of Object.entries(params)) {\n        if (value === null || value === undefined || value === '') {\n          delete params[key];\n        }\n      }\n    }\n\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n      },\n    }));\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n}\n\nexport const LegacyRoleAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-synclists/');\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const NamespaceAPI = new API();\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'roles/';\n  useOrdering = true;\n\n  updatePermissions(id, data: unknown) {\n    return this.http.patch(this.apiPath + id, data);\n  }\n\n  // create(data)\n  // get(params?)\n\n  list(params?, for_object_type?) {\n    const newParams = { ...params };\n    if (for_object_type) {\n      // ?for_object_type=/api/automation-hub/pulp/api/v3/.../\n      // list visible in http://localhost:8002/api/automation-hub/pulp/api/v3/\n      newParams.for_object_type = PULP_API_BASE_PATH + for_object_type + '/';\n    }\n    return super.list(newParams);\n  }\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId + '/',\n    );\n  }\n}\n\nexport const RoleAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('settings/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const SettingsAPI = new API();\n","import { repositoryBasePath } from 'src/utilities';\nimport { HubAPI } from './hub';\nimport { CollectionVersionSearch } from './response-types/collection';\n\ninterface SignNamespace {\n  signing_service?: string;\n  repository?: CollectionVersionSearch['repository'];\n  repository_name?: string;\n  namespace: string;\n}\n\ninterface SignCollection extends SignNamespace {\n  collection?: string;\n}\n\ninterface SignCollectionVersion extends SignCollection {\n  version?: string;\n}\n\ntype SignProps = SignNamespace | SignCollection | SignCollectionVersion;\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('collection_signing/');\n\n  async sign({ repository, repository_name: name, ...args }: SignProps) {\n    const distroBasePath = await repositoryBasePath(\n      name,\n      repository?.pulp_href,\n    ).catch((status) =>\n      Promise.reject({\n        response: { status },\n      }),\n    );\n\n    const updatedData = {\n      distro_base_path: distroBasePath,\n      ...args,\n    };\n\n    return this.http.post(this.apiPath, updatedData);\n  }\n}\n\nexport const SignCollectionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  public getSigningService(serviceName: string) {\n    return this.http.get(`/signing-services/?name=${serviceName}`);\n  }\n\n  public sign(\n    containerId: string,\n    pulp_type: string,\n    signServicePath: string,\n    base_path: string,\n  ) {\n    const postObj = { manifest_signing_service: signServicePath };\n    if (pulp_type == 'container') {\n      postObj['future_base_path'] = base_path;\n    }\n\n    return this.http.post(\n      `/repositories/container/${pulp_type}/${containerId}/sign/`,\n      postObj,\n    );\n  }\n}\n\nexport const SignContainersAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class SigningServiceType {\n  name: string;\n  pubkey_fingerprint: string;\n  public_key: string;\n  pulp_created: string;\n  pulp_href: string;\n  script: string;\n}\n\nexport class API extends PulpAPI {\n  apiPath = 'signing-services/';\n\n  // list(params?)\n}\n\nexport const SigningServiceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n}\n\nexport const TaskAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'tasks/';\n  useOrdering = true;\n\n  // get(id)\n  // list(params)\n  // patch(id, data)\n}\n\nexport const TaskManagementAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('users/');\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('ai_deny_index/');\n\n  isInDenyIndex(scope, reference) {\n    return this.http\n      .get(\n        this.apiPath +\n          `?scope=${encodeURIComponent(scope)}&reference=${encodeURIComponent(\n            reference,\n          )}`,\n      )\n      .then(({ data }) => data.count > 0);\n  }\n\n  removeFromDenyIndex(scope, reference) {\n    const removePath =\n      this.apiPath +\n      encodeURIComponent(scope) +\n      '/' +\n      encodeURIComponent(reference) +\n      '/';\n    return this.http.delete(removePath);\n  }\n\n  addToDenyIndex(scope, reference) {\n    const params = { reference };\n    const addPath = this.apiPath + encodeURIComponent(scope) + '/';\n    return this.http.post(addPath, params);\n  }\n}\n\nexport const WisdomDenyIndexAPI = new API();\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  CollectionVersion,\n  CollectionVersionAPI,\n  SigningServiceAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  MultipleRepoSelector,\n  closeAlert,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport {\n  errorMessage,\n  parsePulpIDFromURL,\n  waitForTaskUrl,\n} from 'src/utilities';\n\ninterface IProps {\n  closeAction: () => void;\n  collectionVersion: CollectionVersion;\n  addAlert: (alert) => void;\n  allRepositories: AnsibleRepositoryType[];\n  finishAction: () => void;\n  stagingRepoNames: string[];\n  rejectedRepoName: string;\n}\n\nexport const ApproveModal = (props: IProps) => {\n  const [alerts, setAlerts] = useState([]);\n  const [selectedRepos, setSelectedRepos] = useState([]);\n  const [fixedRepos, setFixedRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const context = useContext();\n\n  function approve() {\n    let error = '';\n\n    async function approveAsync() {\n      setLoading(true);\n\n      let reapprove = false;\n\n      let originRepoName = props.collectionVersion.repository_list.find(\n        (repo) =>\n          props.stagingRepoNames.includes(repo) ||\n          repo == props.rejectedRepoName,\n      );\n\n      // origin repo is not staging or rejected, so this is reapprove process, user can add collection to approved repos\n      if (!originRepoName) {\n        reapprove = true;\n        originRepoName = fixedRepos[0];\n      }\n\n      const reposToApprove = [];\n\n      // fill repos that are actualy needed to approve, some of them may already contain the collection, those dont need to be approved again\n      // this handles the possible inconsistent state\n      selectedRepos.forEach((repo) => {\n        if (!fixedRepos.includes(repo)) {\n          reposToApprove.push(repo);\n        }\n      });\n\n      const repositoriesRef = props.allRepositories\n        .filter((repo) => reposToApprove.includes(repo.name))\n        .map((repo) => repo.pulp_href);\n\n      error = t`Repository name ${originRepoName} not found.`;\n      const repo = (\n        await AnsibleRepositoryAPI.list({ name: originRepoName, page_size: 1 })\n      )?.data?.results?.[0];\n      if (!repo) {\n        throw new Error();\n      }\n      error = '';\n\n      const pulp_id = parsePulpIDFromURL(repo.pulp_href);\n\n      error = t`Collection with id ${props.collectionVersion.id} not found.`;\n      const collectionData = await CollectionVersionAPI.get(\n        props.collectionVersion.id,\n      );\n      error = '';\n\n      const autosign = context.settings.GALAXY_AUTO_SIGN_COLLECTIONS;\n      let signingService_href = null;\n\n      if (autosign) {\n        const signingServiceName =\n          context.settings.GALAXY_COLLECTION_SIGNING_SERVICE;\n\n        error = t`Signing service ${signingServiceName} not found`;\n        const signingList = await SigningServiceAPI.list({\n          name: signingServiceName,\n        });\n        if (signingList.data.results.length > 0) {\n          signingService_href = signingList.data.results[0].pulp_href;\n        } else {\n          throw new Error();\n        }\n        error = '';\n      }\n\n      const params = {\n        collection_versions: [collectionData.data.pulp_href],\n        destination_repositories: repositoriesRef,\n      };\n      if (signingService_href) {\n        params['signing_service'] = signingService_href;\n      }\n\n      const task = (\n        await (reapprove\n          ? AnsibleRepositoryAPI.copyCollectionVersion(pulp_id, params)\n          : AnsibleRepositoryAPI.moveCollectionVersion(pulp_id, params))\n      )?.data?.task;\n      await waitForTaskUrl(task);\n\n      setLoading(false);\n      props.finishAction();\n      props.addAlert({\n        title: t`Certification status for collection \"${props.collectionVersion.namespace} ${props.collectionVersion.name} v${props.collectionVersion.version}\" has been successfully updated.`,\n        variant: 'success',\n        description: '',\n      });\n    }\n\n    approveAsync().catch(() => {\n      setLoading(false);\n\n      addAlert({\n        title: t`Failed to approve collection.`,\n        variant: 'danger',\n        description: error,\n      });\n    });\n  }\n\n  function addAlert(alert: AlertType) {\n    setAlerts((prevAlerts) => [...prevAlerts, alert]);\n  }\n\n  function loadRepos(params, setRepositoryList, setLoading, setItemsCount) {\n    // modify params\n    const par = { ...params };\n    par['pulp_label_select'] = 'pipeline=approved';\n\n    setLoading(true);\n    AnsibleRepositoryAPI.list(par)\n      .then((data) => {\n        setLoading(false);\n        setRepositoryList(data.data.results);\n        setItemsCount(data.data.count);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        setLoading(false);\n        addAlert({\n          title: t`Failed to load repositories.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  useEffect(() => {\n    const fixedReposLocal = [];\n    const selectedReposLocal = [];\n\n    // check for approval repos that are already in collection and select them in UI\n    // this is handling of situation when collection is in inconsistent state\n    props.collectionVersion.repository_list.forEach((repo) => {\n      const count = props.allRepositories.filter((r) => r.name == repo).length;\n      if (count > 0) {\n        fixedReposLocal.push(repo);\n        selectedReposLocal.push(repo);\n      }\n    });\n\n    setSelectedRepos(selectedReposLocal);\n    setFixedRepos(fixedReposLocal);\n  }, []);\n\n  return (\n    <>\n      <Modal\n        actions={[\n          <Button\n            key='confirm'\n            onClick={approve}\n            variant='primary'\n            isDisabled={\n              selectedRepos.length - fixedRepos.length <= 0 || loading\n            }\n          >\n            {t`Select`}\n          </Button>,\n          <Button\n            key='cancel'\n            onClick={props.closeAction}\n            variant='link'\n            isDisabled={loading}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={props.closeAction}\n        title={t`Select repositories`}\n        variant='large'\n      >\n        <section className='modal-body' data-cy='modal-body'>\n          <MultipleRepoSelector\n            allRepositories={props.allRepositories}\n            fixedRepos={fixedRepos}\n            selectedRepos={selectedRepos}\n            setSelectedRepos={setSelectedRepos}\n            loadRepos={loadRepos}\n          />\n          {loading && <Spinner />}\n        </section>\n\n        <AlertList\n          alerts={alerts}\n          closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n        />\n      </Modal>\n    </>\n  );\n};\n","import { ListIcon, ThLargeIcon } from '@patternfly/react-icons';\nimport cx from 'classnames';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\nimport './switcher.scss';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport const CardListSwitcher: React.FunctionComponent<IProps> = ({\n  params,\n  updateParams,\n  size = 'sm',\n  className,\n}) => {\n  let disp = params.view_type;\n\n  if (!disp) {\n    disp = 'card';\n  }\n\n  const iconClasses = ['icon', 'clickable'];\n\n  return (\n    <div className={className}>\n      <span data-cy='view_type_card'>\n        <ThLargeIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'card' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n          }\n        />\n      </span>\n      <span data-cy='view_type_list'>\n        <ListIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'list' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n          }\n        />\n      </span>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Badge,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Text,\n  TextContent,\n  TextVariants,\n  Tooltip,\n} from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch } from 'src/api';\nimport { CollectionNumericLabel, Logo, SignatureBadge } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { convertContentSummaryCounts } from 'src/utilities';\n\ninterface IProps extends CollectionVersionSearch {\n  className?: string;\n  displaySignatures: boolean;\n  footer?: React.ReactNode;\n  menu?: React.ReactNode;\n}\n\nexport const CollectionCard = ({\n  collection_version,\n  namespace_metadata: namespace,\n  repository,\n  is_signed,\n  className,\n  displaySignatures,\n  menu,\n  footer,\n}: IProps) => {\n  const { featureFlags } = useContext();\n  const MAX_DESCRIPTION_LENGTH = 60;\n\n  const company = namespace?.company || collection_version.namespace;\n  const contentSummary = convertContentSummaryCounts(collection_version);\n\n  return (\n    <Card className={cx('hub-c-card-collection-container ', className)}>\n      <CardHeader className='logo-row'>\n        <Logo\n          alt={t`${company} logo`}\n          fallbackToDefault\n          image={namespace?.avatar_url}\n          size='40px'\n          unlockWidth\n          flexGrow\n        />\n        <div className='card-badge-area'>\n          {featureFlags.display_repositories ? (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Badge isRead>\n                  <Link\n                    to={formatPath(Paths.ansibleRepositoryDetail, {\n                      name: repository.name,\n                    })}\n                  >\n                    {repository.name === Constants.CERTIFIED_REPO\n                      ? t`Certified`\n                      : repository.name}\n                  </Link>\n                </Badge>\n              </Text>\n            </TextContent>\n          ) : null}\n          {displaySignatures ? (\n            <SignatureBadge\n              isCompact\n              signState={is_signed ? 'signed' : 'unsigned'}\n            />\n          ) : null}\n        </div>\n        {menu}\n      </CardHeader>\n      <CardHeader>\n        <div className='name'>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: collection_version.name,\n              namespace: collection_version.namespace,\n              repo: repository.name,\n            })}\n          >\n            {collection_version.name}\n          </Link>\n        </div>\n        <div className='author'>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by&nbsp;\n                <Link\n                  to={formatPath(Paths.namespaceDetail, {\n                    namespace: collection_version.namespace,\n                  })}\n                >\n                  {company}\n                </Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <Tooltip content={<div>{collection_version.description}</div>}>\n          <div className='description'>\n            {getDescription(\n              collection_version.description,\n              MAX_DESCRIPTION_LENGTH,\n            )}\n          </div>\n        </Tooltip>\n      </CardBody>\n      <CardBody className='type-container'>\n        {Object.keys(contentSummary.contents).map((k) =>\n          renderTypeCount(k, contentSummary.contents[k]),\n        )}\n      </CardBody>\n      {footer && <CardFooter>{footer}</CardFooter>}\n    </Card>\n  );\n};\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n\nfunction renderTypeCount(type, count) {\n  return (\n    <div key={type}>\n      <CollectionNumericLabel count={count} newline type={type} />\n    </div>\n  );\n}\n","import { t } from '@lingui/macro';\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Tooltip,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Logo } from 'src/components';\nimport './cards.scss';\n\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  avatar_url: string;\n  name: string;\n  company: string;\n  namespaceURL?: string;\n}\n\nexport const NamespaceCard = ({\n  avatar_url,\n  name,\n  company,\n  namespaceURL,\n}: IProps) => {\n  const MAX_DESCRIPTION_LENGTH = 26;\n  return (\n    <Card className='hub-c-card-ns-container'>\n      <CardHeader>\n        <CardHeaderMain>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={avatar_url}\n            size='40px'\n            unlockWidth\n          />\n        </CardHeaderMain>\n      </CardHeader>\n      <Tooltip content={company || name}>\n        <CardTitle>\n          {getDescription(company || name, MAX_DESCRIPTION_LENGTH)}\n        </CardTitle>\n      </Tooltip>\n      <Tooltip content={name}>\n        <CardBody>{getDescription(name, MAX_DESCRIPTION_LENGTH)}</CardBody>\n      </Tooltip>\n\n      {namespaceURL && (\n        <CardFooter>\n          <Link to={namespaceURL}>{t`View collections`}</Link>\n        </CardFooter>\n      )}\n    </Card>\n  );\n};\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { List, ListItem, ListVariant } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersion, CollectionVersionSearch } from 'src/api';\nimport { EmptyStateNoData, HelperText } from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  collection: CollectionVersionSearch;\n  dependencies_repos?: (CollectionVersion & {\n    path?: string;\n  })[];\n}\n\nexport const CollectionDependenciesList = ({\n  collection,\n  dependencies_repos,\n}: IProps) => {\n  const { dependencies } = collection.collection_version;\n\n  if (!Object.keys(dependencies).length) {\n    return (\n      <EmptyStateNoData\n        title={t`No dependencies`}\n        description={t`Collection does not have dependencies.`}\n      />\n    );\n  }\n\n  return (\n    <List variant={ListVariant.inline} className='hub-c-list-dependencies'>\n      {dependencies_repos.map((dependency, i) =>\n        listDep(dependency, i, dependencies),\n      )}\n    </List>\n  );\n};\n\nconst listDep = (dependency, i, dependencies) => {\n  const fqn = dependency.namespace + '.' + dependency.name;\n  const version_range = dependencies[fqn];\n\n  if (dependency.path) {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        <Link to={dependency.path}>{fqn}</Link>: {version_range}\n      </ListItem>\n    );\n  } else {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        {fqn}: {version_range}\n        <HelperText\n          content={t`No version of ${fqn} exists that matches ${version_range}.`}\n        />\n      </ListItem>\n    );\n  }\n};\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionUsedByDependencies } from 'src/api';\nimport {\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  Sort,\n} from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesLoading: boolean;\n  itemCount: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    sort?: string;\n    version?: string;\n    name__icontains?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const CollectionUsedbyDependenciesList = ({\n  params,\n  usedByDependencies,\n  itemCount,\n  updateParams,\n  usedByDependenciesLoading,\n}: IProps) => {\n  const ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n\n  if (!itemCount && !filterIsSet(params, ['name__icontains'])) {\n    return (\n      <EmptyStateNoData\n        title={t`Not required for use by other collections`}\n        description={t`Collection is not being used by any collection.`}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div className='hub-toolbar'>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.name__icontains || ''}\n                onChange={(_e, val) =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', val),\n                  )\n                }\n                onClear={() =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', ''),\n                  )\n                }\n                aria-label='filter-collection-name'\n                placeholder={t`Filter by name`}\n              />\n            </ToolbarItem>\n            <ToolbarItem>\n              <Sort\n                options={[\n                  { title: t`Collection`, id: 'collection', type: 'alpha' },\n                ]}\n                params={params}\n                updateParams={({ sort }) =>\n                  updateParams(ParamHelper.setParam(params, 'sort', sort))\n                }\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n        {!!itemCount && (\n          <Pagination\n            params={params}\n            updateParams={(p) => updateParams(p)}\n            count={itemCount}\n            isTop\n          />\n        )}\n      </div>\n\n      {usedByDependenciesLoading ? (\n        <LoadingPageSpinner />\n      ) : (\n        <>\n          {!itemCount ? (\n            <EmptyStateFilter />\n          ) : (\n            <>\n              <table className='hub-c-table-content pf-c-table pf-m-compact'>\n                <tbody>\n                  {usedByDependencies.map(\n                    ({ name, namespace, version, repository_list }, i) => (\n                      <tr key={i}>\n                        <td>\n                          <Link\n                            to={formatPath(\n                              Paths.collectionByRepo,\n                              {\n                                collection: name,\n                                namespace,\n                                repo: repository_list[0],\n                              },\n                              ParamHelper.getReduced(\n                                { version },\n                                ignoredParams,\n                              ),\n                            )}\n                          >\n                            {namespace + '.' + name} v{version}\n                          </Link>\n                        </td>\n                      </tr>\n                    ),\n                  )}\n                </tbody>\n              </table>\n              <Pagination\n                params={params}\n                updateParams={(params) => updateParams(params)}\n                count={itemCount}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch, ContentSummaryType } from 'src/api';\nimport { EmptyStateCustom } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities';\nimport './collection-content-list.scss';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: CollectionVersionSearch;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport const CollectionContentList = ({\n  contents,\n  collection,\n  params,\n  updateParams,\n}: IProps) => {\n  const ignoredParams = ['keywords', 'showing'];\n\n  const toShow: ContentSummaryType[] = [];\n  const summary = { all: 0 };\n  const showing = params.showing || 'all';\n  const keywords = params.keywords || '';\n\n  for (const c of contents) {\n    summary[c.content_type] ||= 0;\n\n    const keywordMatch = c.name.match(keywords);\n    const typeMatch = showing === 'all' ? true : c.content_type === showing;\n\n    // count only items matching keyword\n    if (keywordMatch) {\n      summary[c.content_type]++;\n      summary['all']++;\n    }\n\n    // show only items matching keyword + type\n    if (keywordMatch && typeMatch) {\n      toShow.push(c);\n    }\n  }\n\n  const { collection_version, repository } = collection;\n\n  return (\n    <div>\n      <div>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.keywords || ''}\n                onChange={(_e, val) =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', val))\n                }\n                onClear={() =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                }\n                aria-label={t`find-content`}\n                placeholder={t`Find content`}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n          <ToolbarGroup>\n            <ToolbarItem>{t`Showing:`}</ToolbarItem>\n            {Object.keys(summary).map((key) => (\n              <ToolbarItem\n                key={key}\n                className={cx({\n                  clickable: true,\n                  'hub-c-toolbar__item-selected-item': key === showing,\n                  'hub-c-toolbar__item-type-selector': true,\n                })}\n                onClick={() =>\n                  updateParams(ParamHelper.setParam(params, 'showing', key))\n                }\n              >\n                {key} ({summary[key]})\n              </ToolbarItem>\n            ))}\n          </ToolbarGroup>\n        </Toolbar>\n      </div>\n      <table className='hub-c-table-content pf-c-table pf-m-compact'>\n        <thead>\n          <tr>\n            <th>{t`Name`}</th>\n            <th>{t`Type`}</th>\n            <th>{t`Description`}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {toShow.map((content, i) => (\n            <tr key={i}>\n              <td>\n                <Link\n                  to={formatPath(\n                    Paths.collectionContentDocsByRepo,\n                    {\n                      collection: collection_version.name,\n                      namespace: collection_version.namespace,\n                      type: content.content_type,\n                      name: content.name,\n                      repo: repository.name,\n                    },\n                    ParamHelper.getReduced(params, ignoredParams),\n                  )}\n                >\n                  {content.name}\n                </Link>\n              </td>\n              <td>{content.content_type}</td>\n              <td>{content.description}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {summary.all <= 0 &&\n        repository.name === 'community' &&\n        renderCommunityWarningMessage()}\n    </div>\n  );\n};\n\nfunction renderCommunityWarningMessage() {\n  return (\n    <EmptyStateCustom\n      title={t`Warning`}\n      description={t`Community collections do not have docs nor content counts, but all content gets synchronized`}\n      icon={ExclamationTriangleIcon}\n    />\n  );\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  CodeBlock,\n  CodeBlockCode,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport React, { useState } from 'react';\nimport { CollectionAPI, CollectionVersionSearch } from 'src/api';\nimport { LoadingPageSpinner } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  collectionVersion: CollectionVersionSearch['collection_version'];\n  repository: CollectionVersionSearch['repository'];\n  addAlert: (status, statusText) => void;\n}\n\nexport const DownloadSignatureGridItem = ({\n  collectionVersion,\n  repository,\n  addAlert,\n}: IProps) => {\n  const { display_signatures } = useContext().featureFlags;\n  const [show, setShow] = useState(false);\n  const [signatures, setSignatures] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // No signature object\n  if (!display_signatures) {\n    return null;\n  }\n\n  React.useEffect(() => {\n    if (show && isLoading) {\n      const { namespace, name, version } = collectionVersion;\n\n      CollectionAPI.getSignatures(repository, namespace, name, version)\n        .then((res) => {\n          setSignatures(res.data.signatures);\n          setIsLoading(false);\n        })\n        .catch(({ code, message }) => {\n          addAlert(code, message);\n          setIsLoading(false);\n          setShow(false);\n        });\n    }\n  }, [show]);\n\n  return (\n    <>\n      <GridItem>\n        <Split hasGutter>\n          <SplitItem className='install-title'>{t`Signature`}</SplitItem>\n          <SplitItem>\n            <Button\n              style={{ padding: 0 }}\n              variant={ButtonVariant.link}\n              icon={<DownloadIcon />}\n              data-cy='toggle-signature-button'\n              onClick={() => {\n                setShow(!show);\n              }}\n            >\n              {show ? t`Hide the signature` : t`Show the signature`}\n            </Button>\n          </SplitItem>\n        </Split>\n      </GridItem>\n      <GridItem>\n        {show && (\n          <>\n            {isLoading ? (\n              <LoadingPageSpinner />\n            ) : (\n              signatures.map(({ signature }, idx) => (\n                <CodeBlock key={idx}>\n                  <CodeBlockCode>{signature}</CodeBlockCode>\n                </CodeBlock>\n              ))\n            )}\n          </>\n        )}\n      </GridItem>\n    </>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  Grid,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport {\n  ClipboardCopy,\n  LoadingPageSpinner,\n  LoginLink,\n  Tag,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\nimport './collection-info.scss';\nimport { DownloadSignatureGridItem } from './download-signature-grid-item';\n\ninterface IProps extends CollectionVersionSearch {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n  addAlert?: (variant, title, description?) => void;\n  content?: CollectionVersionContentType;\n}\n\nexport const CollectionInfo = ({\n  collection_version,\n  repository,\n  content,\n  params,\n  addAlert,\n}: IProps) => {\n  const downloadLinkRef = React.useRef<HTMLAnchorElement>(null);\n  const context = useContext();\n\n  let installCommand = `ansible-galaxy collection install ${collection_version.namespace}.${collection_version.name}`;\n\n  if (params.version) {\n    installCommand += `:${params.version}`;\n  }\n\n  if (!content) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <div className='pf-c-content info-panel'>\n      <h1>{t`Install`}</h1>\n      <Grid hasGutter={true}>\n        <GridItem>{collection_version.description}</GridItem>\n        <GridItem>\n          {collection_version.tags.map((tag, i) => (\n            <Tag key={i}>{tag.name}</Tag>\n          ))}\n        </GridItem>\n\n        {content.license?.length > 0 && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`License`}</SplitItem>\n              <SplitItem isFilled>\n                {content.license ? content.license.join(', ') : ''}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n        <GridItem>\n          <Split hasGutter={true}>\n            <SplitItem className='install-title'>{t`Installation`}</SplitItem>\n            <SplitItem isFilled>\n              <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n              <div>\n                <Trans>\n                  <b>Note:</b> Installing collections with ansible-galaxy is\n                  only supported in ansible 2.9+\n                </Trans>\n              </div>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem>\n          <Split hasGutter={true}>\n            <SplitItem className='install-title'>{t`Download`}</SplitItem>\n            {context.user.is_anonymous &&\n            !context.settings\n              .GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD ? (\n              <Alert\n                className={'hub-collection-download-alert'}\n                isInline\n                variant='warning'\n                title={\n                  <React.Fragment>\n                    {t`You have to be logged in to be able to download the tarball.`}{' '}\n                    <LoginLink />\n                  </React.Fragment>\n                }\n              />\n            ) : (\n              <SplitItem isFilled>\n                <div>\n                  <Trans>\n                    To download this collection, configure your client to\n                    connect to one of this repositories{' '}\n                    <Link\n                      to={formatPath(Paths.collectionDistributionsByRepo, {\n                        repo: repository.name,\n                        namespace: collection_version.namespace,\n                        collection: collection_version.name,\n                      })}\n                    >\n                      distributions\n                    </Link>\n                    .\n                  </Trans>\n                </div>\n                <a ref={downloadLinkRef} style={{ display: 'none' }} />\n                <Button\n                  className='download-button'\n                  variant='link'\n                  data-cy='download-collection-tarball-button'\n                  icon={<DownloadIcon />}\n                  onClick={() =>\n                    download(\n                      repository,\n                      collection_version.namespace,\n                      collection_version.name,\n                      collection_version.version,\n                      downloadLinkRef,\n                      addAlert,\n                    )\n                  }\n                >\n                  {t`Download tarball`}\n                </Button>\n              </SplitItem>\n            )}\n          </Split>\n        </GridItem>\n        <DownloadSignatureGridItem\n          collectionVersion={collection_version}\n          repository={repository}\n          addAlert={(status, statusText) =>\n            addAlert(\n              'danger',\n              t`Signatures could not be loaded.`,\n              errorMessage(status, statusText),\n            )\n          }\n        />\n        {content?.requires_ansible && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>\n                {t`Requires Ansible`}\n              </SplitItem>\n              <SplitItem isFilled data-cy='ansible-requirement'>\n                {content?.requires_ansible}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n\n        {content?.docs_blob?.collection_readme ? (\n          <GridItem>\n            <div className='hub-readme-container'>\n              <div\n                className='pf-c-content'\n                dangerouslySetInnerHTML={{\n                  __html: content?.docs_blob?.collection_readme.html,\n                }}\n              />\n              <div className='hub-fade-out' />\n            </div>\n            <Link\n              to={formatPath(\n                Paths.collectionDocsIndexByRepo,\n                {\n                  collection: collection_version.name,\n                  namespace: collection_version.namespace,\n                  repo: repository.name,\n                },\n                params,\n              )}\n            >\n              {t`Go to documentation`}\n            </Link>\n          </GridItem>\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nfunction download(\n  repository: CollectionVersionSearch['repository'],\n  namespace: string,\n  name: string,\n  version: string,\n  downloadLinkRef,\n  addAlert,\n) {\n  CollectionAPI.getDownloadURL(repository, namespace, name, version)\n    .then((downloadURL: string) => {\n      // By getting a reference to a hidden <a> tag, setting the href and\n      // programmatically clicking it, we can hold off on making the api\n      // calls to get the download URL until it's actually needed. Clicking\n      // the <a> tag also gets around all the problems using a popup with\n      // window.open() causes.\n      downloadLinkRef.current.href = downloadURL;\n      downloadLinkRef.current.click();\n    })\n    .catch((e) => {\n      const { status, statusText } = e.response;\n      addAlert(\n        'danger',\n        t`Collection \"${name}\" could not be downloaded.`,\n        errorMessage(status, statusText),\n      );\n    });\n}\n","import { t } from '@lingui/macro';\nimport {\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { capitalize } from 'lodash';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DocsBlobType } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  repository: string;\n  params: { keywords?: string };\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n  updateParams: (p) => void;\n  searchBarRef?: React.Ref<HTMLInputElement>;\n}\n\nexport const TableOfContents = (props: IProps) => {\n  const [docsBlob, setDocsBlob] = useState<DocsBlobType>(null);\n  const [table, setTable] = useState<Table>(null);\n\n  const collapsedCategories = [];\n  const { className, docs_blob, updateParams, params } = props;\n\n  if (!table || docsBlob !== docs_blob) {\n    setTable(parseLinks(docs_blob, props));\n    setDocsBlob(docs_blob);\n  }\n\n  return (\n    <div className={className}>\n      <Toolbar>\n        <ToolbarGroup>\n          <ToolbarItem>\n            <SearchInput\n              ref={props.searchBarRef}\n              value={params.keywords}\n              onChange={(_e, val) =>\n                updateParams(ParamHelper.setParam(params, 'keywords', val))\n              }\n              onClear={() =>\n                updateParams(ParamHelper.setParam(params, 'keywords', ''))\n              }\n              aria-label={t`find-content`}\n              placeholder={t`Find content`}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n      <Nav theme='light'>\n        <NavList>\n          {table != null &&\n            Object.keys(table).map((key) =>\n              table[key].length === 0\n                ? null\n                : renderLinks(\n                    table[key],\n                    key,\n                    props.params.keywords || '',\n                    collapsedCategories,\n                    props,\n                  ),\n            )}\n        </NavList>\n      </Nav>\n    </div>\n  );\n};\n\nfunction parseLinks(docs_blob: DocsBlobType, props): Table {\n  const { namespace, collection } = props;\n\n  const baseUrlParams = {\n    namespace: namespace,\n    collection: collection,\n    repo: props.repository,\n  };\n\n  const table = {\n    documentation: [] as DocsEntry[],\n    modules: [] as DocsEntry[],\n    roles: [] as DocsEntry[],\n    plugins: [] as DocsEntry[],\n    playbooks: [] as DocsEntry[],\n  };\n\n  table.documentation.push({\n    display: t`Readme`,\n    url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n    type: 'docs',\n    name: 'readme',\n  });\n\n  if (docs_blob.documentation_files) {\n    for (const file of docs_blob.documentation_files) {\n      const url = sanitizeDocsUrls(file.name);\n      table.documentation.push({\n        display: my_capitalize(file.name.split('.')[0].split('_').join(' ')),\n        url: formatPath(Paths.collectionDocsPageByRepo, {\n          ...baseUrlParams,\n          page: url,\n        }),\n        // selected: selectedType === 'docs' && selectedName === url,\n        type: 'docs',\n        name: url,\n      });\n    }\n  }\n\n  if (docs_blob.contents) {\n    for (const content of docs_blob.contents) {\n      switch (content.content_type) {\n        case 'role':\n          table.roles.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'module':\n          table.modules.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'playbook':\n          table.playbooks.push(getContentEntry(content, baseUrlParams));\n          break;\n        default:\n          table.plugins.push(getContentEntry(content, baseUrlParams));\n          break;\n      }\n    }\n  }\n\n  // Sort docs\n  for (const k of Object.keys(table)) {\n    table[k].sort((a, b) => {\n      // Make sure that anything starting with _ goes to the bottom\n      // of the list\n      if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n        return 1;\n      }\n      if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n        return -1;\n      }\n      return a.display > b.display ? 1 : -1;\n    });\n  }\n\n  return table;\n}\n\nfunction renderLinks(\n  links: DocsEntry[],\n  title,\n  filterString: string,\n  collapsedCategories,\n  props,\n) {\n  const isExpanded = !collapsedCategories.includes(title);\n  const filteredLinks = links.filter((link) =>\n    link.display.toLowerCase().includes(filterString.toLowerCase()),\n  );\n  return (\n    <NavExpandable\n      key={title}\n      title={capitalize(`${title} (${filteredLinks.length})`)}\n      isExpanded={isExpanded}\n      isActive={getSelectedCategory(props) === title}\n    >\n      {filteredLinks.map((link: DocsEntry, index) => (\n        <NavItem key={index} isActive={isSelected(link, props)}>\n          <Link\n            style={{\n              textOverflow: 'ellipses',\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n            }}\n            to={\n              link.url +\n              (Object.keys(props.params).length != 0\n                ? '?' + ParamHelper.getQueryString(props.params)\n                : '')\n            }\n          >\n            <span\n              style={{\n                textOverflow: 'ellipsis',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                display: 'block',\n              }}\n            >\n              {link.display}\n            </span>\n          </Link>\n        </NavItem>\n      ))}\n    </NavExpandable>\n  );\n}\n\nfunction isSelected(entry: DocsEntry, props): boolean {\n  // the readme's url is always docs/, so load it when the name is null\n  if (!props.selectedName && entry.name === 'readme') {\n    return true;\n  }\n\n  return (\n    // selected name and type are the values found for type and name\n    // in the page url\n    props.selectedName === entry.name && props.selectedType === entry.type\n  );\n}\n\nfunction getSelectedCategory(props): string {\n  const { selectedType } = props;\n  if (!selectedType || selectedType === 'docs') {\n    return 'documentation';\n  }\n\n  if (selectedType === 'role') {\n    return 'roles';\n  }\n\n  if (selectedType === 'module') {\n    return 'modules';\n  }\n\n  return 'plugins';\n}\n\nfunction my_capitalize(s: string) {\n  return s.slice(0, 1).toUpperCase() + s.slice(1);\n}\n\nfunction getContentEntry(content, base): DocsEntry {\n  return {\n    display: content.content_name,\n    url: formatPath(Paths.collectionContentDocsByRepo, {\n      ...base,\n      type: content.content_type,\n      name: content.content_name,\n    }),\n    name: content.content_name,\n    type: content.content_type,\n  };\n}\n","import { t } from '@lingui/macro';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\nimport './collection-filter.scss';\n\ninterface IProps {\n  ignoredParams: string[];\n  params: {\n    keywords?: string;\n    page?: number;\n    page_size?: number;\n    tags?: string[];\n    view_type?: string;\n    repository_name?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport const CollectionFilter = (props: IProps) => {\n  const context = useContext();\n  const [repositories, setRepositories] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState(null);\n\n  const loadRepos = () => {\n    AnsibleRepositoryAPI.list({\n      name__icontains: inputText,\n      pulp_label_select: '!hide_from_search',\n    }).then((res) => {\n      const repos = res.data.results.map(({ name }) => ({\n        id: name,\n        title: name,\n      }));\n      setRepositories(repos);\n    });\n  };\n\n  useEffect(() => {\n    if (selectedFilter === 'repository_name') {\n      loadRepos();\n    }\n  }, [selectedFilter]);\n\n  useEffect(() => {\n    setInputText(props.params['keywords'] || '');\n  }, [props.params.keywords]);\n\n  useEffect(() => {\n    setInputText(props.params['repository_name'] || '');\n  }, [props.params.repository_name]);\n\n  useEffect(() => {\n    if (inputText != '' && selectedFilter === 'repository_name') {\n      loadRepos();\n    }\n  }, [inputText]);\n\n  const { ignoredParams, params, updateParams } = props;\n  const { display_signatures, display_repositories } = context.featureFlags;\n  const displayTags = ignoredParams.includes('tags') === false;\n  const displayRepos =\n    ignoredParams.includes('repository_name') === false && display_repositories;\n  const displayNamespaces = ignoredParams.includes('namespace') === false;\n\n  const filterConfig = [\n    {\n      id: 'keywords',\n      title: t`Keywords`,\n    },\n    displayRepos && {\n      id: 'repository_name',\n      title: t`Repository`,\n      inputType: 'typeahead' as const,\n      options: repositories,\n    },\n    displayNamespaces && {\n      id: 'namespace',\n      title: t`Namespace`,\n    },\n    displayTags && {\n      id: 'tags',\n      title: t`Tag`,\n      inputType: 'multiple' as const,\n      options: Constants.COLLECTION_FILTER_TAGS.map((tag) => ({\n        id: tag,\n        title: tag,\n      })),\n    },\n    display_signatures && {\n      id: 'is_signed',\n      title: t`Sign state`,\n      inputType: 'select' as const,\n      options: [\n        { id: 'true', title: t`Signed` },\n        { id: 'false', title: t`Unsigned` },\n      ],\n    },\n  ].filter(Boolean);\n\n  return (\n    <Toolbar>\n      <ToolbarContent>\n        <ToolbarGroup style={{ marginLeft: 0 }}>\n          <ToolbarItem>\n            <CompoundFilter\n              inputText={inputText}\n              onChange={(text) => setInputText(text)}\n              updateParams={updateParams}\n              params={params}\n              filterConfig={filterConfig}\n              selectFilter={(selected) => {\n                setSelectedFilter(selected);\n              }}\n            />\n            <ToolbarItem>\n              <AppliedFilters\n                niceNames={{\n                  is_signed: t`Sign state`,\n                  tags: t`Tags`,\n                  keywords: t`Keywords`,\n                  repository_name: t`Repository`,\n                  namespace: t`Namespace`,\n                }}\n                niceValues={{\n                  is_signed: {\n                    false: t`unsigned`,\n                    true: t`signed`,\n                  },\n                }}\n                style={{ marginTop: '16px' }}\n                updateParams={updateParams}\n                params={params}\n                ignoredParams={ignoredParams}\n              />\n            </ToolbarItem>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </ToolbarContent>\n    </Toolbar>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { DataList } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionVersionSearch } from 'src/api';\nimport {\n  CollectionListItem,\n  EmptyStateFilter,\n  Pagination,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities';\nimport './list.scss';\n\ninterface IProps {\n  collections: CollectionVersionSearch[];\n  displaySignatures: boolean;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n  };\n  updateParams: (params) => void;\n  itemCount: number;\n  ignoredParams: string[];\n  collectionControls: (collection) => {\n    dropdownMenu?: React.ReactNode | null;\n    synclistSwitch?: React.ReactNode | null;\n    uploadButton?: React.ReactNode | null;\n  };\n}\n\n// only used in namespace detail, collections uses individual items\nexport const CollectionList = (props: IProps) => {\n  const {\n    collections,\n    collectionControls,\n    displaySignatures,\n    params,\n    updateParams,\n    ignoredParams,\n    itemCount,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <DataList aria-label={t`List of Collections`}>\n        {collections.length > 0 ? (\n          collections.map((c, i) => (\n            <CollectionListItem\n              key={i}\n              collection={c}\n              displaySignatures={displaySignatures}\n              showNamespace\n              {...collectionControls(c)}\n            />\n          ))\n        ) : (\n          <EmptyStateFilter\n            clearAllFilters={() => {\n              ParamHelper.clearAllFilters({\n                params,\n                ignoredParams,\n                updateParams,\n              });\n            }}\n          />\n        )}\n      </DataList>\n      <Pagination\n        params={params}\n        updateParams={(p) => updateParams(p)}\n        count={itemCount}\n      />\n    </React.Fragment>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Form,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  Grid,\n  GridItem,\n  Modal,\n  ModalVariant,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignAllCertificatesModal: React.FC<Props> = ({\n  name,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Sign all collections`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='sign-all'\n          data-cy='modal-sign-button'\n          variant={ButtonVariant.primary}\n          onClick={onSubmit}\n        >\n          {t`Sign all`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <p>\n            <Trans>\n              You are about to sign <strong>all versions</strong> under{' '}\n              <strong>{name}</strong>.\n            </Trans>\n          </p>\n        </GridItem>\n        <GridItem span={12}>\n          <Split hasGutter>\n            <SplitItem>\n              <Trans>Signed version(s)</Trans>\n            </SplitItem>\n            <SplitItem />\n            <SplitItem>\n              <Trans>Unsigned version(s)</Trans>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem span={12}>\n          <Form>\n            <FormGroup\n              fieldId='service-selector'\n              label={t`Signing service selector:`}\n            >\n              <FormSelect value='ansible-default' id='service-selector'>\n                <FormSelectOption\n                  value='ansible-default'\n                  label='ansible-default'\n                />\n              </FormSelect>\n            </FormGroup>\n          </Form>\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  version: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignSingleCertificateModal: React.FC<Props> = ({\n  name,\n  version,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => (\n  <Modal\n    variant={ModalVariant.medium}\n    title={t`Sign version ${version}`}\n    isOpen={isOpen}\n    onClose={onCancel}\n    actions={[\n      <Button\n        key='sign'\n        data-cy='modal-sign-button'\n        variant={ButtonVariant.primary}\n        onClick={onSubmit}\n      >\n        {t`Sign`}\n      </Button>,\n      <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n        {t`Cancel`}\n      </Button>,\n    ]}\n  >\n    <p>\n      <Trans>\n        You are about to sign <strong>version {version}</strong> under{' '}\n        <strong>{name}</strong>.\n      </Trans>\n    </p>\n  </Modal>\n);\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport React, { FC } from 'react';\n\ninterface Props extends LabelProps {\n  signState: 'signed' | 'unsigned';\n}\n\nexport const SignatureBadge: FC<Props> = ({\n  signState = 'unsigned',\n  isCompact = false,\n  ...props\n}) => {\n  const text = () => {\n    switch (signState) {\n      case 'signed':\n        return t`Signed`;\n      case 'unsigned':\n        return t`Unsigned`;\n    }\n  };\n\n  return (\n    <Label\n      data-cy='signature-badge'\n      variant='outline'\n      className='hub-signature-badge'\n      color={signState === 'signed' ? 'green' : 'orange'}\n      icon={\n        signState === 'signed' ? (\n          <CheckCircleIcon />\n        ) : (\n          <ExclamationTriangleIcon />\n        )\n      }\n      isCompact={isCompact}\n      {...props}\n    >\n      {text()}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  FileUpload,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface Props {\n  isOpen: boolean;\n  onSubmit: (file: File) => void;\n  onCancel: () => void;\n}\n\nexport const UploadSingCertificateModal: React.FC<Props> = ({\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  const [filename, setFilename] = useState('');\n  const [path, setPath] = useState<File | null>(null);\n\n  const handleFileInputChange = (e, file) => {\n    setFilename(file.name);\n    setPath(file);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Upload signature`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='upload'\n          variant={ButtonVariant.primary}\n          isDisabled={!filename}\n          onClick={() => {\n            onSubmit(path);\n            setFilename('');\n            setPath(null);\n          }}\n        >\n          {t`Upload`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <p>{t`Please select a signature file to upload.`}</p>\n      <FileUpload\n        id='certificate-file'\n        filename={filename}\n        filenamePlaceholder={t`Drag and drop a file or upload one.`}\n        browseButtonText={t`Select file`}\n        onFileInputChange={handleFileInputChange}\n        onClearClick={() => setFilename('')}\n      />\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  Flex,\n  FlexItem,\n  Label,\n  LabelGroup,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionVersionSearch } from 'src/api';\nimport {\n  CollectionNumericLabel,\n  DateComponent,\n  DeprecatedTag,\n  Logo,\n  Tag,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { chipGroupProps, convertContentSummaryCounts } from 'src/utilities';\nimport { SignatureBadge } from '../signing';\nimport './list-item.scss';\n\ninterface IProps {\n  collection: CollectionVersionSearch;\n  displaySignatures: boolean;\n  dropdownMenu?: React.ReactNode | null;\n  showNamespace?: boolean;\n  synclistSwitch?: React.ReactNode | null;\n  uploadButton?: React.ReactNode | null;\n}\n\nexport const CollectionListItem = ({\n  collection: {\n    collection_version,\n    namespace_metadata: namespace,\n    repository,\n    is_signed,\n    is_deprecated,\n  },\n  displaySignatures,\n  dropdownMenu,\n  showNamespace,\n  synclistSwitch,\n  uploadButton,\n}: IProps) => {\n  const { featureFlags } = useContext();\n  const cells = [];\n\n  const company = namespace?.company || collection_version.namespace;\n\n  if (showNamespace) {\n    cells.push(\n      <DataListCell isFilled={false} alignRight={false} key='ns'>\n        <Logo\n          alt={t`${company} logo`}\n          fallbackToDefault\n          image={namespace?.avatar_url}\n          size='130px'\n          unlockWidth\n          width='97px'\n        />\n      </DataListCell>,\n    );\n  }\n\n  const contentSummary = convertContentSummaryCounts(collection_version);\n\n  cells.push(\n    <DataListCell key='content'>\n      <div>\n        <Link\n          to={formatPath(Paths.collectionByRepo, {\n            collection: collection_version.name,\n            namespace: collection_version.namespace,\n            repo: repository.name,\n          })}\n          data-cy='CollectionList-name'\n        >\n          {collection_version.name}\n        </Link>\n        {is_deprecated && <DeprecatedTag />}\n        {showNamespace ? (\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by&nbsp;\n                <Link\n                  to={formatPath(Paths.namespaceDetail, {\n                    namespace: collection_version.namespace,\n                  })}\n                >\n                  {company}\n                </Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        ) : null}\n      </div>\n      <div className='hub-entry pf-l-flex pf-m-wrap'>\n        {Object.keys(contentSummary.contents).map((type) => (\n          <div key={type}>\n            <CollectionNumericLabel\n              count={contentSummary.contents[type]}\n              type={type}\n            />\n          </div>\n        ))}\n      </div>\n      <div className='hub-entry pf-l-flex pf-m-wrap'>\n        <LabelGroup {...chipGroupProps()}>\n          {collection_version.tags.map((tag, index) => (\n            <Tag key={index}>{tag.name}</Tag>\n          ))}\n        </LabelGroup>\n      </div>\n    </DataListCell>,\n  );\n\n  cells.push(\n    <DataListCell isFilled={false} alignRight key='stats'>\n      <Flex\n        direction={{ default: 'column' }}\n        alignItems={{ default: 'alignItemsFlexEnd' }}\n      >\n        <Flex\n          direction={{ default: 'column' }}\n          alignItems={{ default: 'alignItemsFlexStart' }}\n        >\n          {synclistSwitch && <FlexItem>{synclistSwitch}</FlexItem>}\n          {uploadButton || dropdownMenu ? (\n            <FlexItem>\n              {uploadButton}\n              {dropdownMenu || <span className='hidden-menu-space' />}\n            </FlexItem>\n          ) : null}\n          <FlexItem>\n            <div>\n              <Trans>\n                Updated <DateComponent date={collection_version.pulp_created} />\n              </Trans>\n            </div>\n            <div>v{collection_version.version}</div>\n          </FlexItem>\n        </Flex>\n        <Flex\n          direction={{ default: 'row' }}\n          alignSelf={{ default: 'alignSelfFlexStart' }}\n        >\n          {featureFlags.display_repositories ? (\n            <FlexItem>\n              <Label variant='outline'>\n                <Link\n                  to={formatPath(Paths.ansibleRepositoryDetail, {\n                    name: repository.name,\n                  })}\n                >\n                  {repository.name}\n                </Link>\n              </Label>\n            </FlexItem>\n          ) : null}\n          {displaySignatures ? (\n            <FlexItem>\n              <SignatureBadge\n                variant='outline'\n                signState={is_signed ? 'signed' : 'unsigned'}\n              />\n            </FlexItem>\n          ) : null}\n        </Flex>\n      </Flex>\n    </DataListCell>,\n  );\n\n  return (\n    <DataListItem data-cy='CollectionListItem'>\n      <DataListItemRow>\n        <DataListItemCells dataListCells={cells} />\n      </DataListItemRow>\n    </DataListItem>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  confirmAction?: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  confirmButtonTitle?: string;\n}\n\nexport const ConfirmModal = (props: IProps) => {\n  const {\n    cancelAction,\n    children,\n    confirmAction,\n    isDisabled,\n    title,\n    spinner,\n    confirmButtonTitle,\n  } = props;\n\n  return (\n    <Modal\n      actions={[\n        <Button\n          key='confirm'\n          onClick={confirmAction}\n          variant='primary'\n          isDisabled={isDisabled}\n        >\n          {confirmButtonTitle ? confirmButtonTitle : t`Yes`}\n          {spinner && <Spinner size='sm' />}\n        </Button>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={title}\n      titleIconVariant='warning'\n      variant='small'\n    >\n      {children}\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Dropdown,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownToggle,\n  DropdownToggleCheckbox,\n  Flex,\n  FlexItem,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  CollectionVersionSearch,\n  SigningServiceAPI,\n} from 'src/api';\nimport {\n  AlertType,\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  Pagination,\n  SortTable,\n} from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport {\n  RepositoriesUtils,\n  errorMessage,\n  parsePulpIDFromURL,\n  taskAlert,\n} from 'src/utilities';\n\ninterface IProps {\n  collection: CollectionVersionSearch;\n  closeAction: () => void;\n  addAlert: (alert: AlertType) => void;\n}\n\nexport const CopyCollectionToRepositoryModal = (props: IProps) => {\n  const [isSelectorOpen, setIsSelectorOpen] = useState(false);\n  const [isSelectorChecked, setIsSelectorChecked] = useState(false);\n  const [repositoryList, setRepositoryList] = useState<AnsibleRepositoryType[]>(\n    [],\n  );\n  const [fixedRepos, setFixedRepos] = useState<string[]>([]);\n  const [selectedRepos, setSelectedRepos] = useState<string[]>([]);\n  const [inputText, setInputText] = useState('');\n  const [itemsCount, setItemsCount] = useState(0);\n  // const [alerts, setAlerts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  const context = useContext();\n\n  useEffect(() => {\n    loadRepos();\n    loadAssociatedRepoList();\n  }, []);\n\n  useEffect(() => {\n    loadRepos();\n  }, [params]);\n\n  const loadRepos = async () => {\n    const par = { ...params };\n    par['name__contains'] = inputText;\n\n    setLoading(true);\n    const repos = await AnsibleRepositoryAPI.list(par);\n\n    setItemsCount(repos.data.count);\n    setRepositoryList(repos.data.results);\n    setLoading(false);\n  };\n\n  const loadAllRepos = () => {\n    setLoading(true);\n    // TODO: replace getAll pagination\n    RepositoriesUtils.listAll().then((repos) => {\n      setSelectedRepos(repos.map((repo) => repo.name));\n      setRepositoryList(repos);\n      setLoading(false);\n    });\n  };\n\n  const loadAssociatedRepoList = async () => {\n    const repoList = await RepositoriesUtils.getCollectionRepoList(\n      props.collection,\n    );\n    setFixedRepos(repoList);\n  };\n\n  const changeSelection = (name: string) => {\n    const checked = selectedRepos.includes(name);\n\n    if (checked) {\n      // remove\n      setSelectedRepos(selectedRepos.filter((element) => element != name));\n    } else {\n      // add\n      setSelectedRepos([...selectedRepos, name]);\n    }\n  };\n\n  const copyToRepositories = async () => {\n    setLoading(true);\n    const { collection_version, repository } = props.collection;\n\n    const pulpId = parsePulpIDFromURL(repository.pulp_href);\n\n    const signingServiceName =\n      context.settings.GALAXY_COLLECTION_SIGNING_SERVICE;\n\n    let signingService = null;\n    try {\n      const signingList = await SigningServiceAPI.list({\n        name: signingServiceName,\n      });\n      signingService = signingList.data.results[0].pulp_href;\n    } catch {\n      setLoading(false);\n      props.addAlert({\n        title: t`Failed to copy collection version.`,\n        variant: 'danger',\n        description: t`Signing service ${signingServiceName} not found`,\n      });\n      return;\n    }\n\n    const repoHrefs = repositoryList\n      .filter((repo) => selectedRepos.includes(repo.name))\n      .map((repo) => repo.pulp_href);\n\n    const copyParams = {\n      collection_versions: [collection_version.pulp_href],\n      destination_repositories: repoHrefs,\n    };\n    if (signingService) {\n      copyParams['signing_service'] = signingService;\n    }\n\n    AnsibleRepositoryAPI.copyCollectionVersion(pulpId, copyParams)\n      .then(({ data }) => {\n        selectedRepos.map((repo) => {\n          props.addAlert(\n            taskAlert(\n              data.task,\n              t`Started adding ${collection_version.namespace}.${collection_version.name} v${collection_version.version} from \"${repository.name}\" to repository \"${repo}\".`,\n            ),\n          );\n        });\n      })\n      .catch((e) => {\n        setLoading(false);\n        props.addAlert({\n          variant: 'danger',\n          title: t`Collection ${collection_version.namespace}.${collection_version.name} v${collection_version.version} could not be copied.`,\n          description: errorMessage(e.status, e.statusText),\n        });\n      });\n  };\n\n  const renderLabels = (repos: string[]) => {\n    const labels = (\n      <LabelGroup>\n        {repos.map((name, i) => (\n          <Label key={i} onClose={() => changeSelection(name)}>\n            {name}\n          </Label>\n        ))}\n      </LabelGroup>\n    );\n    return (\n      <Flex>\n        <FlexItem>\n          <b>{t`Selected`}</b>\n        </FlexItem>\n        <FlexItem>{labels}</FlexItem>\n      </Flex>\n    );\n  };\n\n  const renderMultipleSelector = () => {\n    const onToggle = (isOpen: boolean) => {\n      setIsSelectorOpen(isOpen);\n    };\n\n    const onFocus = () => {\n      const element = document.getElementById('toggle-split-button');\n      element.focus();\n    };\n\n    const onSelect = () => {\n      setIsSelectorOpen(false);\n      onFocus();\n    };\n\n    const selectAll = () => {\n      loadAllRepos();\n      setIsSelectorChecked(true);\n    };\n\n    const selectPage = () => {\n      setSelectedRepos(repositoryList.map((repo) => repo.name));\n      setIsSelectorChecked(true);\n    };\n\n    const deselectAll = () => {\n      setSelectedRepos([]);\n      setIsSelectorChecked(false);\n    };\n\n    const deselectPage = () => {\n      setSelectedRepos([]);\n      setIsSelectorChecked(false);\n    };\n\n    const onToggleCheckbox = () => {\n      setIsSelectorChecked(!isSelectorChecked);\n      if (isSelectorChecked) {\n        deselectPage();\n      } else {\n        selectPage();\n      }\n    };\n\n    const dropdownItems = [\n      <DropdownItem\n        onClick={selectPage}\n        key='select-page'\n      >{t`Select page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={selectAll}\n        key='select-all'\n      >{t`Select all (${itemsCount} items)`}</DropdownItem>,\n      <DropdownSeparator key='separator' />,\n      <DropdownItem\n        onClick={deselectPage}\n        key='deselect-page'\n      >{t`Deselect page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={deselectAll}\n        key='deselect-all'\n      >{t`Deselect all (${itemsCount} items)`}</DropdownItem>,\n    ];\n\n    return (\n      <Dropdown\n        onSelect={onSelect}\n        toggle={\n          <DropdownToggle\n            splitButtonItems={[\n              <DropdownToggleCheckbox\n                id='split-button-toggle-checkbox'\n                key='split-checkbox'\n                aria-label='Select all'\n                checked={isSelectorChecked}\n                onChange={onToggleCheckbox}\n              />,\n            ]}\n            onToggle={onToggle}\n            id='toggle-split-button'\n          />\n        }\n        isOpen={isSelectorOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  };\n\n  const renderTable = () => {\n    if (!props.collection) {\n      return;\n    }\n\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Name`,\n          type: 'alpha',\n          id: 'name',\n        },\n      ],\n    };\n\n    return (\n      <>\n        <table\n          aria-label={t`Collection versions`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={sortTableOptions}\n            params={params}\n            updateParams={(p) => setParams(p)}\n          />\n          <tbody>\n            {repositoryList.map((repo, i) => (\n              <CheckboxRow\n                rowIndex={i}\n                key={repo.name}\n                isSelected={\n                  fixedRepos.includes(repo.name) ||\n                  selectedRepos.includes(repo.name)\n                }\n                onSelect={() => {\n                  changeSelection(repo.name);\n                }}\n                isDisabled={fixedRepos.includes(repo.name)}\n                data-cy={`ApproveModal-CheckboxRow-row-${repo.name}`}\n              >\n                <td>\n                  <div>{repo.name}</div>\n                  <div>{repo.description}</div>\n                </td>\n              </CheckboxRow>\n            ))}\n          </tbody>\n        </table>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Modal\n        actions={[\n          <Button\n            key='confirm'\n            onClick={() => copyToRepositories()}\n            variant='primary'\n            isDisabled={selectedRepos.length <= 0 || loading}\n          >\n            {t`Select`}\n          </Button>,\n          <Button\n            key='cancel'\n            onClick={props.closeAction}\n            variant='link'\n            isDisabled={loading}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={props.closeAction}\n        title={t`Select repositories`}\n        variant='large'\n      >\n        <section className='modal-body' data-cy='modal-body'>\n          {renderLabels(selectedRepos)}\n          <div className='toolbar hub-toolbar'>\n            <Toolbar>\n              <ToolbarGroup>\n                <ToolbarItem>{renderMultipleSelector()}</ToolbarItem>\n                <ToolbarItem>\n                  <CompoundFilter\n                    inputText={inputText}\n                    onChange={(text) => {\n                      setInputText(text);\n                    }}\n                    updateParams={(p) => setParams(p)}\n                    params={params}\n                    filterConfig={[\n                      {\n                        id: 'name__icontains',\n                        title: t`Repository`,\n                      },\n                    ]}\n                  />\n                </ToolbarItem>\n              </ToolbarGroup>\n            </Toolbar>\n\n            <Pagination\n              params={params}\n              updateParams={(p) => setParams(p)}\n              count={itemsCount}\n              isTop\n            />\n          </div>\n          <div>\n            <AppliedFilters\n              updateParams={(p) => {\n                setParams(p);\n                setInputText('');\n              }}\n              params={params}\n              ignoredParams={['page_size', 'page', 'sort']}\n              niceNames={{\n                name__icontains: t`Name`,\n              }}\n            />\n          </div>\n\n          {loading ? <Spinner /> : renderTable()}\n\n          <div className='footer'>\n            <Pagination\n              params={params}\n              updateParams={(p) => setParams(p)}\n              count={itemsCount}\n            />\n          </div>\n        </section>\n      </Modal>\n    </>\n  );\n};\n","import * as moment from 'moment';\nimport React from 'react';\nimport { Tooltip } from 'src/components';\n\ninterface IProps {\n  date: string;\n}\n\nexport const DateComponent = (props: IProps) => {\n  const { date } = props;\n\n  return (\n    date && (\n      <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n        {moment(date).fromNow()}\n      </Tooltip>\n    )\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n}\n\nexport const DeleteAnsibleRemoteModal = ({\n  closeAction,\n  deleteAction,\n  name,\n}: IProps) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      title={t`Delete remote?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to delete the remote <b>{name}</b>?<br />\n          <b>Note:</b> This will also delete all associated resources under this\n          remote.\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Text } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  name: string;\n}\n\nexport const DeleteAnsibleRepositoryModal = ({\n  closeAction,\n  deleteAction,\n  name,\n}: IProps) => {\n  const [pending, setPending] = useState(false);\n\n  if (!name) {\n    return null;\n  }\n\n  return (\n    <DeleteModal\n      spinner={pending}\n      cancelAction={() => {\n        setPending(false);\n        closeAction();\n      }}\n      deleteAction={() => {\n        setPending(false);\n        deleteAction();\n      }}\n      isDisabled={pending}\n      title={t`Delete repository?`}\n    >\n      <Text>\n        <Trans>\n          Are you sure you want to delete the repository <b>{name}</b>?<br />\n          <b>Note:</b> This will also delete all associated resources under this\n          repository.\n        </Trans>\n      </Text>\n    </DeleteModal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Checkbox, Text } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionVersionSearch } from 'src/api';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  deleteCollection: CollectionVersionSearch;\n  collections: CollectionVersionSearch[];\n  isDeletionPending: boolean;\n  confirmDelete: boolean;\n  collectionVersion?: string;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  setConfirmDelete: (val) => void;\n  deleteFromRepo: string;\n}\n\nexport const DeleteCollectionModal = (props: IProps) => {\n  const {\n    deleteCollection,\n    collections,\n    isDeletionPending,\n    confirmDelete,\n    collectionVersion,\n    cancelAction,\n    deleteAction,\n    setConfirmDelete,\n    deleteFromRepo,\n  } = props;\n\n  const lastCollectionVersion = collectionVersion && collections.length === 1;\n\n  return (\n    deleteCollection && (\n      <DeleteModal\n        spinner={isDeletionPending}\n        cancelAction={() => cancelAction()}\n        deleteAction={() => deleteAction()}\n        isDisabled={!confirmDelete || isDeletionPending}\n        title={\n          collectionVersion\n            ? t`Delete collection version?`\n            : t`Delete collection?`\n        }\n      >\n        <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n          {collectionVersion ? (\n            <Trans>\n              Deleting{' '}\n              <b>\n                {deleteCollection.collection_version.name} v{collectionVersion}\n              </b>\n              , its data will be lost.\n            </Trans>\n          ) : (\n            <Trans>\n              Deleting <b>{deleteCollection.collection_version.name}</b>, its\n              data will be lost.\n            </Trans>\n          )}\n          {lastCollectionVersion ? (\n            <> {t`This will cause the entire collection to be deleted.`}</>\n          ) : null}\n          {deleteFromRepo ? (\n            <>\n              {' '}\n              {t`The collection will be deleted only from repository ${deleteFromRepo}.`}\n            </>\n          ) : null}\n        </Text>\n        <Checkbox\n          isChecked={confirmDelete}\n          onChange={setConfirmDelete}\n          label={t`I understand that this action cannot be undone.`}\n          id='delete_confirm'\n        />\n      </DeleteModal>\n    )\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Modal, ModalProps, Spinner } from '@patternfly/react-core';\nimport React from 'react';\n\nexport interface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  deleteAction: () => void;\n  isDisabled?: boolean;\n  isRemove?: boolean;\n  title: string;\n  spinner?: boolean;\n  'data-cy'?: string;\n  variant?: ModalProps['variant'];\n}\n\nexport const DeleteModal = ({\n  cancelAction,\n  children,\n  deleteAction,\n  isDisabled,\n  isRemove,\n  title,\n  spinner,\n  variant = 'small',\n}: IProps) => {\n  return (\n    <Modal\n      actions={[\n        <div data-cy='delete-button' key='delete'>\n          <Button\n            key='delete'\n            onClick={deleteAction}\n            variant='danger'\n            isDisabled={isDisabled}\n          >\n            {isRemove ? t`Remove` : t`Delete`}\n            {spinner && <Spinner size='sm' />}\n          </Button>\n        </div>,\n        <Button key='cancel' onClick={cancelAction} variant='link'>\n          {t`Cancel`}\n        </Button>,\n      ]}\n      isOpen={true}\n      onClose={cancelAction}\n      title={title}\n      titleIconVariant='warning'\n      variant={variant}\n      data-cy='modal_checkbox'\n    >\n      {children}\n    </Modal>\n  );\n};\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ComponentClass } from 'react';\nimport { ReactElement, ReactNode } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: ReactNode;\n  button?: ReactElement;\n  variant?: 'xs' | 'small' | 'large' | 'xl' | 'full';\n}\n\nexport const EmptyStateCustom = ({\n  icon,\n  title,\n  description,\n  button,\n  variant = 'small',\n}: IProps) => {\n  return (\n    <EmptyState variant={EmptyStateVariant[variant]} data-cy='EmptyState'>\n      <EmptyStateIcon icon={icon} />\n      <Title headingLevel='h4' size='lg'>\n        {title}\n      </Title>\n      <EmptyStateBody>{description}</EmptyStateBody>\n      {button && <EmptyStatePrimary>{button}</EmptyStatePrimary>}\n    </EmptyState>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  clearAllFilters?: () => void;\n}\n\nexport const EmptyStateFilter = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      title={t`No results found`}\n      description={t`No results match the filter criteria. Try changing your filter settings.`}\n      icon={SearchIcon}\n      button={\n        props.clearAllFilters ? (\n          <Button onClick={props.clearAllFilters} variant='link'>\n            {t`Clear all filters`}\n          </Button>\n        ) : null\n      }\n    />\n  );\n};\n","import { CubesIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport const EmptyStateNoData = (props: IProps) => {\n  return (\n    <EmptyStateCustom\n      icon={props.button ? PlusCircleIcon : CubesIcon}\n      title={props.title}\n      description={props.description}\n      button={props.button}\n    />\n  );\n};\n","import { t } from '@lingui/macro';\nimport { LockIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { LoginLink } from 'src/components';\nimport { EmptyStateCustom } from './empty-state-custom';\n\nexport const EmptyStateUnauthorized = () => {\n  return (\n    <EmptyStateCustom\n      icon={LockIcon}\n      title={t`You do not have access to Automation Hub`}\n      description={\n        <>\n          {t`Contact your organization administrator for more information.`}\n          <br />\n          <br />\n          <LoginLink button />\n        </>\n      }\n    />\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Tooltip } from '@patternfly/react-core';\nimport React from 'react';\nimport { ContainerRepositoryType } from 'src/api';\nimport { BaseHeader, Breadcrumbs, SignatureBadge, Tabs } from 'src/components';\nimport { Paths, formatEEPath, formatPath } from 'src/paths';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n  groupId?: number;\n  displaySignatures: boolean;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const { container, groupId, tab, displaySignatures } = this.props;\n\n    const tabs = [\n      { id: 'detail', name: t`Detail` },\n      { id: 'activity', name: t`Activity` },\n      { id: 'images', name: t`Images` },\n      { id: 'access', name: t`Access` },\n    ];\n\n    const last_sync_task = container.pulp.repository.remote?.last_sync_task;\n\n    return (\n      <BaseHeader\n        title={container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: formatPath(Paths.executionEnvironments),\n                name: t`Execution Environments`,\n              },\n              {\n                name: container.name,\n                url:\n                  tab === 'access'\n                    ? formatEEPath(Paths.executionEnvironmentDetail, {\n                        container: container.name,\n                      })\n                    : null,\n              },\n              tab === 'access'\n                ? {\n                    name: t`Access`,\n                    url: groupId\n                      ? formatEEPath(Paths.executionEnvironmentDetailAccess, {\n                          container: container.name,\n                        })\n                      : null,\n                  }\n                : null,\n              tab === 'access' && groupId\n                ? { name: t`Group ${groupId}` }\n                : null,\n            ].filter(Boolean)}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        {displaySignatures &&\n          this.props.container.pulp.repository.sign_state && (\n            <SignatureBadge\n              isCompact\n              signState={\n                this.props.container.pulp.repository.sign_state == 'signed'\n                  ? 'signed'\n                  : 'unsigned'\n              }\n            />\n          )}\n        {last_sync_task && (\n          <p className='hub-m-truncated'>\n            <Trans>\n              Last updated from registry {lastSynced({ last_sync_task })}\n            </Trans>{' '}\n            {lastSyncStatus({ last_sync_task })}\n          </p>\n        )}\n        <div style={{ height: '10px' }}>&nbsp;</div>\n        <Tooltip content={container.description}>\n          <p data-cy='description' className={'hub-m-truncated'}>\n            {container.description}\n          </p>\n        </Tooltip>\n\n        <span />\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab }}\n              updateParams={({ tab }) =>\n                this.props.updateState({ redirect: tab })\n              }\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport {\n  ContainerDistributionAPI,\n  ExecutionEnvironmentRegistryAPI,\n  ExecutionEnvironmentRemoteAPI,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AlertType,\n  HelperText,\n  closeAlertMixin,\n} from 'src/components';\nimport {\n  ErrorMessagesType,\n  alertErrorsWithoutFields,\n  chipGroupProps,\n  errorMessage,\n  isFieldValid,\n  isFormValid,\n  mapErrorMessages,\n} from 'src/utilities';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  onSave: (Promise, state?: IState) => void;\n  onCancel: () => void;\n  permissions: string[];\n  distributionPulpId: string;\n\n  // remote only\n  isNew?: boolean;\n  isRemote?: boolean;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registry?: string; // pk\n  upstreamName?: string;\n  remoteId?: string;\n  addAlert?: (variant, title, description?) => void;\n}\n\ninterface IState {\n  name: string;\n  description: string;\n  alerts: AlertType[];\n  addTagsInclude: string;\n  addTagsExclude: string;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registries?: { id: string; name: string }[];\n  registrySelection?: { id: string; name: string }[];\n  upstreamName: string;\n  formErrors: ErrorMessagesType;\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name || '',\n      description: this.props.description,\n\n      addTagsInclude: '',\n      addTagsExclude: '',\n      excludeTags: this.props.excludeTags,\n      includeTags: this.props.includeTags,\n      registries: null,\n      registrySelection: [],\n      upstreamName: this.props.upstreamName || '',\n      formErrors: {},\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isRemote) {\n      this.loadRegistries()\n        .then(() => {\n          // prefill registry if passed from props\n          if (this.props.registry) {\n            this.setState({\n              registrySelection: this.state.registries.filter(\n                ({ id }) => id === this.props.registry,\n              ),\n            });\n          }\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          const errorTitle = t`Registries list could not be displayed.`;\n          this.addAlert({\n            variant: 'danger',\n            title: errorTitle,\n            description: errorMessage(status, statusText),\n          });\n          this.setState({\n            formErrors: { ...this.state.formErrors, registries: errorTitle },\n          });\n        });\n    }\n  }\n\n  render() {\n    const { onSave, onCancel, namespace, isNew, isRemote } = this.props;\n    const {\n      name,\n      description,\n      upstreamName,\n      excludeTags,\n      includeTags,\n      registrySelection,\n      registries,\n      addTagsInclude,\n      addTagsExclude,\n      formErrors,\n    } = this.state;\n\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={\n          isNew ? t`Add execution environment` : t`Edit execution environment`\n        }\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            isDisabled={!this.formIsValid()}\n            onClick={() => onSave(this.onSave(), this.state)}\n          >\n            {t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        <Form>\n          {!isRemote ? (\n            <>\n              <FormGroup key='name' fieldId='name' label={t`Name`}>\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='namespace'\n                fieldId='namespace'\n                label={t`Container namespace`}\n              >\n                <TextInput\n                  id='namespace'\n                  value={namespace}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n            </>\n          ) : (\n            <>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                helperTextInvalid={this.state.formErrors['name']}\n                validated={isFieldValid(this.state.formErrors, 'name')}\n              >\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={!isNew}\n                  onChange={(value) => {\n                    this.setState({ name: value });\n                    this.validateName(value);\n                  }}\n                  validated={isFieldValid(this.state.formErrors, 'name')}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='upstreamName'\n                fieldId='upstreamName'\n                label={t`Upstream name`}\n                isRequired={true}\n                labelIcon={\n                  <HelperText\n                    content={t`Use the namespace/name format for namespaced containers. Otherwise, use the library/name format.`}\n                  />\n                }\n              >\n                <TextInput\n                  id='upstreamName'\n                  value={upstreamName}\n                  onChange={(value) => this.setState({ upstreamName: value })}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='registry'\n                fieldId='registry'\n                label={t`Registry`}\n                className='hub-formgroup-registry'\n                isRequired={true}\n                helperTextInvalid={\n                  this.state.formErrors['registries'] ||\n                  this.state.formErrors['registry']\n                }\n                validated={isFieldValid(this.state.formErrors, [\n                  'registries',\n                  'registry',\n                ])}\n              >\n                {!formErrors?.registries && (\n                  <>\n                    {registries ? (\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.loadRegistries(name)}\n                        onClear={() => this.setState({ registrySelection: [] })}\n                        onSelect={(event, value) =>\n                          this.setState({\n                            registrySelection: registries.filter(\n                              ({ name }) => name === value,\n                            ),\n                            formErrors: { ...formErrors, registry: null },\n                          })\n                        }\n                        placeholderText={t`Select a registry`}\n                        results={registries}\n                        selections={registrySelection}\n                      />\n                    ) : (\n                      <Spinner />\n                    )}\n                  </>\n                )}\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsInclude'\n                label={t`Add tag(s) to include`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsInclude'\n                    value={addTagsInclude}\n                    onChange={(val) => this.setState({ addTagsInclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsInclude, 'includeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsInclude, 'includeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently included tags`}\n              >\n                <LabelGroup\n                  {...chipGroupProps()}\n                  id='remove-tag'\n                  defaultIsOpen={true}\n                >\n                  {includeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'includeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsExclude'\n                label={t`Add tag(s) to exclude`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsExclude'\n                    value={addTagsExclude}\n                    onChange={(val) => this.setState({ addTagsExclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsExclude, 'excludeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsExclude, 'excludeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently excluded tags`}\n              >\n                <LabelGroup\n                  {...chipGroupProps()}\n                  id='remove-tag'\n                  defaultIsOpen={true}\n                >\n                  {excludeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'excludeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n            </>\n          )}\n\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label={t`Description`}\n          >\n            <TextArea\n              id='description'\n              value={description || ''}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={(value) => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateName(name) {\n    const regex = /^([0-9A-Za-z._-]+\\/)?[0-9A-Za-z._-]+$/;\n    if (name === '' || regex.test(name)) {\n      this.setState({ formErrors: { ...this.state.formErrors, name: null } });\n      return;\n    } else {\n      const error = t`Container names can only contain alphanumeric characters, \".\", \"_\", \"-\" and a up to one \"/\".`;\n      this.setState({ formErrors: { ...this.state.formErrors, name: error } });\n    }\n  }\n\n  private formIsValid() {\n    const { name, upstreamName, registrySelection } = this.state;\n    if (!this.props.isRemote) {\n      // no validation for local\n      return true;\n    }\n\n    if (!isFormValid(this.state.formErrors)) {\n      return false;\n    }\n\n    // validation for non empty fields\n    return name && upstreamName && registrySelection.length;\n  }\n\n  private loadRegistries(name?) {\n    return ExecutionEnvironmentRegistryAPI.list({\n      ...(name ? { name__icontains: name } : {}),\n    }).then(({ data }) => {\n      const registries = data.data.map(({ id, name }) => ({ id, name }));\n      this.setState({ registries });\n      return registries;\n    });\n  }\n\n  private addTags(tags, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    tags.split(/\\s+|\\s*,\\s*/).forEach((tag) => current.add(tag));\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      [key === 'includeTags' ? 'addTagsInclude' : 'addTagsExclude']: '',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private removeTag(tag, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    current.delete(tag);\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private onSave() {\n    const {\n      description: originalDescription,\n      distributionPulpId,\n      isNew,\n      isRemote,\n      name: originalName,\n      remoteId,\n    } = this.props;\n    const {\n      description,\n      excludeTags: exclude_tags,\n      includeTags: include_tags,\n      name,\n      registrySelection: [{ id: registry } = { id: null }],\n      upstreamName: upstream_name,\n    } = this.state;\n\n    let promise = null;\n    if (isRemote && isNew) {\n      promise = ExecutionEnvironmentRemoteAPI.create({\n        name,\n        upstream_name,\n        registry,\n        include_tags,\n        exclude_tags,\n      });\n    } else {\n      promise = Promise.all([\n        // remote edit - upstream, tags, registry\n        isRemote &&\n          !isNew &&\n          ExecutionEnvironmentRemoteAPI.update(remoteId, {\n            name: originalName, // readonly but required\n            upstream_name,\n            registry,\n            include_tags,\n            exclude_tags,\n          }),\n        // remote edit or local edit - description, if changed\n        description !== originalDescription &&\n          ContainerDistributionAPI.patch(distributionPulpId, { description }),\n      ]);\n    }\n\n    return promise.catch((e) => {\n      this.setState({ formErrors: mapErrorMessages(e) });\n      alertErrorsWithoutFields(\n        this.state.formErrors,\n        ['name', 'registry', 'registries'],\n        (alert) => this.addAlert(alert),\n        t`Error when saving registry.`,\n        (state) => this.setState({ formErrors: state }),\n      );\n      return Promise.reject(new Error(e));\n    });\n  }\n\n  private addAlert(alert) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  AlertActionLink,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport {\n  ContainerManifestType,\n  ContainerRepositoryType,\n  ContainerTagAPI,\n  ExecutionEnvironmentAPI,\n  PulpStatus,\n  TaskAPI,\n} from 'src/api';\nimport { AlertType } from 'src/components';\nimport { chipGroupProps, parsePulpIDFromURL } from 'src/utilities';\n\ninterface IState {\n  tagsToAdd: string[];\n  tagsToRemove: string[];\n  isSaving: boolean;\n  tagInForm: string;\n  verifyingTag: boolean;\n  tagToVerify: string;\n  pendingTasks: number;\n  tagInFormError: string;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  closeModal: () => void;\n  containerManifest: ContainerManifestType;\n  reloadManifests: () => void;\n  repositoryName: string;\n  onAlert: (alert: AlertType) => void;\n  containerRepository: ContainerRepositoryType;\n}\n\ninterface ITaskUrls {\n  tag: string;\n  task: string;\n}\n\nconst VALID_TAG_REGEX = /^[A-Za-z0-9][A-Za-z0-9._-]*$/;\n\nexport class TagManifestModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSaving: false,\n      tagsToAdd: [],\n      tagsToRemove: [],\n      tagInForm: '',\n      verifyingTag: false,\n      tagToVerify: '',\n      tagInFormError: undefined,\n      pendingTasks: 0,\n    };\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    // if the containtainer manifest changes, reset the state\n\n    if (this.props.containerManifest !== prevProps.containerManifest) {\n      // Don't reset pending tasks and isSaving. This will prevent the user from\n      // editing another image while one is already being updated\n      this.setState({\n        tagsToAdd: [],\n        tagsToRemove: [],\n        tagInForm: '',\n        verifyingTag: false,\n        tagToVerify: '',\n        tagInFormError: undefined,\n      });\n    }\n  }\n\n  render() {\n    const { closeModal, isOpen, containerManifest } = this.props;\n\n    const {\n      tagInForm,\n      isSaving,\n      tagToVerify,\n      verifyingTag,\n      tagsToAdd,\n      tagsToRemove,\n      pendingTasks,\n      tagInFormError,\n    } = this.state;\n    if (!containerManifest) {\n      return null;\n    }\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='save'\n            onClick={() => this.saveTags()}\n            isDisabled={\n              isSaving || (tagsToAdd.length <= 0 && tagsToRemove.length <= 0)\n            }\n          >\n            {t`Save`}\n            {isSaving && <Spinner size='sm' />}\n          </Button>,\n          <Button\n            isDisabled={isSaving}\n            key='cancel'\n            onClick={() => closeModal()}\n            variant='link'\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={isOpen}\n        onClose={() => closeModal()}\n        title={t`Manage tags`}\n        variant='small'\n      >\n        {/*\n        The Form component will reload the page when it's \"submitted\" which causes the page\n        to reload when the user hits \"enter\" or clicks \"Show Less\" on the LabelGroup\n        */}\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <FormGroup\n            validated={tagInFormError ? 'error' : 'default'}\n            helperTextInvalid={tagInFormError}\n            fieldId='add-new-tag'\n            label={t`Add new tag`}\n          >\n            <InputGroup>\n              <TextInput\n                validated={tagInFormError ? 'error' : 'default'}\n                type='text'\n                id='add-new-tag'\n                value={tagInForm}\n                onChange={(val) => this.setState({ tagInForm: val })}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n                onKeyUp={(e) => {\n                  // l10n: don't translate\n                  if (e.key === 'Enter') {\n                    this.verifyAndAddTag();\n                  }\n                }}\n              />\n              <Button\n                aria-label={t`Add new tag to image`}\n                variant='secondary'\n                onClick={this.verifyAndAddTag}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n              >\n                {t`Add`} {verifyingTag && <Spinner size='sm' />}\n              </Button>\n            </InputGroup>\n          </FormGroup>\n          {tagToVerify && (\n            <Alert\n              variant='warning'\n              isInline\n              title={t`This tag already exists on another image. Do you want to move it to this image?`}\n              actionLinks={\n                <>\n                  <AlertActionLink\n                    onClick={() =>\n                      this.setState({ tagToVerify: '', tagInForm: '' }, () =>\n                        this.addTag(tagToVerify),\n                      )\n                    }\n                  >\n                    {t`Yes`}\n                  </AlertActionLink>\n                  <AlertActionLink\n                    onClick={() => this.setState({ tagToVerify: '' })}\n                  >\n                    {t`No`}\n                  </AlertActionLink>\n                </>\n              }\n            />\n          )}\n\n          <FormGroup fieldId='remove-tag' label={t`Current tags`}>\n            <LabelGroup\n              {...chipGroupProps()}\n              id='remove-tag'\n              defaultIsOpen={true}\n            >\n              {this.getCurrentTags().map((tag) => (\n                <Label\n                  disabled={isSaving}\n                  icon={<TagIcon />}\n                  onClose={isSaving ? undefined : () => this.removeTag(tag)}\n                  key={tag}\n                >\n                  {tag}\n                </Label>\n              ))}\n            </LabelGroup>\n          </FormGroup>\n          {pendingTasks > 0 && (\n            <Alert\n              isInline\n              variant='info'\n              title={\n                <Trans>Waiting for {pendingTasks} task(s) to finish.</Trans>\n              }\n            >\n              <Trans>\n                It&apos;s safe to close this window. These tasks will finish in\n                the background.\n              </Trans>\n            </Alert>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateTagName(tag) {\n    return tag.match(VALID_TAG_REGEX);\n  }\n\n  private handleFailedTag = (tag, error, operation) => {\n    let msg = undefined;\n\n    if (error.response.data['tag']) {\n      msg = error.response.data.tag.join(' ');\n    }\n\n    if (error.response.data['detail']) {\n      msg = error.response.data['detail'];\n    }\n\n    this.props.onAlert({\n      variant: 'danger',\n      title: t`Failed to ${operation} tag \"${tag}\".`,\n      description: msg,\n    });\n  };\n\n  private saveTags() {\n    const { containerManifest } = this.props;\n\n    this.setState({ isSaving: true }, () => {\n      const repository: ContainerRepositoryType =\n        this.props.containerRepository;\n\n      const promises = [];\n\n      for (const tag of this.state.tagsToRemove) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.untag(\n            repository.pulp.repository.id,\n            tag,\n          ).catch((e) => this.handleFailedTag(tag, e, 'remove')),\n        });\n      }\n\n      for (const tag of this.state.tagsToAdd) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.tag(\n            repository.pulp.repository.id,\n            tag,\n            containerManifest.digest,\n          ).catch((e) => this.handleFailedTag(tag, e, 'add')),\n        });\n      }\n\n      if (promises.length > 0) {\n        Promise.all(promises.map((p) => p.promise)).then((results) => {\n          const tasks: ITaskUrls[] = [];\n          for (const r in results) {\n            if (results[r]) {\n              tasks.push({\n                tag: promises[r].tag,\n                task: parsePulpIDFromURL(results[r].data.task),\n              });\n            }\n          }\n\n          this.waitForTasks(tasks);\n        });\n      } else {\n        this.setState({ isSaving: false });\n      }\n    });\n  }\n\n  // FIXME merge with waitForTask from utilities\n  private waitForTasks(taskUrls: ITaskUrls[]) {\n    const pending = new Set(taskUrls.map((i) => i.task));\n\n    const queryTasks = () => {\n      const promises = [];\n      for (const task of Array.from(pending)) {\n        promises.push(TaskAPI.get(task as string));\n      }\n\n      Promise.all(promises).then(async (results) => {\n        for (const r of results) {\n          const status = r.data.state;\n          if (\n            status === PulpStatus.completed ||\n            status === PulpStatus.skipped ||\n            status === PulpStatus.failed ||\n            status === PulpStatus.canceled\n          ) {\n            pending.delete(r.data.pulp_id);\n\n            if (\n              status === PulpStatus.skipped ||\n              status === PulpStatus.failed ||\n              status === PulpStatus.canceled\n            ) {\n              const tag = taskUrls.find((e) => e.task === r.data.pulp_id);\n              this.props.onAlert({\n                variant: 'danger',\n                title: t`Task to change tag \"${tag.tag}\" could not be completed.`,\n                description: t`Reason: task ${r.data.state}`,\n              });\n            }\n          }\n        }\n        if (pending.size > 0) {\n          // wait 5 seconds and then refresn\n          this.setState({ pendingTasks: pending.size });\n          await new Promise((r) => setTimeout(r, 5000));\n          queryTasks();\n        } else {\n          this.setState({ isSaving: false, pendingTasks: 0 }, () =>\n            this.props.reloadManifests(),\n          );\n        }\n      });\n    };\n\n    this.setState({ pendingTasks: pending.size }, queryTasks);\n  }\n\n  private verifyAndAddTag = () => {\n    // copy tag to prevent it from changing in the form during verification\n    const tag = `${this.state.tagInForm}`;\n\n    this.setState({ verifyingTag: true }, () => this.verifyTag(tag));\n  };\n\n  private verifyTag(tag: string) {\n    if (!this.validateTagName(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`A tag may contain lowercase and uppercase ASCII alphabetic characters, digits, underscores, periods, and dashes. A tag must not start with a period, underscore, or a dash.`,\n      });\n    } else if (this.getCurrentTags().includes(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`This tag is already selected for this image. You cannot add it twice.`,\n      });\n    } else {\n      this.setState({ tagInFormError: undefined }, () => {\n        ExecutionEnvironmentAPI.image(this.props.repositoryName, tag)\n          .then(() => {\n            this.setState({ tagToVerify: tag, verifyingTag: false });\n          })\n          .catch(() => {\n            this.setState({ tagInForm: '', verifyingTag: false }, () =>\n              this.addTag(tag),\n            );\n          });\n      });\n    }\n  }\n\n  private addTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.add(tag);\n    toRemove.delete(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private removeTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.delete(tag);\n    toRemove.add(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private getCurrentTags() {\n    const tags = new Set([\n      ...this.props.containerManifest.tags,\n      ...this.state.tagsToAdd,\n    ]);\n\n    for (const tag of this.state.tagsToRemove) {\n      tags.delete(tag);\n    }\n\n    return Array.from(tags.values());\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport './header.scss';\n\ninterface IProps {\n  title: string;\n  logo?: React.ReactNode;\n  breadcrumbs?: React.ReactNode;\n  pageControls?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  contextSelector?: React.ReactNode;\n  versionControl?: React.ReactNode;\n  status?: React.ReactNode;\n}\n\nexport class BaseHeader extends React.Component<IProps> {\n  render() {\n    const {\n      title,\n      logo,\n      pageControls,\n      children,\n      breadcrumbs,\n      className,\n      contextSelector,\n      versionControl,\n      status,\n    } = this.props;\n\n    return (\n      <div className={cx('background', className)}>\n        {contextSelector || null}\n        {breadcrumbs && (\n          <div className='breadcrumb-container'>{breadcrumbs}</div>\n        )}\n        {!breadcrumbs && !contextSelector && <div className='placeholder' />}\n\n        <div className='column-section'>\n          <div className='title-box'>\n            {logo}\n            <div>\n              <Title headingLevel='h1' size='2xl'>\n                {title}\n                {status}\n              </Title>\n            </div>\n          </div>\n          {pageControls || null}\n        </div>\n        {versionControl || null}\n\n        {children ? (\n          <div className='header-bottom'>{children}</div>\n        ) : (\n          <div className='placeholder' />\n        )}\n      </div>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  DropdownItem,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n  Select,\n  SelectOption,\n  SelectVariant,\n  Spinner,\n  Text,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport * as moment from 'moment';\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport {\n  CertificateUploadAPI,\n  CollectionAPI,\n  CollectionDetailType,\n  CollectionVersionAPI,\n  CollectionVersionContentType,\n  CollectionVersionSearch,\n  MyNamespaceAPI,\n  NamespaceAPI,\n  NamespaceType,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  CopyCollectionToRepositoryModal,\n  DeleteCollectionModal,\n  DownloadCount,\n  ImportModal,\n  LinkTabs,\n  Logo,\n  Pagination,\n  RepoSelector,\n  SignAllCertificatesModal,\n  SignSingleCertificateModal,\n  StatefulDropdown,\n  UploadSingCertificateModal,\n  closeAlertMixin,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport {\n  DeleteCollectionUtils,\n  ParamHelper,\n  RepositoriesUtils,\n  canSignNamespace,\n  errorMessage,\n  parsePulpIDFromURL,\n  waitForTask,\n} from 'src/utilities';\nimport { DateComponent } from '../date-component/date-component';\nimport { SignatureBadge } from '../signing';\nimport './header.scss';\n\ninterface IProps {\n  collections: CollectionVersionSearch[];\n  collectionsCount: number;\n  collection: CollectionVersionSearch;\n  actuallyCollection: CollectionDetailType;\n  content: CollectionVersionContentType;\n  params: {\n    version?: string;\n    latestVersion?: string;\n  };\n  updateParams: (params) => void;\n  breadcrumbs: BreadcrumbType[];\n  activeTab: string;\n  className?: string;\n  repo?: string;\n  reload: () => void;\n}\n\ninterface IState {\n  isOpenVersionsSelect: boolean;\n  isOpenVersionsModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenSignAllModal: boolean;\n  modalCollections: CollectionVersionSearch[];\n  modalPagination: {\n    page: number;\n    page_size: number;\n  };\n  deleteCollection: CollectionVersionSearch;\n  collectionVersion: string | null;\n  confirmDelete: boolean;\n  alerts: AlertType[];\n  redirect: string;\n  noDependencies: boolean;\n  isDeletionPending: boolean;\n  updateCollection: CollectionVersionSearch;\n  showImportModal: boolean;\n  uploadCertificateModalOpen: boolean;\n  versionToUploadCertificate: CollectionVersionSearch;\n  namespace: NamespaceType;\n  copyCollectionToRepositoryModal: CollectionVersionSearch;\n  deleteAll: boolean;\n}\n\nexport class CollectionHeader extends React.Component<IProps, IState> {\n  ignoreParams = ['showing', 'keywords'];\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenVersionsSelect: false,\n      isOpenVersionsModal: false,\n      isOpenSignModal: false,\n      isOpenSignAllModal: false,\n      modalCollections: null,\n      modalPagination: {\n        page: 1,\n        page_size: Constants.DEFAULT_PAGINATION_OPTIONS[0],\n      },\n      deleteCollection: null,\n      deleteAll: false,\n      collectionVersion: null,\n      confirmDelete: false,\n      alerts: [],\n      redirect: null,\n      noDependencies: false,\n      isDeletionPending: false,\n      updateCollection: null,\n      showImportModal: false,\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n      namespace: null,\n      copyCollectionToRepositoryModal: null,\n    };\n  }\n\n  componentDidMount() {\n    const { collection } = this.props;\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) => this.setState({ noDependencies }))\n      .catch((alert) => this.addAlert(alert));\n\n    NamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    }).then(({ data }) => {\n      this.setState({ namespace: data });\n    });\n\n    this.setState({ modalCollections: this.props.collections });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.collections !== prevProps.collections) {\n      this.setState({ modalCollections: this.props.collections });\n    }\n  }\n\n  render() {\n    const {\n      activeTab,\n      actuallyCollection,\n      breadcrumbs,\n      className,\n      collection,\n      collections,\n      collectionsCount,\n      content,\n      params,\n      updateParams,\n    } = this.props;\n\n    const {\n      modalCollections,\n      modalPagination,\n      isOpenVersionsModal,\n      isOpenVersionsSelect,\n      redirect,\n      noDependencies,\n      collectionVersion,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n      showImportModal,\n      updateCollection,\n      copyCollectionToRepositoryModal,\n    } = this.state;\n\n    const urlKeys = [\n      { key: 'documentation', name: t`Docs site` },\n      { key: 'homepage', name: t`Website` },\n      { key: 'issues', name: t`Issue tracker` },\n      { key: 'origin_repository', name: t`Repo` },\n    ];\n\n    const latestVersion = collection.collection_version.pulp_created;\n\n    const { display_signatures, can_upload_signatures, display_repositories } =\n      this.context.featureFlags;\n\n    const signedString = () => {\n      if (!display_signatures) {\n        return '';\n      }\n\n      return collection.is_signed ? t`(signed)` : t`(unsigned)`;\n    };\n\n    const isLatestVersion = (v) => {\n      return `${moment(v.pulp_created).fromNow()} ${signedString()}\n      ${\n        v.version === collections[0].collection_version.version\n          ? t`(latest)`\n          : ''\n      }`;\n    };\n    const { collection_version, namespace_metadata: namespace } = collection;\n    const { name: collectionName, version } = collection_version;\n\n    const company = namespace?.company || collection_version.namespace;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    const canSign = canSignNamespace(this.context, this.state.namespace);\n    const { hasPermission } = this.context;\n\n    const dropdownItems = [\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection: hasPermission('ansible.delete_collection'),\n        noDependencies,\n        onClick: () => this.openDeleteModalWithConfirm(null, true),\n        deleteAll: true,\n        display_repositories: display_repositories,\n      }),\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection: hasPermission('ansible.delete_collection'),\n        noDependencies,\n        onClick: () => this.openDeleteModalWithConfirm(null, false),\n        deleteAll: false,\n        display_repositories: display_repositories,\n      }),\n      hasPermission('ansible.delete_collection') && (\n        <DropdownItem\n          data-cy='delete-collection-version'\n          key='delete-collection-version'\n          onClick={() => this.openDeleteModalWithConfirm(version, true)}\n        >\n          {t`Delete version ${version} from system`}\n        </DropdownItem>\n      ),\n      hasPermission('ansible.delete_collection') && display_repositories && (\n        <DropdownItem\n          data-cy='remove-collection-version'\n          key='remove-collection-version'\n          onClick={() => this.openDeleteModalWithConfirm(version, false)}\n        >\n          {t`Delete version ${version} from repository`}\n        </DropdownItem>\n      ),\n      canSign && !can_upload_signatures && (\n        <DropdownItem\n          key='sign-all'\n          data-cy='sign-collection-button'\n          onClick={() => this.setState({ isOpenSignAllModal: true })}\n        >\n          {t`Sign entire collection`}\n        </DropdownItem>\n      ),\n      canSign && (\n        <DropdownItem\n          key='sign-version'\n          onClick={() => {\n            if (can_upload_signatures) {\n              this.setState({\n                uploadCertificateModalOpen: true,\n                versionToUploadCertificate: collection,\n              });\n            } else {\n              this.setState({ isOpenSignModal: true });\n            }\n          }}\n          data-cy='sign-version-button'\n        >\n          {t`Sign version ${version}`}\n        </DropdownItem>\n      ),\n      hasPermission('galaxy.upload_to_namespace') && (\n        <DropdownItem\n          onClick={() => this.deprecate(collection)}\n          key='deprecate'\n        >\n          {collection.is_deprecated ? t`Undeprecate` : t`Deprecate`}\n        </DropdownItem>\n      ),\n      <DropdownItem\n        key='upload-collection-version'\n        onClick={() => this.checkUploadPrivilleges(collection)}\n        data-cy='upload-collection-version-dropdown'\n      >\n        {t`Upload new version`}\n      </DropdownItem>,\n      display_repositories && (\n        <DropdownItem\n          key='copy-collection-version-to-repository-dropdown'\n          onClick={() => this.copyToRepository(collection)}\n          data-cy='copy-collection-version-to-repository-dropdown'\n        >\n          {t`Copy version ${version} to repositories`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n\n    const issueUrl =\n      'https://access.redhat.com/support/cases/#/case/new/open-case/describe-issue/recommendations?caseCreate=true&product=Ansible%20Automation%20Hub&version=Online&summary=' +\n      encodeURIComponent(\n        `${collection_version.namespace}-${collectionName}-${version}`,\n      );\n\n    const deleteFromRepo = this.state.deleteAll\n      ? null\n      : collection.repository.name;\n\n    return (\n      <React.Fragment>\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.collection_version.namespace,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection.collection_version}\n            namespace={updateCollection.collection_version.namespace}\n          />\n        )}\n        {canSign && (\n          <>\n            <UploadSingCertificateModal\n              isOpen={this.state.uploadCertificateModalOpen}\n              onCancel={() => this.closeUploadCertificateModal()}\n              onSubmit={(d) => this.submitCertificate(d)}\n            />\n            <SignAllCertificatesModal\n              name={collectionName}\n              isOpen={this.state.isOpenSignAllModal}\n              onSubmit={this.signCollection}\n              onCancel={() => {\n                this.setState({ isOpenSignAllModal: false });\n              }}\n            />\n            <SignSingleCertificateModal\n              name={collectionName}\n              version={version}\n              isOpen={this.state.isOpenSignModal}\n              onSubmit={this.signVersion}\n              onCancel={() => this.setState({ isOpenSignModal: false })}\n            />\n          </>\n        )}\n        <Modal\n          isOpen={isOpenVersionsModal}\n          title={t`Collection versions`}\n          variant='small'\n          onClose={() => this.setState({ isOpenVersionsModal: false })}\n        >\n          <List isPlain>\n            <div className='versions-modal-header'>\n              <Text>{t`${collectionName}'s versions.`}</Text>\n              <Pagination\n                isTop\n                params={modalPagination}\n                updateParams={this.updatePaginationParams}\n                count={collectionsCount}\n              />\n            </div>\n            {modalCollections ? (\n              modalCollections.map(({ collection_version }, i) => (\n                <ListItem key={i}>\n                  <Button\n                    variant='link'\n                    isInline\n                    onClick={() => {\n                      updateParams(\n                        ParamHelper.setParam(\n                          params,\n                          'version',\n                          collection_version.version.toString(),\n                        ),\n                      );\n                      this.setState({ isOpenVersionsModal: false });\n                    }}\n                  >\n                    v{collection_version.version}\n                  </Button>{' '}\n                  {t`updated ${isLatestVersion(collection_version)}`}\n                </ListItem>\n              ))\n            ) : (\n              <Spinner />\n            )}\n          </List>\n          <Pagination\n            params={modalPagination}\n            updateParams={this.updatePaginationParams}\n            count={collectionsCount}\n          />\n        </Modal>\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          collectionVersion={version}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () => {\n              collectionVersion\n                ? this.deleteCollectionVersion(collectionVersion)\n                : DeleteCollectionUtils.deleteCollection({\n                    collection: deleteCollection,\n                    setState: (state) => this.setState(state),\n                    load: null,\n                    redirect: formatPath(Paths.namespaceDetail, {\n                      namespace: deleteCollection.collection_version.namespace,\n                    }),\n                    addAlert: (alert) => this.context.queueAlert(alert),\n                    deleteFromRepo,\n                  });\n            })\n          }\n          deleteFromRepo={deleteFromRepo}\n        />\n        {copyCollectionToRepositoryModal && (\n          <CopyCollectionToRepositoryModal\n            collection={collection}\n            closeAction={() => {\n              this.setState({ copyCollectionToRepositoryModal: null });\n            }}\n            addAlert={(alert) => {\n              this.addAlert(alert);\n              this.setState({ copyCollectionToRepositoryModal: null });\n            }}\n          />\n        )}\n        <BaseHeader\n          className={className}\n          title={collection_version.name}\n          logo={\n            namespace?.avatar_url && (\n              <Logo\n                alt={t`${company} logo`}\n                className='image'\n                fallbackToDefault\n                image={namespace.avatar_url}\n                size='40px'\n                unlockWidth\n              />\n            )\n          }\n          contextSelector={\n            <RepoSelector selectedRepo={collection.repository.name} />\n          }\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          versionControl={\n            <div className='column-section'>\n              <div className='install-version-column'>\n                <span>{t`Version`}</span>\n                <div className='install-version-dropdown'>\n                  <Select\n                    isOpen={isOpenVersionsSelect}\n                    onToggle={(isOpenVersionsSelect) =>\n                      this.setState({ isOpenVersionsSelect })\n                    }\n                    variant={SelectVariant.single}\n                    onSelect={() =>\n                      this.setState({ isOpenVersionsSelect: false })\n                    }\n                    selections={`v${version}`}\n                    aria-label={t`Select collection version`}\n                    loadingVariant={\n                      collections.length < collectionsCount\n                        ? {\n                            text: t`View more`,\n                            onClick: () =>\n                              this.setState({\n                                isOpenVersionsModal: true,\n                                isOpenVersionsSelect: false,\n                              }),\n                          }\n                        : null\n                    }\n                  >\n                    {collections\n                      .map((c) => c.collection_version)\n                      .map((v) => (\n                        <SelectOption\n                          key={v.version}\n                          value={`v${v.version}`}\n                          onClick={() =>\n                            updateParams(\n                              ParamHelper.setParam(\n                                params,\n                                'version',\n                                v.version.toString(),\n                              ),\n                            )\n                          }\n                        >\n                          <Trans>\n                            {v.version} updated {isLatestVersion(v)}\n                          </Trans>\n                        </SelectOption>\n                      ))}\n                  </Select>\n                </div>\n                {latestVersion ? (\n                  <span className='last-updated'>\n                    <Trans>\n                      Last updated <DateComponent date={latestVersion} />\n                    </Trans>\n                  </span>\n                ) : null}\n                {display_signatures ? (\n                  <SignatureBadge\n                    isCompact\n                    signState={collection.is_signed ? 'signed' : 'unsigned'}\n                  />\n                ) : null}\n              </div>\n              <div style={{ alignSelf: 'center' }}>\n                <DownloadCount item={actuallyCollection} />\n              </div>\n            </div>\n          }\n          pageControls={\n            <Flex>\n              {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? (\n                <FlexItem>\n                  <a href={issueUrl} target='_blank' rel='noreferrer'>\n                    {t`Create issue`}\n                  </a>{' '}\n                  <ExternalLinkAltIcon />\n                </FlexItem>\n              ) : null}\n              {dropdownItems.length > 0 ? (\n                <FlexItem data-cy='kebab-toggle'>\n                  <StatefulDropdown items={dropdownItems} />\n                </FlexItem>\n              ) : null}\n            </Flex>\n          }\n        >\n          {collection.is_deprecated && (\n            <Alert\n              variant='danger'\n              isInline\n              title={t`This collection has been deprecated.`}\n            />\n          )}\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <div className='hub-tab-link-container'>\n            <div className='tabs'>{this.renderTabs(activeTab)}</div>\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {urlKeys.map((link) => {\n                const url = content[link.key];\n                if (!url) {\n                  return null;\n                }\n\n                return (\n                  <div className='link' key={link.key}>\n                    <a href={url} target='_blank' rel='noreferrer'>\n                      {link.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </BaseHeader>\n      </React.Fragment>\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.collection_version.namespace, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private renderTabs(active) {\n    const { params, collection } = this.props;\n    const pathParams = {\n      namespace: collection.collection_version.namespace,\n      collection: collection.collection_version.name,\n      repo: collection.repository.name,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'install',\n        title: t`Install`,\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: t`Documentation`,\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: t`Contents`,\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: t`Import log`,\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'dependencies',\n        title: t`Dependencies`,\n        link: formatPath(\n          Paths.collectionDependenciesByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'distributions',\n        title: t`Distributions`,\n        link: formatPath(\n          Paths.collectionDistributionsByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n\n  private async submitCertificate(file: File) {\n    const { collection_version: version, repository } =\n      this.state.versionToUploadCertificate;\n\n    const signed_collection =\n      this.props.collection.collection_version.pulp_href;\n\n    this.setState({\n      alerts: this.state.alerts.concat({\n        id: 'upload-certificate',\n        variant: 'info',\n        title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" is being uploaded.`,\n      }),\n    });\n\n    this.closeUploadCertificateModal();\n\n    CertificateUploadAPI.upload({\n      file,\n      repository: repository.pulp_href,\n      signed_collection,\n    })\n      .then((result) => {\n        return waitForTask(parsePulpIDFromURL(result.data.task)).then(() => {\n          if (this.props.reload) {\n            this.props.reload();\n          }\n          this.setState({\n            alerts: this.state.alerts\n              .filter(({ id }) => id !== 'upload-certificate')\n              .concat({\n                variant: 'success',\n                title: t`Certificate for collection \"${version.namespace} ${version.name} v${version.version}\" has been successfully uploaded.`,\n              }),\n          });\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          alerts: this.state.alerts\n            .filter(({ id }) => id !== 'upload-certificate')\n            .concat({\n              variant: 'danger',\n              title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" could not be saved.`,\n              description: error,\n            }),\n        });\n      });\n  }\n\n  private closeUploadCertificateModal() {\n    this.setState({\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    });\n  }\n\n  private updatePaginationParams = ({ page, page_size }) => {\n    const modalPagination = {\n      page,\n      page_size,\n    };\n\n    this.setState({ modalPagination, modalCollections: null });\n\n    const { namespace, name } = this.props.collection.collection_version;\n    const repository = this.props.collection.repository;\n    const requestParams = {\n      ...(repository ? { repository_name: repository.name } : {}),\n      namespace,\n      name,\n    };\n\n    // loadCollections provides initial data, pagination needs extra requests\n    CollectionVersionAPI.list({\n      ...requestParams,\n      order_by: '-version',\n      ...modalPagination,\n    })\n      .then(({ data }) => data)\n      .catch(() => ({ data: [] }))\n      .then(({ data: modalCollections }) =>\n        this.setState({ modalCollections }),\n      );\n  };\n\n  private signCollection = () => {\n    const { namespace, name } = this.props.collection.collection_version;\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all versions in the collection.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all versions in collection \"${name}\"`,\n        },\n      ],\n      isOpenSignAllModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository: this.props.collection.repository,\n      namespace: namespace,\n      collection: name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private signVersion = () => {\n    const { name, version, namespace } =\n      this.props.collection.collection_version;\n\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign the version.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for collection \"${name} v${version}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository: this.props.collection.repository,\n      namespace: namespace,\n      collection: name,\n      version: version,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private deprecate(collection) {\n    CollectionAPI.setDeprecation(collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.is_deprecated\n            ? t`The collection \"${collection.collection_version.name}\" has been successfully deprecated.`\n            : t`The collection \"${collection.collection_version.name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          if (this.props.reload) {\n            this.props.reload();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          collectionVersion: null,\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.is_deprecated\n                ? t`Collection \"${collection.collection_version.name}\" could not be deprecated.`\n                : t`Collection \"${collection.collection_version.name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private deleteCollectionVersion = (collectionVersion) => {\n    const { deleteCollection } = this.state;\n    const { collections } = this.props;\n    const { deleteAll } = this.state;\n\n    let promise = null;\n\n    if (deleteAll) {\n      promise = CollectionAPI.deleteCollectionVersion(deleteCollection);\n    } else {\n      promise = promise = RepositoriesUtils.deleteCollection(\n        deleteCollection.repository.name,\n        deleteCollection.collection_version.pulp_href,\n      );\n    }\n\n    const name = deleteCollection.collection_version.name;\n\n    promise\n      .then((res) => {\n        if (!deleteAll) {\n          return;\n        }\n\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId);\n      })\n      .then(() => {\n        const topVersion = (collections || []).filter(\n          ({ collection_version }) =>\n            collection_version.version !== collectionVersion,\n        );\n\n        if (topVersion.length) {\n          this.props.updateParams(\n            ParamHelper.setParam(\n              this.props.params,\n              'version',\n              topVersion[0].collection_version.version,\n            ),\n          );\n\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'success',\n                title: (\n                  <Trans>\n                    Collection &quot;{name} v{collectionVersion}&quot; has been\n                    successfully deleted.\n                  </Trans>\n                ),\n              },\n            ],\n          });\n        } else {\n          // last version in collection => collection will be deleted => redirect\n          this.context.queueAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Collection &quot;{name} v{collectionVersion}&quot; has been\n                successfully deleted.\n              </Trans>\n            ),\n          });\n          this.setState({\n            redirect: formatPath(Paths.namespaceDetail, {\n              namespace: deleteCollection.collection_version.namespace,\n            }),\n          });\n        }\n      })\n      .catch((err) => {\n        const {\n          data: { detail, dependent_collection_versions },\n          status,\n          statusText,\n        } = err.response;\n\n        if (status === 400) {\n          const dependencies = (\n            <>\n              <Trans>Dependent collections</Trans>\n              <List className='dependent-collections-alert-list'>\n                {dependent_collection_versions.map((d) => (\n                  <ListItem key={d}>{d}</ListItem>\n                ))}\n              </List>\n            </>\n          );\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: detail,\n                description: dependencies,\n              },\n            ],\n          });\n        } else {\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: t`Collection \"${deleteCollection.collection_version.name} v${collectionVersion}\" could not be deleted.`,\n                description: errorMessage(status, statusText),\n              },\n            ],\n          });\n        }\n      });\n  };\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private openDeleteModalWithConfirm(version = null, deleteAll = true) {\n    this.setState({\n      deleteCollection: this.props.collection,\n      collectionVersion: version,\n      confirmDelete: false,\n      deleteAll: deleteAll,\n    });\n  }\n\n  private copyToRepository(collection: CollectionVersionSearch) {\n    this.setState({ copyCollectionToRepositoryModal: collection });\n  }\n\n  private closeModal = () => {\n    this.setState({ deleteCollection: null });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { t } from '@lingui/macro';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Logo,\n  Tabs,\n  TabsType,\n} from 'src/components';\nimport './header.scss';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: TabsType[];\n  breadcrumbs: BreadcrumbType[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  filters?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps> {\n  render() {\n    const {\n      breadcrumbs,\n      filters,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n\n    const company = namespace.company || namespace.name;\n\n    return (\n      <BaseHeader\n        title={company}\n        logo={\n          namespace.avatar_url && (\n            <Logo\n              alt={t`${company} logo`}\n              className='image'\n              fallbackToDefault\n              image={namespace.avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          )\n        }\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        className='header'\n      >\n        {namespace.description ? <div>{namespace.description}</div> : null}\n\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={(p) => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <a href={x.url} target='blank'>\n                      {x.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n\n        {filters || null}\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n  header?: React.ReactNode;\n}\n\nexport class HelperText extends React.Component<IProps> {\n  render() {\n    return (\n      <Popover\n        aria-label={t`popover example`}\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n        headerContent={this.props.header}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Radio } from '@patternfly/react-core';\nimport { FolderOpenIcon, SpinnerIcon } from '@patternfly/react-icons';\nimport axios from 'axios';\nimport React from 'react';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  CollectionAPI,\n  CollectionUploadType,\n  CollectionVersionSearch,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  MultipleRepoSelector,\n  closeAlertMixin,\n} from 'src/components';\nimport { errorMessage, repositoryBasePath } from 'src/utilities';\nimport './import-modal.scss';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionVersionSearch['collection_version'];\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  uploadProgress: number;\n  uploadStatus: Status;\n  allRepos: AnsibleRepositoryType[];\n  loading: boolean;\n  alerts: AlertType[];\n  selectedRepos: string[];\n  onlyStaging: boolean;\n  fixedRepos: string[];\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+-[0-9a-z_]+-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n      allRepos: [],\n      loading: true,\n      alerts: [],\n      selectedRepos: [],\n      onlyStaging: true,\n      fixedRepos: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadAllRepos('staging');\n  }\n\n  private loadAllRepos(pipeline) {\n    let filter = {};\n    if (this.state.onlyStaging) {\n      filter = { pulp_label_select: `pipeline=${pipeline}` };\n    }\n\n    return AnsibleRepositoryAPI.list(filter)\n      .then((data) => {\n        this.setState({\n          allRepos: data.data.results,\n        });\n        this.setState({ loading: false });\n        if (data.data.results.length == 1) {\n          this.setState({ selectedRepos: [data.data.results[0].name] });\n        }\n\n        // fill repos that user cant select\n        let res = [];\n\n        if (!this.state.onlyStaging) {\n          res = data.data.results\n            .filter(\n              (repo) =>\n                repo.pulp_labels?.pipeline &&\n                repo.pulp_labels?.pipeline != 'staging',\n            )\n            .map((repo) => repo.name);\n        }\n\n        this.setState({ fixedRepos: res });\n      })\n      .catch((error) => {\n        this.addAlert(\n          t`Error loading repositories with label ${pipeline}.`,\n          'danger',\n          error?.message,\n        );\n        this.setState({ loading: false });\n      });\n  }\n\n  private addAlert(title, variant, description?) {\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          description,\n          title,\n          variant,\n        },\n      ],\n    });\n  }\n\n  private loadRepos(params, setRepositoryList, setLoading, setItemsCount) {\n    // modify params\n    const par = { ...params };\n    if (this.state.onlyStaging) {\n      par['pulp_label_select'] = 'pipeline=staging';\n    }\n\n    setLoading(true);\n    AnsibleRepositoryAPI.list(par)\n      .then((data) => {\n        setLoading(false);\n        setRepositoryList(data.data.results);\n        setItemsCount(data.data.count);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        setLoading(false);\n        this.addAlertObj({\n          title: t`Failed to load repositories.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  private addAlertObj(alert) {\n    this.addAlert(alert.title, alert.variant, alert.description);\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  render() {\n    const { isOpen, collection } = this.props;\n\n    const { file, errors, uploadProgress, uploadStatus } = this.state;\n\n    return (\n      <Modal\n        variant={'large'}\n        title={\n          collection ? t`New version of ${collection.name}` : t`New collection`\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={\n              !this.canUpload() || this.state.selectedRepos.length == 0\n            }\n            data-cy={'confirm-upload'}\n          >\n            {t`Upload`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={(e) => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : t`Select file`}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className='file-error-messages'>\n              <i className='pficon-error-circle-o' /> {errors}\n            </span>\n          ) : null}\n        </div>\n\n        <>\n          <br />\n          <Radio\n            isChecked={this.state.onlyStaging}\n            name='radio-1'\n            onChange={(val) => {\n              this.setState({ onlyStaging: val }, () =>\n                this.loadAllRepos('staging'),\n              );\n            }}\n            label={t`Staging Repos`}\n            id='radio-staging'\n          ></Radio>\n          <Radio\n            isChecked={!this.state.onlyStaging}\n            name='radio-2'\n            onChange={(val) => {\n              this.setState({ onlyStaging: !val }, () =>\n                this.loadAllRepos('staging'),\n              );\n            }}\n            label={t`All Repos`}\n            id='radio-all'\n          ></Radio>\n          {!this.state.onlyStaging && (\n            <>{t`Please note that those repositories are not filtered by permission, if operation fail, you don't have it.`}</>\n          )}\n\n          <MultipleRepoSelector\n            singleSelectionOnly={true}\n            allRepositories={this.state.allRepos}\n            fixedRepos={this.state.fixedRepos}\n            selectedRepos={this.state.selectedRepos}\n            setSelectedRepos={(repos) =>\n              this.setState({ selectedRepos: repos, errors: '' })\n            }\n            hideFixedRepos={true}\n            loadRepos={(params, setRepositoryList, setLoading, setItemsCount) =>\n              this.loadRepos(\n                params,\n                setRepositoryList,\n                setLoading,\n                setItemsCount,\n              )\n            }\n          />\n        </>\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors) {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin' />;\n      default:\n        return <FolderOpenIcon />;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: t`Please select no more than one file.`,\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      this.setState({\n        errors: t`Invalid file format.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: t`Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: t`The collection you have selected doesn't appear to match ${collection.name}`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: t`The collection you have selected does not match this namespace.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  async saveFile() {\n    const selectedRepos = this.state.selectedRepos;\n\n    this.setState({ uploadStatus: Status.uploading });\n\n    const distro_base_path = await repositoryBasePath(selectedRepos[0]).catch(\n      (error) => {\n        this.addAlert(error, 'danger');\n      },\n    );\n\n    if (!distro_base_path) {\n      this.setState({ uploadStatus: Status.waiting });\n      return;\n    }\n\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n      distro_base_path,\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      artifact,\n      (e) => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then((response) => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch((errors) => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (const err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  t`API error. Status code: ${err.status}`,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = t`API error. Status code: ${errors.response.status}`;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n        });\n      })\n      .finally(() => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = t`Collection upload canceled`;\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  DropdownItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LegacyNamespaceDetailType } from 'src/api';\nimport { Logo, StatefulDropdown } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport './legacy-namespace-item.scss';\n\ninterface LegacyNamespaceProps {\n  namespace: LegacyNamespaceDetailType;\n  openModal: (namespace) => void;\n}\n\nexport class LegacyNamespaceListItem extends React.Component<LegacyNamespaceProps> {\n  render() {\n    const { namespace } = this.props;\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    const cells = [];\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight={false} key='ns'>\n        <Logo\n          alt='logo'\n          fallbackToDefault\n          image={namespace.avatar_url}\n          size='40px'\n          unlockWidth\n          width='97px'\n        />\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell key='content' size={10}>\n        <div>\n          <Link to={namespace_url}>{namespace.name}</Link>\n        </div>\n      </DataListCell>,\n    );\n\n    const { ai_deny_index } = this.context.featureFlags;\n    const summary_fields = namespace.summary_fields;\n    const userOwnsLegacyNamespace = summary_fields?.owners?.filter(\n      (n) => n.username == this.context.user.username,\n    ).length;\n\n    const showWisdom =\n      ai_deny_index &&\n      (this.context.user.is_superuser || userOwnsLegacyNamespace);\n\n    const dropdownItems = [];\n\n    dropdownItems.push(\n      <DropdownItem onClick={() => this.props.openModal(namespace)}>\n        {t`Ansible Lightspeed settings`}\n      </DropdownItem>,\n    );\n\n    if (showWisdom) {\n      cells.push(\n        <DataListCell key='menu' alignRight={true}>\n          <div style={{ float: 'right' }}>\n            <StatefulDropdown items={dropdownItems} />\n          </div>\n        </DataListCell>,\n      );\n    }\n\n    return (\n      <DataListItem data-cy='LegacyNamespaceListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n\nLegacyNamespaceListItem.contextType = AppContext;\n","import { Trans, t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  LabelGroup,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LegacyRoleDetailType } from 'src/api';\nimport { DateComponent, DownloadCount, Logo, Tag } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { chipGroupProps } from 'src/utilities';\nimport './legacy-role-item.scss';\n\ninterface LegacyRoleProps {\n  role: LegacyRoleDetailType;\n  show_thumbnail: boolean;\n}\n\nexport class LegacyRoleListItem extends React.Component<LegacyRoleProps> {\n  render() {\n    const { role, show_thumbnail } = this.props;\n    const namespace = role.summary_fields.namespace;\n    const role_url = formatPath(Paths.legacyRole, {\n      username: role.github_user,\n      name: role.name,\n    });\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    let release_date = null;\n    let release_name = null;\n    const lv = role.summary_fields.versions[0];\n    if (lv !== undefined && lv !== null) {\n      release_date = lv.release_date;\n      release_name = lv.name;\n    }\n    if (\n      release_date === undefined ||\n      release_date === null ||\n      release_date === ''\n    ) {\n      release_date = role.modified;\n    }\n    if (\n      release_name === undefined ||\n      release_name === null ||\n      release_name === ''\n    ) {\n      release_name = '';\n    }\n\n    const cells = [];\n\n    if (show_thumbnail !== false) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={t`${role.github_user} logo`}\n            image={role.summary_fields.namespace.avatar_url}\n            size='70px'\n            unlockWidth\n            width='97px'\n          />\n        </DataListCell>,\n      );\n    }\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link to={role_url}>\n            {namespace.name}.{role.name}\n          </Link>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by <Link to={namespace_url}>{namespace.name}</Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        </div>\n        <div className='hub-entry'>{role.description}</div>\n        <div className='hub-entry'>\n          <LabelGroup {...chipGroupProps()}>\n            {role.summary_fields.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        <div className='hub-right-col hub-entry'>\n          <Trans>\n            Updated <DateComponent date={release_date} />\n          </Trans>\n        </div>\n        <div className='hub-entry'>{release_name}</div>\n        <div className='hub-entry'>\n          <DownloadCount item={role} />\n        </div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='LegacyRoleListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Dropdown,\n  DropdownPosition,\n  DropdownToggle,\n  KebabToggle,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNode[];\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n}\n\nexport const StatefulDropdown = ({\n  items,\n  onSelect: onSelectProp,\n  toggleType = 'kebab',\n  position,\n  defaultText,\n  isPlain = true,\n  ariaLabel,\n}: IProps) => {\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>(undefined);\n  const onToggle = (open) => setOpen(open);\n\n  return (\n    <Dropdown\n      onSelect={(e) =>\n        onSelect(e, { isOpen, onSelectProp, setOpen, setSelected })\n      }\n      toggle={renderToggle({ toggleType, defaultText, onToggle, selected })}\n      isOpen={isOpen}\n      isPlain={isPlain}\n      dropdownItems={items}\n      position={position || DropdownPosition.right}\n      autoFocus={false}\n      aria-label={ariaLabel}\n    />\n  );\n};\n\nfunction renderToggle({ toggleType, defaultText, onToggle, selected }) {\n  switch (toggleType) {\n    case 'dropdown':\n      return (\n        <DropdownToggle onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'icon':\n      return (\n        <DropdownToggle toggleIndicator={null} onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'kebab':\n      return <KebabToggle onToggle={onToggle} />;\n  }\n}\n\nfunction onSelect(event, { isOpen, onSelectProp, setOpen, setSelected }) {\n  setOpen(!isOpen);\n  setSelected(event.currentTarget.value);\n\n  if (onSelectProp) {\n    onSelectProp(event);\n  }\n}\n","import { List } from '@patternfly/react-core';\nimport React from 'react';\nimport { StatefulDropdown } from '../patternfly-wrappers/stateful-dropdown';\n\ninterface IProps {\n  kebabItems?: React.ReactNode[];\n  buttons?: React.ReactNode[];\n}\nexport class ListItemActions extends React.Component<IProps> {\n  render() {\n    const buttons = this.props.buttons?.filter(Boolean);\n    const kebabItems = this.props.kebabItems?.filter(Boolean);\n    const anyButtons = buttons?.length;\n    const anyKebab = kebabItems?.length;\n\n    return (\n      <td\n        style={{\n          paddingRight: anyKebab ? '0px' : '16px',\n          textAlign: 'right',\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        {anyButtons ? (\n          <>\n            <List>{buttons}</List>{' '}\n          </>\n        ) : null}\n        {anyKebab ? (\n          <div data-cy='kebab-toggle'>\n            <StatefulDropdown items={kebabItems} />{' '}\n          </div>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import { Bullseye, Spinner } from '@patternfly/react-core';\nimport React from 'react';\n\nexport class LoadingPageSpinner extends React.Component {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import { Skeleton, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { LoadingPageSpinner, Main } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <section\n          className={\n            'pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light'\n          }\n        >\n          <Title headingLevel='h1'>\n            <Skeleton />\n          </Title>\n        </section>\n        <Main>\n          <section>\n            <LoadingPageSpinner />\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  width?: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n  fallbackToDefault?: boolean;\n  flexGrow?: boolean;\n}\n\ninterface IState {\n  failed: boolean;\n}\n\nexport class Logo extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { failed: false };\n  }\n\n  render() {\n    const {\n      alt,\n      className,\n      fallbackToDefault,\n      image,\n      size,\n      unlockWidth,\n      width,\n      flexGrow,\n    } = this.props;\n    const { failed } = this.state;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: width,\n    };\n\n    if (flexGrow) {\n      style['flexGrow'] = 1;\n    }\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={failed ? DefaultLogo : image || DefaultLogo}\n          alt={alt}\n          onError={\n            fallbackToDefault\n              ? () => this.setState({ failed: true })\n              : () => null\n          }\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './markdown-editor.scss';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>{t`Raw Markdown`}</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={(value) => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && t`Preview`}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              <ReactMarkdown>{text || placeholder}</ReactMarkdown>\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Spinner, Tooltip } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CollectionVersionSearch,\n  ImportDetailType,\n  ImportListType,\n  PulpStatus,\n} from 'src/api';\nimport { StatusIndicator } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport './my-imports.scss';\n\ninterface IProps {\n  empty: boolean;\n  task: ImportDetailType;\n  followMessages: boolean;\n  selectedImport: ImportListType;\n  loading: boolean;\n  apiError?: string;\n\n  setFollowMessages: (follow: boolean) => void;\n  hideCollectionName?: boolean;\n  collection?: CollectionVersionSearch;\n}\n\nexport class ImportConsole extends React.Component<IProps> {\n  lastImport: React.RefObject<HTMLDivElement>;\n  isLoading = false;\n\n  constructor(props) {\n    super(props);\n\n    this.lastImport = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.followLogs();\n  }\n\n  componentDidMount() {\n    this.followLogs();\n  }\n\n  render() {\n    const { selectedImport, task, apiError, loading } = this.props;\n\n    if (loading || apiError) {\n      return (\n        <div className='hub-import-console'>\n          {selectedImport ? this.renderTitle(selectedImport) : null}\n          <div className='loading message-list'>\n            {apiError ? <div className='message'>{apiError}</div> : <Spinner />}\n          </div>\n        </div>\n      );\n    }\n\n    this.isLoading =\n      selectedImport.state === PulpStatus.running ||\n      selectedImport.state === PulpStatus.waiting;\n\n    return (\n      <div\n        className='hub-import-console pf-c-content'\n        data-cy={'ImportConsole'}\n      >\n        {this.renderTitle(selectedImport)}\n        <div className='message-list'>\n          <div\n            className={cx({\n              'follow-active': this.props.followMessages,\n              'log-follow-button': true,\n            })}\n          >\n            <Tooltip\n              position='left'\n              content={this.isLoading ? t`Follow logs` : t`Scroll to end`}\n            >\n              <span\n                onClick={() => this.handleScrollClick()}\n                className='fa fa-arrow-circle-down clickable'\n              />\n            </Tooltip>\n          </div>\n\n          {task.messages.map((x, i) => {\n            return this.renderMessage(x, i);\n          })}\n\n          {task.messages.length === 0 ? (\n            <div className='message'>\n              <span className='error'>{t`No task messages available`}</span>\n            </div>\n          ) : null}\n\n          {task.state === PulpStatus.completed && (\n            <div className='message'>\n              <br />\n              <span className='success'>{t`Done`}</span>\n            </div>\n          )}\n\n          {task.state === PulpStatus.failed && (\n            <div className='message'>\n              <br />\n              <span className='failed'>{t`Failed`}</span>\n            </div>\n          )}\n        </div>\n        <div className='last-message' key={'last'} ref={this.lastImport} />\n      </div>\n    );\n  }\n\n  private renderMessage(item, i) {\n    return (\n      <div className='message' key={i}>\n        <span className={item.level.toLowerCase()}>{item.message}&nbsp;</span>\n      </div>\n    );\n  }\n\n  private renderTitle(selectedImport) {\n    const { task, hideCollectionName, collection, empty } = this.props;\n\n    if (empty) {\n      return;\n    }\n\n    let collectionHead = (\n      <>\n        {selectedImport.namespace}.{selectedImport.name}\n      </>\n    );\n    let approvalStatus = t`waiting for import to finish`;\n\n    if (collection) {\n      const repoStatus = collection.repository.pulp_labels?.pipeline;\n      if (repoStatus === Constants.NOTCERTIFIED) {\n        approvalStatus = t`rejected`;\n      } else if (repoStatus === Constants.NEEDSREVIEW) {\n        approvalStatus = t`waiting for approval`;\n      } else if (repoStatus === Constants.APPROVED) {\n        approvalStatus = t`approved`;\n      } else {\n        approvalStatus = t`could not be determined yet`;\n      }\n\n      collectionHead = (\n        <Link\n          className='title'\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: selectedImport.namespace,\n              collection: selectedImport.name,\n              repo: collection?.repository.name,\n            },\n            {\n              version: selectedImport.version,\n            },\n          )}\n        >\n          {selectedImport.namespace}.{selectedImport.name}\n        </Link>\n      );\n    }\n\n    return (\n      <div>\n        {!hideCollectionName && (\n          <div className='title-container'>{collectionHead}</div>\n        )}\n\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>{t`Status:`}</span>{' '}\n            <StatusIndicator type='secondary' status={selectedImport.state} />\n          </div>\n          <div>\n            <span className='data-title'>{t`Approval status:`}</span>{' '}\n            {approvalStatus}\n          </div>\n          <div>\n            <span className='data-title'>{t`Version:`}</span>{' '}\n            {selectedImport.version}\n          </div>\n\n          {task && task.error ? (\n            <div>\n              <span className='data-title'>{t`Error message:`}</span>{' '}\n              {task.error.code}\n              <pre>\n                <code>{task.error.description}</code>\n              </pre>\n              <pre>\n                <code>{task.error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  private handleScrollClick() {\n    if (this.isLoading) {\n      this.props.setFollowMessages(!this.props.followMessages);\n    } else {\n      this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  private followLogs() {\n    if (this.props.followMessages && this.lastImport.current) {\n      window.requestAnimationFrame(() => {\n        this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n\n        if (!this.isLoading) {\n          this.props.setFollowMessages(false);\n        }\n      });\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Pagination, Toolbar } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport React from 'react';\nimport {\n  ImportListType,\n  MyNamespaceAPI,\n  NamespaceType,\n  PulpStatus,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AppliedFilters,\n  CompoundFilter,\n  DateComponent,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { ParamHelper, errorMessage, filterIsSet } from 'src/utilities';\nimport './my-imports.scss';\n\ninterface IProps {\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n  addAlert: (alert) => void;\n}\n\ninterface IState {\n  kwField: string;\n  inputText: string;\n  namespaces: NamespaceType[];\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n      inputText: '',\n      namespaces: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadNamespaces(this.props.params.namespace);\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    return (\n      <div className='import-list'>\n        {this.renderApiSearchAhead()}\n        <Toolbar>\n          <CompoundFilter\n            inputText={this.state.inputText}\n            onChange={(text) => this.setState({ inputText: text })}\n            updateParams={(p) => this.props.updateParams(p)}\n            params={params}\n            filterConfig={[\n              {\n                id: 'keywords',\n                title: t`Name`,\n              },\n              {\n                id: 'state',\n                title: t`Status`,\n                inputType: 'select',\n                options: [\n                  {\n                    id: 'completed',\n                    title: t`Completed`,\n                  },\n                  {\n                    id: 'failed',\n                    title: t`Failed`,\n                  },\n                  {\n                    id: 'running',\n                    title: t`Running`,\n                  },\n                  {\n                    id: 'waiting',\n                    title: t`Waiting`,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Toolbar>\n\n        <AppliedFilters\n          updateParams={(p) => {\n            this.props.updateParams(p);\n            this.setState({ inputText: '' });\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort', 'ordering', 'namespace']}\n          niceNames={{\n            keywords: t`Name`,\n            state: t`Status`,\n          }}\n        />\n\n        <div data-cy='import-list-data'>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        {this.props.params.namespace && (\n          <Pagination\n            itemCount={numberOfResults}\n            perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n            page={params.page || 1}\n            onSetPage={(_, p) =>\n              updateParams(ParamHelper.setParam(params, 'page', p))\n            }\n            onPerPageSelect={(_, p) => {\n              updateParams({ ...params, page: 1, page_size: p });\n            }}\n            isCompact={true}\n          />\n        )}\n      </div>\n    );\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (!this.props.params.namespace) {\n      return (\n        <EmptyStateNoData title={t`No namespace selected.`} description={''} />\n      );\n    }\n\n    if (loading) {\n      return (\n        <div className='loading'>\n          <LoadingPageSpinner />\n        </div>\n      );\n    }\n\n    if (\n      importList.length === 0 &&\n      !filterIsSet(this.props.params, ['keywords', 'state'])\n    ) {\n      return (\n        <EmptyStateNoData\n          title={t`No imports`}\n          description={t`There have not been any imports on this namespace.`}\n        />\n      );\n    } else if (importList.length === 0) {\n      return <EmptyStateFilter />;\n    }\n\n    return (\n      <div>\n        {importList.map((item) => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'hub-c-toolbar__item-selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n              data-cy={`ImportList-row-${item.name}`}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          <span data-cy='item-name'>{item.name}</span>{' '}\n          {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private loadNamespaces(namespace_filter) {\n    if (!namespace_filter) {\n      namespace_filter = '';\n    }\n    MyNamespaceAPI.list({ page_size: 10, keywords: namespace_filter })\n      .then((result) => {\n        this.setState({ namespaces: result.data.data });\n      })\n      .catch((e) =>\n        this.props.addAlert({\n          variant: 'danger',\n          title: t`Namespaces list could not be displayed.`,\n          description: errorMessage(e.status, e.statusText),\n        }),\n      );\n  }\n\n  private renderApiSearchAhead() {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>{t`Namespace`}</div>\n        <div className='selector'>\n          <APISearchTypeAhead\n            loadResults={(name) => this.loadNamespaces(name)}\n            onSelect={(event, value) => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                value,\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            onClear={() => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                '',\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            placeholderText={t`Select namespace`}\n            selections={[{ id: -1, name: this.props.params.namespace }]}\n            results={this.state.namespaces}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea, TextInput } from '@patternfly/react-core';\nimport { PlusCircleIcon, TrashIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { NamespaceCard } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, validateURLHelper } from 'src/utilities';\nimport './namespace-form.scss';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: ErrorMessagesType;\n\n  updateNamespace: (namespace) => void;\n}\n\nexport class NamespaceForm extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { namespace, errorMessages } = this.props;\n\n    if (!namespace) {\n      return null;\n    }\n\n    return (\n      <Form>\n        <div className='hub-card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label={t`Name`} isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label={t`Company name`}\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard {...namespace} />\n          </div>\n        </div>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label={t`Logo URL`}\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label={t`Description`}\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label={t`Useful links`}\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push(t`Text: ${errorMessages['links__name']}`);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push(t`URL: ${errorMessages['links__url']}`);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  public static validateName(link): {\n    validated: 'default' | 'error';\n    helperTextInvalid?: string;\n  } {\n    if (link.url) {\n      if (link.name) {\n        return { validated: 'default' };\n      } else {\n        return {\n          validated: 'error',\n          helperTextInvalid: t`Name must not be empty.`,\n        };\n      }\n    }\n\n    // if link url is empty, there is no need to insert name because the link data will be discarded\n    return { validated: 'default' };\n  }\n\n  public static validateUrl(link): ReturnType<typeof validateURLHelper> {\n    if (link.url) {\n      // only validate url if input is not blank, blank inputs are thrown away\n      return validateURLHelper(undefined, link.url);\n    }\n\n    if (link.name) {\n      return {\n        validated: 'error',\n        helperTextInvalid: t`URL must not be empty.`,\n      };\n    }\n\n    return { validated: 'default' };\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <FormGroup fieldId={'name'} {...NamespaceForm.validateName(link)}>\n            <TextInput\n              id='name'\n              type='text'\n              placeholder={t`Link text`}\n              value={link.name}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateName(link).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-url'>\n          <FormGroup fieldId={'link'} {...NamespaceForm.validateUrl(link)}>\n            <TextInput\n              id='url'\n              type='text'\n              placeholder={t`Link URL`}\n              value={link.url}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateUrl(link.url).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\nimport './namespace-form.scss';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport const ResourcesForm = ({ namespace, updateNamespace }: IProps) => (\n  <MarkdownEditor\n    text={namespace.resources}\n    placeholder={placeholder}\n    helperText={t`You can can customize the Resources tab on your profile by entering custom markdown here.`}\n    updateText={(resources) => updateNamespace({ ...namespace, resources })}\n    editing={true}\n  />\n);\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { NamespaceAPI } from 'src/api';\nimport { HelperText } from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  errorMessages: ErrorMessagesType;\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      errorMessages: {},\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = t`Please, provide the namespace name`;\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = t`Name can only contain letters and numbers`;\n    } else if (name.length <= 2) {\n      error['name'] = t`Name must be longer than 2 characters`;\n    } else if (name.startsWith('_')) {\n      error['name'] = t`Name cannot begin with '_'`;\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = () => {\n    const data = {\n      name: this.state.newNamespaceName,\n      groups: [],\n    };\n    NamespaceAPI.create(data)\n      .then(() => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch((error) => {\n        const result = error.response;\n        const messages = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newNamespaceNameValid } = this.state;\n\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        title={t`Create a new namespace`}\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            {t`Create`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.handleSubmit();\n          }}\n        >\n          <FormGroup\n            label={t`Name`}\n            isRequired\n            fieldId='name'\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={t`Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.`}\n                header={t`Namespace name`}\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={(value) => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import { plural } from '@lingui/macro';\nimport React from 'react';\n\ninterface IProps {\n  number: number;\n  newline?: boolean;\n  label: string;\n}\n\nfunction roundNumber(n: number): string {\n  if (n < 1000) {\n    // returns 1 to 999\n    return n.toString();\n  } else if (n < 10000) {\n    // returns 1K to 9.9K\n    return (Math.floor(n / 100) / 10).toString() + 'K';\n  } else if (n < 1000000) {\n    // returns 10K to 999K\n    return Math.floor(n / 1000).toString() + 'K';\n  } else if (n < 100000000) {\n    // returns 1M to 9.9M\n    return (Math.floor(n / 100000) / 10).toString() + 'M';\n  } else if (n < 1000000000) {\n    return Math.floor(n / 1000000).toString() + 'M';\n  }\n\n  // If larger than a billion, don't even bother.\n  return '1B+';\n}\n\nconst NumericLabel = ({ number, newline, label }: IProps) => {\n  let numberElem = <span key='number'>{roundNumber(number)} </span>;\n  let labelElem = (\n    <span key='label' className='hub-numeric-label-label'>\n      {label}\n    </span>\n  );\n\n  if (newline) {\n    numberElem = <div>{numberElem}</div>;\n    labelElem = <div>{labelElem}</div>;\n  }\n\n  return (\n    <div>\n      {numberElem}\n      {labelElem}\n    </div>\n  );\n};\n\ninterface ICNLProps {\n  count: number;\n  newline?: boolean;\n  type: string;\n}\n\nconst label = (count, type) =>\n  ({\n    module: plural(count, {\n      one: 'Module',\n      other: 'Modules',\n    }),\n    role: plural(count, {\n      one: 'Role',\n      other: 'Roles',\n    }),\n    plugin: plural(count, {\n      one: 'Plugin',\n      other: 'Plugins',\n    }),\n    dependency: plural(count, {\n      one: 'Dependency',\n      other: 'Dependencies',\n    }),\n  })[type] || type;\n\nexport const CollectionNumericLabel = ({ count, newline, type }: ICNLProps) => (\n  <NumericLabel number={count} newline={newline} label={label(count, type)} />\n);\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  BaseHeader,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  EmptyStateUnauthorized,\n  FilterOption,\n  LoadingPageSpinner,\n  Main,\n  Pagination,\n  SortTable,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport {\n  ParamHelper,\n  RouteProps,\n  errorMessage,\n  filterIsSet,\n  withRouter,\n} from 'src/utilities';\n\ninterface IState<T> {\n  params: {\n    page?: number;\n    page_size?: number;\n  };\n  loading: boolean;\n  items: T[];\n  itemCount: number;\n  alerts: AlertType[];\n  unauthorised: boolean;\n  inputText: string;\n  selectedFilter: string;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// noData - no data at all, EmptyStateNoData with possible buttons\n// !items.length - no visible data but a filter is on, EmptyStateFilter with a clear filters button, CompoundFilter + AppliedFilters\n// (data) - also renders SortTable\n\ninterface ParamsType {\n  page?: number;\n  page_size?: number;\n}\n\nexport type Query<T> = (o: {\n  params?: ParamsType;\n}) => Promise<{ data: { count: number; results: T[] } }>;\n\nexport type RenderTableRow<T> = (\n  item: T,\n  index: number,\n  { addAlert, setState = null },\n  listItemActions?,\n) => React.ReactNode;\n\ntype RenderModals = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ntype SortHeaders = {\n  title: MessageDescriptor;\n  type: string;\n  id: string;\n  className?: string;\n}[];\n\nexport type LocalizedSortHeaders = {\n  title: string;\n  type: string;\n  id: string;\n  className?: string;\n}[];\n\ninterface ListPageParams<T> {\n  condition: PermissionContextType;\n  defaultPageSize: number;\n  defaultSort?: string;\n  displayName: string;\n  errorTitle: MessageDescriptor;\n  filterConfig: ({ state }) => FilterOption[];\n  headerActions?: ActionType[];\n  listItemActions?: ActionType[];\n  noDataButton?: (item, actionContext) => React.ReactNode;\n  noDataDescription: MessageDescriptor;\n  noDataTitle: MessageDescriptor;\n  query: Query<T>;\n  renderModals?: RenderModals;\n  renderTableRow: RenderTableRow<T>;\n  sortHeaders: SortHeaders;\n  title: MessageDescriptor;\n  typeaheadQuery?: ({ inputText, selectedFilter, setState }) => void;\n}\n\nexport const ListPage = function <T>({\n  // { featureFlags, settings, user } => bool\n  condition,\n  // component name for debugging\n  displayName,\n  // initial page size\n  defaultPageSize,\n  // initial sort ordering\n  defaultSort,\n  // alert on query failure\n  errorTitle,\n  // filters\n  filterConfig,\n  // displayed after filters\n  headerActions,\n  // only used for modals; renderTableRow handles the rest\n  listItemActions,\n  // EmptyStateNoData\n  noDataButton,\n  noDataDescription,\n  noDataTitle,\n  // ({ params }) => Promise<{ data: { count, results[] } }>\n  query,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  // (item, index) => <tr>...</tr>\n  renderTableRow,\n  // table headers\n  sortHeaders,\n  // container title\n  title,\n  // for typeahed filters\n  typeaheadQuery,\n}: ListPageParams<T>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n        {listItemActions?.length\n          ? listItemActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const translateTitle = ({ title, ...rest }: any) => ({\n    ...rest,\n    title: i18n._(title),\n  });\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      const params = ParamHelper.parseParamString(props.location.search, [\n        'page',\n        'page_size',\n      ]);\n\n      if (!params['page_size']) {\n        params['page_size'] = defaultPageSize;\n      }\n\n      if (!params['sort'] && defaultSort) {\n        params['sort'] = defaultSort;\n      }\n\n      this.state = {\n        alerts: [],\n        inputText: '',\n        itemCount: 0,\n        items: [],\n        loading: true,\n        params,\n        selectedFilter: null,\n        unauthorised: false,\n      };\n    }\n\n    componentDidMount() {\n      if (!condition(this.context)) {\n        this.setState({ loading: false, unauthorised: true });\n      } else {\n        this.query();\n      }\n\n      this.setState({ alerts: this.context.alerts || [] });\n      this.context.setAlerts([]);\n    }\n\n    render() {\n      const { alerts, itemCount, items, loading, params, unauthorised } =\n        this.state;\n\n      const localizedFilterConfig = filterConfig({ state: this.state }) || [];\n      const knownFilters = localizedFilterConfig.map(({ id }) => id);\n      const noData = items.length === 0 && !filterIsSet(params, knownFilters);\n\n      const updateParams = (p) => this.updateParams(p, () => this.query());\n\n      const niceNames = Object.fromEntries(\n        localizedFilterConfig.map(({ id, title }) => [id, title]),\n      );\n\n      const niceValues = {};\n      localizedFilterConfig\n        .filter(({ options }) => options?.length)\n        .forEach(({ id: filterId, options }) => {\n          const obj = (niceValues[filterId] = {});\n          options.forEach(({ id: optionId, title }) => {\n            obj[optionId] = title;\n          });\n        });\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: () => false, // list items don't load my_permissions .. but superadmin should still work\n        hasPermission: this.context.hasPermission,\n        listQuery: () => this.query(),\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const resetCompoundFilter = () =>\n        this.setState({\n          inputText: '',\n          selectedFilter: localizedFilterConfig[0].id,\n        });\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader title={i18n._(title)} />\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : noData && !loading ? (\n            <EmptyStateNoData\n              button={<>{noDataButton?.(null, actionContext)}</>}\n              description={i18n._(noDataDescription)}\n              title={i18n._(noDataTitle)}\n            />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section className='body' data-cy={`ListPage-${displayName}`}>\n                  <div className='hub-list-toolbar'>\n                    <Toolbar>\n                      <ToolbarContent>\n                        <ToolbarGroup>\n                          <ToolbarItem>\n                            <CompoundFilter\n                              inputText={this.state.inputText}\n                              onChange={(inputText) => {\n                                this.setState({ inputText });\n\n                                if (typeaheadQuery) {\n                                  typeaheadQuery({\n                                    inputText,\n                                    selectedFilter: this.state.selectedFilter,\n                                    setState: (s) => this.setState(s),\n                                  });\n                                }\n                              }}\n                              updateParams={(p) => {\n                                resetCompoundFilter();\n                                updateParams(p);\n                              }}\n                              params={params}\n                              filterConfig={localizedFilterConfig}\n                              selectFilter={(selectedFilter) => {\n                                this.setState({ selectedFilter });\n\n                                if (typeaheadQuery) {\n                                  typeaheadQuery({\n                                    inputText: '',\n                                    selectedFilter,\n                                    setState: (s) => this.setState(s),\n                                  });\n                                }\n                              }}\n                            />\n                          </ToolbarItem>\n                          {headerActions?.length &&\n                            headerActions.map((action) => (\n                              <ToolbarItem key={action.title}>\n                                {action.button(null, actionContext)}\n                              </ToolbarItem>\n                            ))}\n                        </ToolbarGroup>\n                      </ToolbarContent>\n                    </Toolbar>\n\n                    <Pagination\n                      params={params}\n                      updateParams={updateParams}\n                      count={itemCount}\n                      isTop\n                    />\n                  </div>\n                  <div>\n                    <AppliedFilters\n                      updateParams={(p) => {\n                        resetCompoundFilter();\n                        updateParams(p);\n                      }}\n                      params={params}\n                      ignoredParams={['page_size', 'page', 'sort', 'ordering']}\n                      niceNames={niceNames}\n                      niceValues={niceValues}\n                    />\n                  </div>\n                  {loading ? (\n                    <LoadingPageSpinner />\n                  ) : (\n                    this.renderTable(params, updateParams, actionContext)\n                  )}\n\n                  <Pagination\n                    params={params}\n                    updateParams={updateParams}\n                    count={itemCount}\n                  />\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private renderTable(params, updateParams, actionContext) {\n      const { items } = this.state;\n\n      if (!items.length) {\n        return <EmptyStateFilter />;\n      }\n\n      const localizedSortHeaders = (sortHeaders || []).map(\n        translateTitle,\n      ) as LocalizedSortHeaders;\n\n      return (\n        <table\n          aria-label={i18n._(title)}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{ headers: localizedSortHeaders }}\n            params={params}\n            updateParams={updateParams}\n          />\n          <tbody>\n            {items.map((item, i) => renderTableRow(item, i, actionContext))}\n          </tbody>\n        </table>\n      );\n    }\n\n    private query() {\n      this.setState({ loading: true }, () => {\n        query({ params: this.state.params })\n          .then((result) => {\n            this.setState({\n              items: result.data.results,\n              itemCount: result.data.count,\n              loading: false,\n            });\n          })\n          .catch((e) => {\n            const { status, statusText } = e.response;\n            this.setState({\n              loading: false,\n              items: [],\n              itemCount: 0,\n            });\n            this.addAlert({\n              title: i18n._(errorTitle),\n              variant: 'danger',\n              description: errorMessage(status, statusText),\n            });\n          });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n\n    private get updateParams() {\n      return ParamHelper.updateParamsMixin();\n    }\n  };\n\n  return withRouter(klass);\n};\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport { LoadingPageSpinner } from 'src/components';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  Breadcrumbs,\n  EmptyStateUnauthorized,\n  Main,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport { RouteProps, errorMessage, withRouter } from 'src/utilities';\n\ninterface IState<T> {\n  alerts: AlertType[];\n  item: T;\n  loading: boolean;\n  unauthorised: boolean;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// (data) - renders detail\n\ntype RenderModals = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ninterface PageParams<T> {\n  breadcrumbs: ({ name }) => { url?: string; name: string }[];\n  condition: PermissionContextType;\n  displayName: string;\n  errorTitle: MessageDescriptor;\n  headerActions?: ActionType[];\n  listUrl: string;\n  query: ({ name }) => Promise<T>;\n  title: ({ name }) => string;\n  transformParams: (routeParams) => Record<string, string>;\n  renderModals?: RenderModals;\n  render: (item, actionContext) => React.ReactNode;\n}\n\nexport const Page = function <\n  T extends { name: string; my_permissions?: string[] },\n>({\n  // ({ name }) => [{ url?, name }]\n  breadcrumbs,\n  // { featureFlags, settings, user } => bool\n  condition,\n  // component name for debugging\n  displayName,\n  // alert on query failure\n  errorTitle,\n  // displayed after filters\n  headerActions,\n  // formatPath result to navigate to - to get to the list screen\n  listUrl,\n  // () => Promise<T>\n  query,\n  title,\n  transformParams,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  render,\n}: PageParams<T>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        alerts: [],\n        item: null,\n        loading: true,\n        unauthorised: false,\n      };\n    }\n\n    componentDidMount() {\n      // condition check after query, for object permissions\n      this.query().then((item) => {\n        const actionContext = {\n          ...this.context,\n          hasObjectPermission: (permission) =>\n            item?.my_permissions?.includes?.(permission),\n        };\n        if (!condition(actionContext)) {\n          this.setState({ loading: false, unauthorised: true });\n        }\n\n        this.setState({ alerts: this.context.alerts || [] });\n        this.context.setAlerts([]);\n      });\n    }\n\n    render() {\n      const { routeParams } = this.props;\n      const { alerts, item, loading, unauthorised } = this.state;\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: (permission) =>\n          item?.my_permissions?.includes?.(permission),\n        hasPermission: this.context.hasPermission,\n        listQuery: () => this.props.navigate(listUrl),\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const name = item?.name || transformParams(routeParams)?.name || null;\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader\n            title={title({ name })}\n            breadcrumbs={\n              <Breadcrumbs\n                links={breadcrumbs({\n                  name,\n                })}\n              />\n            }\n            pageControls={\n              <div className='hub-list-toolbar'>\n                <Toolbar>\n                  <ToolbarContent>\n                    <ToolbarGroup>\n                      {headerActions?.length &&\n                        headerActions.map((action) => (\n                          <ToolbarItem key={action.title}>\n                            {action.button(item, actionContext)}\n                          </ToolbarItem>\n                        ))}\n                    </ToolbarGroup>\n                  </ToolbarContent>\n                </Toolbar>\n              </div>\n            }\n          />\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section className='body' data-cy={`Page-${displayName}`}>\n                  {render(item, actionContext)}\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private query() {\n      const { name } = transformParams(this.props.routeParams);\n\n      if (!name) {\n        this.setState({ loading: false });\n        return Promise.resolve(null);\n      }\n\n      return new Promise((resolve, reject) => {\n        this.setState({ loading: true }, () => {\n          query({ name })\n            .then((item) => {\n              this.setState({\n                item,\n                loading: false,\n              });\n              resolve(item);\n            })\n            .catch((e) => {\n              const { status, statusText } = e.response;\n              this.setState({\n                loading: false,\n                item: null,\n              });\n              this.addAlert({\n                title: i18n._(errorTitle),\n                variant: 'danger',\n                description: errorMessage(status, statusText),\n              });\n              reject();\n            });\n        });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n  };\n\n  return withRouter(klass);\n};\n","import { MessageDescriptor, i18n } from '@lingui/core';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  Breadcrumbs,\n  EmptyStateUnauthorized,\n  LoadingPageSpinner,\n  Main,\n  Tabs,\n  closeAlertMixin,\n} from 'src/components';\nimport { NotFound } from 'src/containers/not-found/not-found';\nimport { AppContext } from 'src/loaders/app-context';\nimport { PermissionContextType } from 'src/permissions';\nimport {\n  ParamHelper,\n  ParamType,\n  RouteProps,\n  errorMessage,\n  withRouter,\n} from 'src/utilities';\n\ninterface IState<T> {\n  alerts: AlertType[];\n  item: T;\n  loading: boolean;\n  params: {\n    tab?: string;\n  };\n  unauthorised: boolean;\n}\n\n// states:\n// loading - initial state, only Main + spinner, header and alerts\n// unauthorised - only EmptyStateUnauthorized, header and alerts\n// (data) - renders detail\n\ntype RenderModals = ({\n  addAlert,\n  listQuery,\n  query,\n  setState,\n  state,\n}) => React.ReactNode;\n\ninterface PageWithTabsParams<T> {\n  breadcrumbs: ({ name, tab, params }) => { url?: string; name: string }[];\n  condition: PermissionContextType;\n  displayName: string;\n  errorTitle: MessageDescriptor;\n  headerActions?: ActionType[];\n  headerDetails?: (item) => React.ReactNode;\n  listUrl: string;\n  query: ({ name }) => Promise<T>;\n  renderModals?: RenderModals;\n  renderTab: (tab, item, actionContext) => React.ReactNode;\n  tabs: { id: string; name: MessageDescriptor }[];\n  tabUpdateParams?: (params: ParamType) => ParamType;\n}\n\nexport const PageWithTabs = function <\n  T extends { name: string; my_permissions?: string[] },\n>({\n  // ({ name }) => [{ url?, name }]\n  breadcrumbs,\n  // { featureFlags, settings, user } => bool\n  condition,\n  // component name for debugging\n  displayName,\n  // alert on query failure\n  errorTitle,\n  // displayed after filters\n  headerActions,\n  // under title\n  headerDetails,\n  // formatPath result to navigate to - to get to the list screen\n  listUrl,\n  // () => Promise<T>\n  query,\n  // ({ addAlert, state, setState, query }) => <ConfirmationModal... />\n  renderModals,\n  renderTab,\n  // [{ id, name }]\n  tabs,\n  // params => params\n  tabUpdateParams,\n}: PageWithTabsParams<T>) {\n  renderModals ||= function (actionContext) {\n    return (\n      <>\n        {headerActions?.length\n          ? headerActions.map((action) => action?.modal?.(actionContext))\n          : null}\n      </>\n    );\n  };\n\n  const klass = class extends React.Component<RouteProps, IState<T>> {\n    static displayName = displayName;\n    static contextType = AppContext;\n\n    constructor(props) {\n      super(props);\n\n      const params = ParamHelper.parseParamString(props.location.search);\n\n      if (!params['tab']) {\n        params['tab'] = tabs[0].id;\n      }\n\n      this.state = {\n        alerts: [],\n        item: null,\n        loading: true,\n        unauthorised: false,\n        params,\n      };\n    }\n\n    componentDidMount() {\n      if (!condition(this.context)) {\n        this.setState({ loading: false, unauthorised: true });\n      } else {\n        this.query();\n      }\n\n      this.setState({ alerts: this.context.alerts || [] });\n      this.context.setAlerts([]);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (prevProps.location !== this.props.location) {\n        const params = ParamHelper.parseParamString(this.props.location.search);\n        this.setState({ params: { tab: tabs[0].id, ...params } });\n      }\n    }\n\n    render() {\n      const { routeParams } = this.props;\n      const { alerts, item, loading, params, unauthorised } = this.state;\n\n      const actionContext = {\n        addAlert: (alert) => this.addAlert(alert),\n        hasObjectPermission: (permission) =>\n          item?.my_permissions?.includes?.(permission),\n        hasPermission: this.context.hasPermission,\n        listQuery: () => this.props.navigate(listUrl),\n        navigate: this.props.navigate,\n        query: () => this.query(),\n        queueAlert: this.context.queueAlert,\n        setState: (s) => this.setState(s),\n        state: this.state,\n        user: this.context.user,\n      };\n\n      const name = item?.name || routeParams.name;\n      const localizedTabs = tabs.map(({ name, ...rest }) => ({\n        ...rest,\n        name: i18n._(name),\n      }));\n      const tab = localizedTabs.find((t) => t.id == params.tab) || tabs[0];\n\n      if (!loading && !unauthorised && !item) {\n        return (\n          <>\n            <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n            <NotFound />\n          </>\n        );\n      }\n\n      return (\n        <React.Fragment>\n          <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n          <BaseHeader\n            title={name}\n            breadcrumbs={\n              <Breadcrumbs\n                links={breadcrumbs({\n                  name,\n                  tab,\n                  params,\n                })}\n              />\n            }\n            pageControls={\n              loading ? null : (\n                <div className='hub-list-toolbar'>\n                  <Toolbar>\n                    <ToolbarContent>\n                      <ToolbarGroup>\n                        {headerActions?.length &&\n                          headerActions.map((action) =>\n                            action.visible(item, actionContext) ? (\n                              <ToolbarItem key={action.title}>\n                                {action.button(item, actionContext)}\n                              </ToolbarItem>\n                            ) : null,\n                          )}\n                      </ToolbarGroup>\n                    </ToolbarContent>\n                  </Toolbar>\n                </div>\n              )\n            }\n          >\n            {headerDetails?.(item)}\n            <div className='hub-tab-link-container'>\n              <div className='tabs'>\n                <Tabs\n                  tabs={localizedTabs}\n                  params={params}\n                  updateParams={(p) =>\n                    this.updateParams(tabUpdateParams ? tabUpdateParams(p) : p)\n                  }\n                />\n              </div>\n            </div>\n          </BaseHeader>\n          {renderModals?.(actionContext)}\n          {unauthorised ? (\n            <EmptyStateUnauthorized />\n          ) : (\n            <Main>\n              {loading ? (\n                <LoadingPageSpinner />\n              ) : (\n                <section\n                  className='body'\n                  data-cy={`PageWithTabs-${displayName}-${params.tab}`}\n                >\n                  {this.renderTab(params.tab, actionContext)}\n                </section>\n              )}\n            </Main>\n          )}\n        </React.Fragment>\n      );\n    }\n\n    private renderTab(tab, actionContext) {\n      const { item } = this.state;\n      if (!item) {\n        return null;\n      }\n\n      return renderTab(tab, item, actionContext);\n    }\n\n    private query() {\n      const { name } = this.props.routeParams;\n\n      this.setState({ loading: true }, () => {\n        query({ name })\n          .then((item) => {\n            this.setState({\n              item,\n              loading: false,\n            });\n          })\n          .catch((e) => {\n            const { status, statusText } = e.response;\n            this.setState({\n              loading: false,\n              item: null,\n            });\n            this.addAlert({\n              title: i18n._(errorTitle),\n              variant: 'danger',\n              description: errorMessage(status, statusText),\n            });\n          });\n      });\n    }\n\n    private addAlert(alert: AlertType) {\n      let alerts = this.state.alerts;\n      if (alert.id) {\n        alerts = alerts.filter(({ id }) => id !== alert.id);\n      }\n\n      this.setState({\n        alerts: [...alerts, alert],\n      });\n    }\n\n    private get closeAlert() {\n      return closeAlertMixin('alerts');\n    }\n\n    private get updateParams() {\n      return ParamHelper.updateParamsMixin();\n    }\n  };\n\n  return withRouter(klass);\n};\n","import {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  id?: string;\n  variant: AlertProps['variant'];\n  title: string | JSX.Element;\n  description?: string | JSX.Element;\n}\n\nexport const AlertList = ({ alerts, closeAlert }: IProps) => (\n  <div\n    style={{\n      position: 'fixed',\n      right: '5px',\n      top:\n        DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n          ? '124px' // 70 + 50 + 4\n          : '80px', // 76 + 4\n      zIndex: 300,\n      display: 'flex',\n      flexDirection: 'column',\n    }}\n    data-cy='AlertList'\n  >\n    {alerts.map((alert, i) => (\n      <Alert\n        style={{ marginBottom: '16px' }}\n        key={i}\n        title={alert.title}\n        variant={alert.variant}\n        actionClose={<AlertActionCloseButton onClose={() => closeAlert(i)} />}\n      >\n        {alert.description}\n      </Alert>\n    ))}\n  </div>\n);\n\nexport function closeAlert(alertIndex, { alerts, setAlerts }) {\n  const newList = [...alerts];\n  newList.splice(alertIndex, 1);\n  setAlerts(newList);\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function (alertIndex) {\n    closeAlert(alertIndex, {\n      alerts: this.state[alertStateVariable],\n      setAlerts: (newList) => this.setState({ [alertStateVariable]: newList }),\n    });\n  };\n}\n","import { t } from '@lingui/macro';\nimport { Button, Chip, ChipGroup } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper, ParamType, chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: ParamType;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  niceValues?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport const AppliedFilters = ({\n  className,\n  ignoredParams = [],\n  niceNames = {},\n  niceValues,\n  params,\n  style,\n  updateParams,\n}: IProps) => {\n  const filters = Object.keys(ParamHelper.getReduced(params, ignoredParams));\n  if (!filters.length) {\n    return null;\n  }\n\n  const renderGroup = (key) => {\n    const chips = Array.isArray(params[key])\n      ? (params[key] as string[] | number[])\n      : [params[key]];\n\n    const unsetFilter = (v) =>\n      updateParams({\n        ...ParamHelper.deleteParam(params, key, v),\n        page: 1,\n      });\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={niceNames[key] || key} {...chipGroupProps()}>\n          {chips.map((v, i) => (\n            <Chip key={i} onClick={() => unsetFilter(v)}>\n              {niceValues?.[key]?.[v] || v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  };\n\n  return (\n    <div className={className} style={style}>\n      {filters.map((key) => renderGroup(key))}\n      <Button\n        onClick={() =>\n          ParamHelper.clearAllFilters({ params, ignoredParams, updateParams })\n        }\n        variant='link'\n      >\n        {t`Clear all filters`}\n      </Button>\n    </div>\n  );\n};\n","import { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class BreadcrumbType {\n  name: string;\n  url?: string;\n}\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: BreadcrumbType[];\n}\n\nexport const Breadcrumbs = ({ links }: IProps) => (\n  <Breadcrumb>\n    {links.map((link, index) => (\n      <BreadcrumbItem key={index} isActive={index + 1 === links.length}>\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    ))}\n  </Breadcrumb>\n);\n","import { t } from '@lingui/macro';\nimport { ClipboardCopy as PFClipboardCopy } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  children: string;\n  [key: string]: string | number | boolean;\n}\n\nexport const ClipboardCopy = ({ children, ...props }: IProps) => (\n  <PFClipboardCopy\n    hoverTip={t`Copy to clipboard`}\n    clickTip={t`Successfully copied to clipboard!`}\n    {...props}\n  >\n    {children}\n  </PFClipboardCopy>\n);\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  InputGroup,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { APISearchTypeAhead, StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nexport class FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple' | 'typeahead';\n  options?: { id: string; title: string }[];\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  // Type help: this shoud be something like: Record<string, string | SelectOptionObject | (string | SelectOptionObject)[]>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  inputText: string;\n\n  onChange: (inputText: string) => void;\n\n  selectFilter?: (filterId: string) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig, selectFilter } = this.props;\n    const { selectedFilter } = this.state;\n\n    if (filterConfig.length === 0) {\n      return null;\n    }\n\n    const filterOptions = filterConfig.map((v) => (\n      <DropdownItem\n        onClick={() => {\n          this.props.onChange('');\n          this.setState({ selectedFilter: v });\n          selectFilter && selectFilter(v.id);\n        }}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup data-cy='compound_filter'>\n        {filterConfig.length !== 1 && (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              <span>\n                <FilterIcon />\n                {'   '}\n                {selectedFilter.title}\n              </span>\n            }\n            position='left'\n            isPlain={false}\n            items={filterOptions}\n          />\n        )}\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n          isDisabled={!this.props.inputText.trim().length}\n        >\n          <SearchIcon />\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={t`Filter by ${selectedFilter.id.toLowerCase()}`}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {[\n              <SelectGroup\n                label={t`Filter by ${selectedFilter.id}`}\n                key={selectedFilter.id}\n              >\n                {selectedFilter.options.map((option) => (\n                  // patternfly does not allow for us to set a display name aside from the ID\n                  // which unfortunately means that multiple select will ignore the human readable\n                  // option.title\n                  <SelectOption key={option.id} value={option.id} />\n                ))}\n              </SelectGroup>,\n            ]}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.selectTitleById(this.props.inputText, selectedFilter) ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v) => (\n              <DropdownItem\n                onClick={() => {\n                  this.props.onChange(v.id);\n                  this.submitFilter(v.id);\n                }}\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      case 'typeahead': {\n        const typeaheadResults = this.props.filterConfig\n          .find(({ id }) => id === selectedFilter.id)\n          .options.map(({ id, title }) => ({ id, name: title }));\n\n        return (\n          <APISearchTypeAhead\n            multiple={false}\n            loadResults={(name) => {\n              this.props.onChange(name);\n            }}\n            onClear={() => {\n              this.props.onChange('');\n            }}\n            onSelect={(event, value) => {\n              const item = typeaheadResults.find(({ name }) => name === value);\n              this.submitFilter(item?.id || value);\n            }}\n            placeholderText={\n              selectedFilter?.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            results={typeaheadResults}\n          />\n        );\n      }\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.props.inputText}\n            onChange={(k) => this.props.onChange(k)}\n            onKeyPress={(e) => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter' && this.props.inputText.trim().length > 0) {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n      page: 1,\n    });\n  }\n\n  private submitFilter(id = undefined) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        id ? id : this.props.inputText,\n      ),\n      page: 1,\n    });\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = (event) => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n\n    // no tags => falsy\n    // 1 tag => \"foo\"\n    // 2+ tags => [\"foo\", \"bar\"]\n    // convert all to an array\n    if (!newParams) {\n      newParams = [];\n    }\n    if (!Array.isArray(newParams)) {\n      newParams = [newParams];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n\n    this.submitMultiple(newParams);\n  };\n\n  private selectTitleById(inputText: string, selectedFilter: FilterOption) {\n    if (!inputText || !selectedFilter?.options) {\n      return inputText;\n    }\n\n    return selectedFilter.options.find((opt) => opt.id === inputText).title;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { ClipboardCopy } from '@patternfly/react-core';\nimport React from 'react';\n\nexport const CopyURL = ({\n  url,\n  fallback = null,\n}: {\n  url: string;\n  fallback?: true | string;\n}) => {\n  if (fallback === true) {\n    fallback = t`None`;\n  }\n\n  return url ? (\n    <ClipboardCopy\n      hoverTip={t`Copy`}\n      clickTip={t`Copied`}\n      variant='inline-compact'\n      isCode\n    >\n      {url}\n    </ClipboardCopy>\n  ) : (\n    <>{fallback}</>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  FileUploadProps,\n  FileUpload as PFFileUpload,\n} from '@patternfly/react-core';\nimport React from 'react';\n\nexport const FileUpload = (props: FileUploadProps) => (\n  <PFFileUpload\n    browseButtonText={t`Browse...`}\n    clearButtonText={t`Clear`}\n    filenamePlaceholder={t`Drag a file here or browse to upload`}\n    {...props}\n  />\n);\n","import cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\nconst renderTab = ({ link, title, active = false }) => (\n  <li\n    className={cx({\n      'pf-c-tabs__item': true,\n      'pf-m-current': active,\n    })}\n    key={title}\n  >\n    <Link to={link} className='pf-c-tabs__link'>\n      <span className='pf-c-tabs__item-text'>{title}</span>\n    </Link>\n  </li>\n);\n\n// We're not using the Tab react component because they don't support links.\nexport const LinkTabs = ({ tabs }: IProps) => (\n  <div className='pf-c-tabs'>\n    <ul className='pf-c-tabs__list'>{tabs.map((tab) => renderTab(tab))}</ul>\n  </div>\n);\n","import cx from 'classnames';\nimport React from 'react';\n\ninterface IProps extends React.HTMLProps<HTMLElement> {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Main = ({ children, className, ...extra }: IProps) => (\n  <section\n    className={cx(\n      'pf-l-page__main-section',\n      'pf-c-page__main-section',\n      className,\n    )}\n    {...extra}\n  >\n    {children}\n  </section>\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n\n  /** Options for the number of items that can be displayed per page */\n  perPageOptions?: number[];\n}\n\n// AAP-3737 - support both \"1 - 2 of 3\" and \"3 的 1 - 2\"\nconst ToggleTemplate = ({\n  firstIndex = 0,\n  lastIndex = 0,\n  itemCount = 0,\n}: {\n  firstIndex?: number;\n  lastIndex?: number;\n  itemCount?: number;\n}) => (\n  <Trans>\n    <b>\n      {firstIndex} - {lastIndex}\n    </b>{' '}\n    of <b>{itemCount}</b>\n  </Trans>\n);\n\nexport const Pagination = ({\n  count,\n  params,\n  updateParams,\n  isTop,\n  perPageOptions,\n  isCompact,\n}: IProps) => {\n  const extraProps = {};\n  if (!isTop) {\n    extraProps['widgetId'] = 'pagination-options-menu-bottom';\n    extraProps['variant'] = PaginationVariant.bottom;\n  }\n\n  return (\n    <PaginationPF\n      itemCount={count}\n      perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n      page={params.page || 1}\n      onSetPage={(_, p) =>\n        updateParams(ParamHelper.setParam(params, 'page', p))\n      }\n      onPerPageSelect={(_, p) => {\n        updateParams({ ...params, page: 1, page_size: p });\n      }}\n      {...extraProps}\n      isCompact={isTop || isCompact}\n      perPageOptions={mapPerPageOptions(\n        perPageOptions || Constants.DEFAULT_PAGINATION_OPTIONS,\n      )}\n      titles={{\n        ofWord: t`of`,\n        perPageSuffix: t`per page`,\n        items: null,\n      }}\n      toggleTemplate={(props) => <ToggleTemplate {...props} />}\n    />\n  );\n};\n\nfunction mapPerPageOptions(options) {\n  return options.map((option) => ({\n    title: String(option),\n    value: option,\n  }));\n}\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport {\n  SortAlphaDownIcon,\n  SortAlphaUpIcon,\n  SortAmountDownIcon,\n  SortAmountUpIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\nimport './sort.scss';\n\nclass SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: { id: string; title: string }[];\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find((i) => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams({\n        ...ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n        page: 1,\n      }),\n    );\n  }\n\n  private setDescending() {\n    const field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n      page: 1,\n    });\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find((x) => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div className='hub-sort-wrapper'>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label={t`Sort results`}\n            onToggle={(e) => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n          >\n            {options.map((option) => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        ) : (\n          <IconAsc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import { Tabs as PFTabs, Tab, TabTitleText } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\n\nexport class TabsType {\n  id: string;\n  name: string;\n}\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: TabsType[];\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport const Tabs = ({\n  tabs,\n  params,\n  updateParams,\n  isDisabled,\n  disabledTitle,\n}: IProps) => (\n  <PFTabs\n    activeKey={getActiveTab({ params, tabs })}\n    onSelect={(_, key) =>\n      !isDisabled &&\n      updateParams(\n        ParamHelper.setParam(params, 'tab', tabs[key].id.toLowerCase()),\n      )\n    }\n  >\n    {tabs.map((tab, i) => (\n      <Tab\n        key={i}\n        eventKey={i}\n        title={\n          <TabTitleText title={isDisabled ? disabledTitle : null}>\n            {tab.name}\n          </TabTitleText>\n        }\n        className={isDisabled ? 'disabled' : null}\n      />\n    ))}\n  </PFTabs>\n);\n\nfunction getActiveTab({ params, tabs }) {\n  if (params.tab) {\n    const i = tabs.findIndex(\n      (x) => x.id.toLowerCase() === params.tab.toLowerCase(),\n    );\n\n    // If tab is not found, default to the first tab.\n    if (i === -1) {\n      return 0;\n    } else {\n      return i;\n    }\n  } else {\n    return 0;\n  }\n}\n","import { Tooltip as PFTooltip } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  children: React.ReactNode;\n  content: string;\n}\n\nexport const Tooltip = ({ content, children }: IProps) => (\n  <PFTooltip content={content}>\n    <span>{children}</span>\n  </PFTooltip>\n);\n","import { t } from '@lingui/macro';\nimport {\n  Modal,\n  ModalVariant,\n  Wizard as PFWizard,\n  WizardStep,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  steps: WizardStep[];\n  title: string;\n  variant?: ModalVariant;\n  onClose: () => void;\n  onSave: () => void;\n}\n\nexport const WizardModal = ({\n  steps,\n  title,\n  onClose,\n  onSave,\n  variant,\n}: Props) => (\n  <Modal\n    isOpen\n    variant={variant ?? ModalVariant.large}\n    showClose={false}\n    aria-label={title}\n    hasNoBodyWrapper\n  >\n    <PFWizard\n      hasNoBodyPadding\n      navAriaLabel={t`${title} steps`}\n      mainAriaLabel={t`${title} content`}\n      backButtonText={t`Back`}\n      cancelButtonText={t`Cancel`}\n      closeButtonAriaLabel={t`Close`}\n      nextButtonText={t`Next`}\n      titleId='wizard-modal-title'\n      descriptionId='wizard-modal-description'\n      title={title}\n      steps={steps}\n      onClose={onClose}\n      onSave={onSave}\n    />\n  </Modal>\n);\n","import { t } from '@lingui/macro';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /** Component to display when the user is allowed to update this field. */\n  children: React.ReactNode;\n}\n\nexport const WriteOnlyField = ({ onClear, isValueSet, children }: IProps) =>\n  !isValueSet ? (\n    <>{children}</>\n  ) : (\n    <InputGroup>\n      <TextInput\n        aria-label={t`hidden value`}\n        placeholder='••••••••••••••••••••••'\n        type='password'\n        autoComplete='off'\n        isDisabled={isValueSet}\n      />\n      {isValueSet && (\n        <Button onClick={() => onClear()} variant='control'>\n          {t`Clear`}\n        </Button>\n      )}\n    </InputGroup>\n  );\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  DropdownItem,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { sortBy } from 'lodash';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { GroupType, RoleType } from 'src/api';\nimport {\n  DeleteModal,\n  EmptyStateNoData,\n  ExpandableRow,\n  GroupRolePermissions,\n  ListItemActions,\n  LoadingPageSpinner,\n  PreviewRoles,\n  RoleListTable,\n  SelectGroup,\n  SelectRoles,\n  SortTable,\n  WizardModal,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  group?: GroupType;\n  groups: GroupType[];\n  name: string;\n  pulpObjectType: string;\n  selectRolesMessage: string;\n  urlPrefix: string;\n  canEditOwners: boolean;\n  addGroup?: (group, roles) => void;\n  removeGroup?: (group) => void;\n  addRole?: (role, groups) => void;\n  removeRole?: (role, group) => void;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  updateProps: (prop) => void;\n}\n\nexport class AccessTab extends React.Component<IProps> {\n  render() {\n    const { groups, group, canEditOwners } = this.props;\n    const { showGroupRemoveModal, showGroupSelectWizard } = this.props;\n    const loading = !groups;\n    const noData = groups?.length === 0;\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: {},\n          })\n        }\n      >\n        {t`Select a group`}\n      </Button>\n    );\n\n    return loading ? (\n      <LoadingPageSpinner />\n    ) : (\n      <>\n        {showGroupRemoveModal ? this.renderGroupRemoveModal() : null}\n        {showGroupSelectWizard ? this.renderGroupSelectWizard() : null}\n\n        {noData ? (\n          <EmptyStateNoData\n            title={t`There are currently no owners assigned.`}\n            description={\n              canEditOwners\n                ? t`Please add an owner by using the button below.`\n                : ''\n            }\n            button={canEditOwners ? buttonAdd : null}\n          />\n        ) : group ? (\n          this.renderRoles({ group })\n        ) : (\n          this.renderGroups({ buttonAdd, groups })\n        )}\n      </>\n    );\n  }\n\n  private renderGroups({ buttonAdd, groups }) {\n    const { canEditOwners } = this.props;\n    const sortedGroups = sortBy(groups, 'name');\n\n    return (\n      <>\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <table\n          aria-label={t`Group list`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{\n              headers: [\n                {\n                  title: t`Group`,\n                  type: 'none',\n                  id: 'name',\n                },\n                {\n                  title: '',\n                  type: 'none',\n                  id: 'kebab',\n                },\n              ],\n            }}\n            params={{}}\n            updateParams={() => null}\n          />\n          <tbody>\n            {sortedGroups.map((group, i) => this.renderGroupRow(group, i))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  private renderGroupRow(group, index: number) {\n    const { urlPrefix, canEditOwners } = this.props;\n\n    const dropdownItems = [\n      canEditOwners && (\n        <DropdownItem\n          key='remove'\n          onClick={() => {\n            this.props.updateProps({\n              showGroupRemoveModal: group,\n            });\n          }}\n        >\n          <Trans>Remove group</Trans>\n        </DropdownItem>\n      ),\n    ];\n\n    return (\n      <tr data-cy={`AccessTab-row-${group.name}`} key={index}>\n        <td>\n          <Link\n            to={\n              urlPrefix +\n              '?' +\n              ParamHelper.getQueryString({\n                group: group?.id || group?.name,\n                tab: 'access',\n              })\n            }\n          >\n            {group.name}\n          </Link>\n        </td>\n        <ListItemActions kebabItems={dropdownItems} />\n      </tr>\n    );\n  }\n\n  private renderRoles({ group }) {\n    const { canEditOwners } = this.props;\n    const { showRoleRemoveModal, showRoleSelectWizard } = this.props;\n    const roles = group?.object_roles;\n    const sortedRoles = sortBy(roles);\n\n    if (!group) {\n      return null;\n    }\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: {},\n          })\n        }\n      >\n        {t`Add roles`}\n      </Button>\n    );\n\n    return (\n      <>\n        {showRoleRemoveModal ? this.renderRoleRemoveModal(group) : null}\n        {showRoleSelectWizard ? this.renderRoleSelectWizard(group) : null}\n\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <RoleListTable\n          params={{}}\n          updateParams={() => null}\n          tableHeader={{\n            headers: [\n              {\n                title: '',\n                type: 'none',\n                id: 'expander',\n              },\n              {\n                title: t`Role`,\n                type: 'none',\n                id: 'role',\n              },\n              {\n                title: '',\n                type: 'none',\n                id: 'kebab',\n              },\n            ],\n          }}\n        >\n          {sortedRoles.map((role, i) => (\n            <ExpandableRow\n              key={i}\n              rowIndex={i}\n              expandableRowContent={<GroupRolePermissions name={role} />}\n              data-cy={`RoleListTable-ExpandableRow-row-${role}`}\n            >\n              <td>{role}</td>\n              <ListItemActions\n                kebabItems={[\n                  canEditOwners && (\n                    <DropdownItem\n                      key='remove-role'\n                      onClick={() =>\n                        this.props.updateProps({ showRoleRemoveModal: role })\n                      }\n                    >\n                      {t`Remove role`}\n                    </DropdownItem>\n                  ),\n                ]}\n              />\n            </ExpandableRow>\n          ))}\n        </RoleListTable>\n      </>\n    );\n  }\n\n  private renderGroupRemoveModal() {\n    const group = this.props.showGroupRemoveModal as GroupType;\n    const groupname = group.name;\n    const name = this.props.name;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showGroupRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeGroup(group)}\n        title={t`Remove group ${groupname}?`}\n      >\n        <Trans>\n          You are about to remove <b>{groupname}</b> from <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderRoleRemoveModal(group) {\n    const groupname = group.name;\n    const name = this.props.name;\n    const role = this.props.showRoleRemoveModal;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showRoleRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeRole(role, group)}\n        title={t`Remove role ${role}?`}\n      >\n        <Trans>\n          You are about to remove <b>{role}</b> from <b>{groupname}</b> for{' '}\n          <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderGroupSelectWizard() {\n    const { groups, pulpObjectType, selectRolesMessage } = this.props;\n    const {\n      showGroupSelectWizard: { group, roles = [] },\n    } = this.props;\n\n    const hasGroup = !!group;\n    const hasRoles = !!roles?.length;\n\n    // if we enable edit, find group in groups, convert object_roles name to { role: name }\n    const assignedRoles = [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select a group`,\n        component: (\n          <SelectGroup\n            assignedGroups={groups}\n            selectedGroup={group}\n            updateGroup={(group) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasGroup,\n      },\n      {\n        id: 1,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n            message={selectRolesMessage}\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        canJumpTo: hasGroup,\n        enableNext: hasGroup && hasRoles,\n      },\n      {\n        id: 2,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasGroup && hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select a group`}\n        onClose={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addGroup(group, roles)}\n      />\n    );\n  }\n\n  private renderRoleSelectWizard(group) {\n    const { pulpObjectType } = this.props;\n    const {\n      showRoleSelectWizard: { roles = [] },\n    } = this.props;\n\n    const hasRoles = !!roles?.length;\n\n    const assignedRoles =\n      group?.object_roles?.map((name) => ({ role: name })) || [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({ showRoleSelectWizard: { roles } })\n            }\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasRoles,\n      },\n      {\n        id: 1,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select role(s)`}\n        onClose={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addRole(group, roles)}\n      />\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { Alert, List, ListItem, Spinner } from '@patternfly/react-core';\nimport React from 'react';\nimport { UserType } from 'src/api';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  count?: number;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  users?: UserType[];\n  canViewUsers?: boolean;\n}\n\nexport class DeleteGroupModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, count, deleteAction, name, users, canViewUsers } =\n      this.props;\n\n    return (\n      <DeleteModal\n        cancelAction={cancelAction}\n        deleteAction={deleteAction}\n        title={t`Delete group?`}\n      >\n        <Trans>\n          <b>{name}</b> will be permanently deleted.\n        </Trans>\n        <p>&nbsp;</p>\n        <div>\n          {users && count > 10 && (\n            <p>\n              <Trans>Deleting this group will affect {count} users.</Trans>\n            </p>\n          )}\n          {users && count > 0 && count <= 10 && (\n            <>\n              <p>\n                <Trans>\n                  These users will lose access to the group content:\n                </Trans>\n              </p>\n              <List>\n                {users.map((u) => (\n                  <ListItem key={u.username}>\n                    <b>{u.username}</b>\n                  </ListItem>\n                ))}\n              </List>\n            </>\n          )}\n\n          {canViewUsers ? (\n            <>\n              {users && !count && <p>{t`No users will be affected.`}</p>}\n              {!users && (\n                <p>\n                  <Trans>\n                    Checking for affected users... <Spinner size='sm' />\n                  </Trans>\n                </p>\n              )}\n            </>\n          ) : (\n            <Alert\n              title={t`This group can include users`}\n              variant='warning'\n              isInline\n            >\n              <Trans>You don&apos;t have permission to display users.</Trans>\n            </Alert>\n          )}\n        </div>\n      </DeleteModal>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport React from 'react';\nimport { UserAPI, UserType } from 'src/api';\nimport { DeleteModal } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { errorMessage, mapErrorMessages } from 'src/utilities';\n\ninterface IState {\n  isWaitingForResponse: boolean;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  user?: UserType;\n  closeModal: (didDelete: boolean) => void;\n  addAlert: (message, variant, description?) => void;\n}\n\nexport class DeleteUserModal extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { isWaitingForResponse: false };\n  }\n\n  render() {\n    const { isOpen, user, closeModal } = this.props;\n    const { isWaitingForResponse } = this.state;\n    if (!user || !isOpen) {\n      return null;\n    }\n\n    return (\n      <DeleteModal\n        cancelAction={() => closeModal(false)}\n        deleteAction={() => this.deleteUser()}\n        isDisabled={isWaitingForResponse || this.isUserSelfOrAdmin(user)}\n        spinner={isWaitingForResponse}\n        title={t`Delete user?`}\n      >\n        {this.getActionDescription(user)}\n      </DeleteModal>\n    );\n  }\n\n  private getActionDescription(user: UserType) {\n    if (user.is_superuser) {\n      return t`Deleting super users is not allowed.`;\n    } else if (user.id === this.context.user.id) {\n      return t`Deleting yourself is not allowed.`;\n    }\n\n    return (\n      <Trans>\n        <b>{user.username}</b> will be permanently deleted.\n      </Trans>\n    );\n  }\n\n  private isUserSelfOrAdmin = (user: UserType): boolean => {\n    return user.is_superuser || user.id === this.context.user.id;\n  };\n\n  private deleteUser = () => {\n    this.setState({ isWaitingForResponse: true }, () =>\n      UserAPI.delete(this.props.user.id)\n        .then(() => this.waitForDeleteConfirm(this.props.user.id))\n        .catch((err) => {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            mapErrorMessages(err)['__nofield'],\n          );\n          this.props.closeModal(false);\n        })\n        .finally(() => this.setState({ isWaitingForResponse: false })),\n    );\n  };\n\n  // Wait for the user to actually get removed from the database before closing the\n  // modal\n  private waitForDeleteConfirm(user) {\n    UserAPI.get(user)\n      .then(async () => {\n        // wait half a second\n        await new Promise((r) => setTimeout(r, 500));\n        this.waitForDeleteConfirm(user);\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        if (err.response.status === 404) {\n          this.props.addAlert(\n            <Trans>\n              User &quot;{this.props.user.username}&quot; has been successfully\n              deleted.\n            </Trans>,\n            'success',\n          );\n          this.props.closeModal(true);\n        } else {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n        }\n\n        this.setState({ isWaitingForResponse: false });\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: { name: string };\n  errorMessage?: ErrorMessagesType;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={t`Create a group`}\n        actions={[\n          <div key='create' data-cy='create-group-button'>\n            <Button\n              isDisabled={\n                this.state.name.length === 0 ||\n                (this.props.group && this.state.name === this.props.group.name)\n              }\n              key='create'\n              variant='primary'\n              onClick={() => onSave(this.state.name)}\n            >\n              {!this.props.group ? t`Create` : t`Save`}\n            </Button>\n          </div>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label={t`Name`}\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={(value) => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { RoleAPI } from 'src/api';\nimport { LoadingPageSpinner, PermissionCategories } from 'src/components';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface IProps {\n  name: string;\n}\n\nexport const GroupRolePermissions = ({ name }: IProps) => {\n  const [role, setRole] = useState(null);\n\n  useEffect(() => {\n    RoleAPI.list({ name }).then(({ data }) => {\n      const [selectedRole] = data.results;\n      setRole(selectedRole);\n    });\n  }, []);\n\n  if (!role) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <>\n      <p>{translateLockedRolesDescription(role.name, role.description)}</p>\n      <PermissionCategories\n        permissions={role.permissions}\n        showCustom={true}\n        showEmpty={false}\n      />\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { ModelPermissionsType } from 'src/api';\nimport { PermissionChipSelector } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  permissions: string[];\n  setSelected?: (permissions) => void;\n  showCustom: boolean;\n  showEmpty: boolean;\n}\n\nfunction knownPermissionsAndCategories(\n  model_permissions: ModelPermissionsType,\n  allPermissions: string[] = Object.keys(model_permissions),\n): {\n  label: string;\n  allPermissions: string[];\n  availablePermissions?: string[];\n  selectedPermissions?: string[];\n}[] {\n  const categories = {};\n\n  Object.entries(model_permissions)\n    .filter(([k, _]) => allPermissions.includes(k))\n    .forEach(([permission, { ui_category }]) => {\n      categories[ui_category] ||= { label: ui_category, allPermissions: [] };\n      categories[ui_category].allPermissions.push(permission);\n    });\n\n  return Object.values(categories);\n}\n\nexport class PermissionCategories extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { permissions, setSelected, showCustom, showEmpty } = this.props;\n    const { featureFlags, user } = this.context;\n    const { model_permissions } = user;\n    const showUserManagement = !featureFlags.external_authentication;\n\n    // show user/group permissions by default\n    const userManagementFilter = (permission) =>\n      showUserManagement ||\n      !Constants.USER_GROUP_MGMT_PERMISSIONS.includes(permission);\n    const allPermissions =\n      Object.keys(model_permissions).filter(userManagementFilter);\n\n    const groups = knownPermissionsAndCategories(\n      model_permissions,\n      allPermissions,\n    );\n\n    const allGroups = showCustom\n      ? [\n          ...groups,\n          {\n            label: t`Custom permissions`,\n            allPermissions: permissions\n              .filter(userManagementFilter)\n              .filter((permission) => !allPermissions.includes(permission)),\n          },\n        ]\n      : groups;\n\n    const withActive = allGroups.map((group) => ({\n      ...group,\n      selectedPermissions: group.allPermissions.filter((permission) =>\n        permissions.includes(permission),\n      ),\n      availablePermissions: group.allPermissions.filter(\n        (permission) => !permissions.includes(permission),\n      ),\n    }));\n\n    const groupsToShow = showEmpty\n      ? withActive\n      : withActive.filter((group) => group.selectedPermissions.length);\n\n    return (\n      <React.Fragment>\n        {groupsToShow.length ? null : (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={'no-permissions'}\n            data-cy={'PermissionCategories-no-permissions'}\n          >\n            <FlexItem\n              style={{ minWidth: '200px' }}\n            >{t`No permissions`}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }} />\n          </Flex>\n        )}\n        {groupsToShow.map((group) => (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={group.label}\n            data-cy={`PermissionCategories-${group.label}`}\n          >\n            <FlexItem style={{ minWidth: '200px' }}>{group.label}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }}>\n              <PermissionChipSelector\n                availablePermissions={group.availablePermissions}\n                selectedPermissions={group.selectedPermissions}\n                isViewOnly={!setSelected}\n                onCategoryClear={() =>\n                  setSelected(\n                    permissions.filter(\n                      (permission) =>\n                        !group.allPermissions.includes(permission),\n                    ),\n                  )\n                }\n                onPermissionToggle={(permission) => {\n                  const newPerms = new Set(permissions);\n\n                  if (newPerms.has(permission)) {\n                    newPerms.delete(permission);\n                  } else {\n                    newPerms.add(permission);\n                  }\n\n                  setSelected(Array.from(newPerms));\n                }}\n              />\n            </FlexItem>\n          </Flex>\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Label,\n  LabelGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { AppContext } from 'src/loaders/app-context';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  availablePermissions?: string[];\n  selectedPermissions: string[];\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onCategoryClear?: () => void;\n  onPermissionToggle?: (permission: string) => void;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    const { model_permissions } = this.context.user;\n    const {\n      availablePermissions,\n      isDisabled,\n      isViewOnly,\n      onCategoryClear,\n      onPermissionToggle,\n      selectedPermissions,\n    } = this.props;\n    const { isOpen } = this.state;\n\n    if (isViewOnly) {\n      const items = selectedPermissions.map((permission) => ({\n        label: model_permissions[permission]?.name || permission,\n        value: permission,\n      }));\n\n      return (\n        <LabelGroup {...chipGroupProps()}>\n          {items.length ? null : (\n            <Label key='placeholder'>{t`No permission`}</Label>\n          )}\n          {items.map((text) => (\n            <Label key={text.value} title={text.value}>\n              {text.label}\n            </Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    // { value: 'galaxy.foo', toString: () => \"View foo (translated)\" }\n    const selections = selectedPermissions.map((permission) => ({\n      value: permission,\n      toString: () => model_permissions[permission]?.name || permission,\n    }));\n\n    return (\n      <Select\n        menuAppendTo='inline'\n        variant={SelectVariant.typeaheadMulti}\n        chipGroupProps={chipGroupProps()}\n        typeAheadAriaLabel={t`Select permissions`}\n        onToggle={(isOpen) => this.setState({ isOpen })}\n        onSelect={(event, permission) =>\n          onPermissionToggle(permission['value'] || permission)\n        }\n        onClear={() => onCategoryClear()}\n        selections={selections}\n        isOpen={isOpen}\n        placeholderText={\n          !isDisabled && !isViewOnly\n            ? t`Select permissions`\n            : selectedPermissions.length === 0\n            ? t`No permission`\n            : ''\n        }\n        isDisabled={!!isDisabled}\n      >\n        {availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={t`Not found`}\n              />,\n            ]\n          : availablePermissions.map((permission) => (\n              <SelectOption key={permission} value={permission}>\n                {model_permissions[permission]?.name || permission}\n              </SelectOption>\n            ))}\n      </Select>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport { Divider, Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React from 'react';\nimport { GroupType, RoleType } from 'src/api';\nimport { Tooltip } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface Props {\n  group: GroupType;\n  selectedRoles: RoleType[];\n}\n\nconst splitByDot = (perm: string) => {\n  const [category, permission] = perm.split('.', 2);\n  const catTitle = category.charAt(0).toUpperCase() + category.slice(1);\n  return (\n    <>\n      <strong>{catTitle}:</strong>&nbsp;{permission}\n    </>\n  );\n};\n\nexport const PreviewRoles = ({ group, selectedRoles }: Props) => {\n  const { model_permissions } = useContext().user;\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <p>\n        <Trans>\n          The following roles will be applied to group:{' '}\n          <strong>{group.name}</strong>\n        </Trans>\n      </p>\n      <Flex direction={{ default: 'column' }} className='hub-preview-roles'>\n        {selectedRoles.map((role) => (\n          <React.Fragment key={role.name}>\n            <FlexItem>\n              <strong>{role.name}</strong>{' '}\n              {role?.description &&\n                `- ${translateLockedRolesDescription(\n                  role.name,\n                  role.description,\n                )}`}\n              <Flex className='hub-permissions'>\n                {role.permissions.map((permission) => (\n                  <FlexItem\n                    key={permission}\n                    className='hub-permission'\n                    data-cy={`HubPermission-${permission}`}\n                  >\n                    <Tooltip\n                      content={\n                        model_permissions[permission]?.name || permission\n                      }\n                    >\n                      <Label>{splitByDot(permission)}</Label>\n                    </Tooltip>\n                  </FlexItem>\n                ))}\n              </Flex>\n            </FlexItem>\n            <FlexItem>\n              <Divider />\n            </FlexItem>\n          </React.Fragment>\n        ))}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Button,\n  Divider,\n  Form,\n  FormGroup,\n  InputGroup,\n  Spinner,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { PermissionCategories } from 'src/components';\n\ninterface IState {\n  permissions: string[];\n}\n\ninterface IProps {\n  nameDisabled?: boolean;\n  name: string;\n  description: string;\n  onNameChange?: (value: string) => void;\n  nameValidated?: 'default' | 'warning' | 'success' | 'error';\n  nameHelperText?: string;\n  descriptionValidated: 'default' | 'warning' | 'success' | 'error';\n  descriptionHelperText: string;\n  onDescriptionChange: (value: string) => void;\n  saveRole: (permissions: string[]) => void;\n  cancelRole: () => void;\n  isSavingDisabled: boolean;\n  saving: boolean;\n  originalPermissions?: string[];\n}\n\nexport class RoleForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permissions: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.originalPermissions) {\n      this.setState({ permissions: this.props.originalPermissions });\n    }\n  }\n\n  render() {\n    const { permissions } = this.state;\n    const {\n      name,\n      onNameChange,\n      nameValidated,\n      nameHelperText,\n      description,\n      descriptionValidated,\n      descriptionHelperText,\n      onDescriptionChange,\n      saveRole,\n      cancelRole,\n      nameDisabled,\n      isSavingDisabled,\n      saving,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <Form>\n          <div>\n            <div style={{ paddingBottom: '8px' }}>\n              <Title headingLevel='h2'>{t`Details`}</Title>\n            </div>\n\n            <div style={{ display: 'flex', gap: '10px' }}>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                style={{ width: '50%', float: 'left' }}\n                helperTextInvalid={nameHelperText}\n                validated={nameValidated}\n              >\n                <InputGroup>\n                  <TextInput\n                    id='role_name'\n                    isDisabled={nameDisabled}\n                    value={name}\n                    onChange={onNameChange}\n                    type='text'\n                    validated={nameValidated}\n                    placeholder={t`Role name`}\n                  />\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                isRequired={true}\n                style={{ width: '50%' }}\n                key='description'\n                fieldId='description'\n                label={t`Description`}\n                helperTextInvalid={descriptionHelperText}\n                validated={descriptionValidated}\n              >\n                <TextInput\n                  id='role_description'\n                  value={description}\n                  onChange={onDescriptionChange}\n                  type='text'\n                  validated={descriptionValidated}\n                  placeholder={t`Add a role description here`}\n                />\n              </FormGroup>\n            </div>\n          </div>\n          <div>\n            <br />\n            <Divider />\n            <br />\n            <Title headingLevel='h2'>\n              <Trans>Permissions</Trans>\n            </Title>\n\n            <PermissionCategories\n              permissions={permissions}\n              setSelected={(permissions) => this.setState({ permissions })}\n              showCustom={false}\n              showEmpty={true}\n            />\n          </div>\n\n          <ActionGroup>\n            <Button\n              variant='primary'\n              isDisabled={isSavingDisabled}\n              onClick={() => saveRole(permissions)}\n            >\n              {t`Save`}\n            </Button>\n\n            <Button\n              variant='secondary'\n              onClick={cancelRole}\n            >{t`Cancel`}</Button>\n            {saving ? <Spinner /> : null}\n          </ActionGroup>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  ExpandableRowContent,\n  TableComposable,\n  Tbody,\n  Td,\n  Tr,\n} from '@patternfly/react-table';\nimport React, { useState } from 'react';\nimport { SortTable } from 'src/components';\n\ninterface Props {\n  params?: object;\n  updateParams?: (params) => void;\n  isCompact?: boolean;\n  tableHeader?: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n    }[];\n  };\n  isStickyHeader?: boolean;\n}\n\nexport const RoleListTable: React.FC<Props> = ({\n  children,\n  params,\n  updateParams,\n  isCompact,\n  tableHeader,\n  isStickyHeader = false,\n}) => {\n  const defaultTableHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'role',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n      {\n        title: t`Editable`,\n        type: 'none',\n        id: 'locked',\n      },\n      {\n        title: '',\n        type: 'none',\n        id: 'kebab',\n      },\n    ],\n  };\n\n  return (\n    <TableComposable\n      aria-label='role-list-table'\n      data-cy='RoleListTable'\n      variant={isCompact ? 'compact' : undefined}\n      isStickyHeader={isStickyHeader}\n    >\n      <SortTable\n        options={tableHeader ?? defaultTableHeader}\n        params={params}\n        updateParams={updateParams}\n      />\n      {children}\n    </TableComposable>\n  );\n};\n\nexport const ExpandableRow: React.FC<{\n  rowIndex: number;\n  expandableRowContent?: React.ReactNode;\n  colSpan?: number;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, expandableRowContent, colSpan, ...props }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <Tbody isExpanded={isExpanded}>\n      <Tr data-cy={props['data-cy']}>\n        <Td\n          expand={{\n            onToggle: () => setIsExpanded(!isExpanded),\n            isExpanded,\n            rowIndex,\n          }}\n        />\n        {children}\n      </Tr>\n      {expandableRowContent && (\n        <Tr isExpanded={isExpanded}>\n          <Td colSpan={colSpan ?? 4}>\n            {isExpanded && (\n              <ExpandableRowContent>\n                {expandableRowContent}\n              </ExpandableRowContent>\n            )}\n          </Td>\n        </Tr>\n      )}\n    </Tbody>\n  );\n};\n\nexport const CheckboxRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'checkbox',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n\nexport const RadioRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'radio',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { GroupAPI, GroupType } from 'src/api';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RadioRow,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  assignedGroups: GroupType[];\n  selectedGroup?: GroupType;\n  updateGroup?: (group) => void;\n}\n\nexport const SelectGroup: React.FC<IProps> = ({\n  assignedGroups,\n  selectedGroup,\n  updateGroup,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [groups, setGroups] = useState<GroupType[]>([]);\n  const [groupsCount, setGroupsCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n  });\n\n  useEffect(() => {\n    queryGroups();\n  }, [localParams]);\n\n  const queryGroups = () => {\n    setLoading(true);\n    GroupAPI.list(localParams).then(({ data }) => {\n      setGroups(data.data);\n      setGroupsCount(data.meta.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isSelected = ({ name }) => selectedGroup?.name === name;\n\n  const noData = groups.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable groups.`}\n          description={t`There are currently no groups that can be assigned to this namespace.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = ({ name }) =>\n    assignedGroups.some((group) => group.name === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Group`,\n        type: 'alpha',\n        id: 'name',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {selectedGroup ? (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected group</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      <FlexItem\n                        key={selectedGroup.name}\n                        className='hub-permission'\n                      >\n                        <Label>{selectedGroup.name}</Label>\n                      </FlexItem>\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            ) : null}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {groups.map((group, i) => (\n                      <RadioRow\n                        rowIndex={i}\n                        key={group.name}\n                        isSelected={isSelected(group)}\n                        onSelect={() => updateGroup(group)}\n                        isDisabled={isAssigned(group)}\n                        data-cy={`GroupListTable-CheckboxRow-row-${group.name}`}\n                      >\n                        <td>{group.name}</td>\n                      </RadioRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={groupsCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { RoleAPI, RoleType } from 'src/api';\nimport {\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet, translateLockedRolesDescription } from 'src/utilities';\n\ninterface SelectRolesProps {\n  assignedRoles: { role: string }[];\n  selectedRoles: RoleType[];\n  onRolesUpdate?: (roles) => void;\n  message?: string;\n  pulpObjectType?: string;\n}\n\nexport const SelectRoles: React.FC<SelectRolesProps> = ({\n  assignedRoles,\n  selectedRoles,\n  onRolesUpdate,\n  message,\n  pulpObjectType,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [roles, setRoles] = useState<RoleType[]>([]);\n  const [rolesItemCount, setRolesItemCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  useEffect(() => {\n    queryRoles();\n  }, [localParams]);\n\n  const queryRoles = () => {\n    setLoading(true);\n    RoleAPI.list(\n      { name__startswith: 'galaxy.', ...localParams },\n      pulpObjectType,\n    ).then(({ data }) => {\n      setRoles(data.results);\n      setRolesItemCount(data.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isRoleSelected = (name) =>\n    selectedRoles.map((r) => r.name).includes(name);\n\n  const noData = roles.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable roles.`}\n          description={t`There are currently no roles that can be assigned to this group.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = (name) => assignedRoles.some((role) => role.role === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'name',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {message && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>{message}</FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            {Object.keys(selectedRoles).length !== 0 && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected roles</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      {selectedRoles.map((role) => (\n                        <FlexItem\n                          key={role.name}\n                          className='hub-permission'\n                          data-cy={`HubPermission-${role.name}`}\n                        >\n                          <Label\n                            onClose={() =>\n                              onRolesUpdate(\n                                selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                ),\n                              )\n                            }\n                          >\n                            {role.name}\n                          </Label>\n                        </FlexItem>\n                      ))}\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {roles.map((role, i) => (\n                      <CheckboxRow\n                        rowIndex={i}\n                        key={role.name}\n                        isSelected={\n                          isRoleSelected(role.name) || isAssigned(role.name)\n                        }\n                        onSelect={() =>\n                          onRolesUpdate(\n                            isRoleSelected(role.name)\n                              ? selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                )\n                              : [...selectedRoles, role],\n                          )\n                        }\n                        isDisabled={isAssigned(role.name)}\n                        data-cy={`RoleListTable-CheckboxRow-row-${role.name}`}\n                      >\n                        <td>{role.name}</td>\n                        <td>\n                          {translateLockedRolesDescription(\n                            role.name,\n                            role.description,\n                          )}\n                        </td>\n                      </CheckboxRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={rolesItemCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Alert,\n  Button,\n  FormGroup,\n  Label,\n  Switch,\n  TextInput,\n  Tooltip,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { GroupAPI, UserType } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertType,\n  DataForm,\n  HelperText,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, errorMessage } from 'src/utilities';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: ErrorMessagesType;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: { name: string; id: number }[];\n  formErrors: {\n    groups: AlertType;\n  };\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n      formErrors: {\n        groups: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm, formErrors } = this.state;\n    const minLength = this.context.settings.GALAXY_MINIMUM_PASSWORD_LENGTH || 9; // actually counts codepoints, close enough\n\n    const formFields = [\n      { id: 'username', title: t`Username` },\n      { id: 'first_name', title: t`First name` },\n      { id: 'last_name', title: t`Last name` },\n      { id: 'email', title: t`Email` },\n      !isReadonly && {\n        id: 'password',\n        title: t`Password`,\n        type: 'password',\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={t`Create a password using at least ${minLength} characters, including special characters , ex <!@$%>. Avoid using common names or expressions.`}\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid={t`Passwords do not match`}\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label={t`Password confirmation`}\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={(value) => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n          autoComplete='off'\n        />\n      </FormGroup>\n    );\n\n    const readonlyAuth = () => (\n      <FormGroup\n        fieldId='auth_provider'\n        key='readonlyAuth'\n        label={t`Authentication provider`}\n      >\n        {user.auth_provider.map((provider) => (\n          <Label key={provider}>{provider}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        key='readonlyGroups'\n        label={t`Groups`}\n        data-cy='UserForm-readonly-groups'\n      >\n        {user.groups.map((group) => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label={t`Groups`}\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        {formErrors.groups ? (\n          <Alert title={formErrors.groups.title} variant='danger' isInline>\n            {formErrors.groups.description}\n          </Alert>\n        ) : (\n          <APISearchTypeAhead\n            results={this.state.searchGroups}\n            loadResults={this.loadGroups}\n            onSelect={this.onSelectGroup}\n            placeholderText={t`Select groups`}\n            selections={user.groups}\n            multiple={true}\n            onClear={this.clearGroups}\n            isDisabled={isReadonly}\n          />\n        )}\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label={t`User type`}\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip\n          content={t`Super users have all system permissions regardless of what groups they are in.`}\n        >\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label={t`Super user`}\n            labelOff={t`Not a super user`}\n            isChecked={user.is_superuser}\n            onChange={() =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          />\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      isMe && isReadonly && readonlyAuth(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return t`Requires super user permissions to edit.`;\n    }\n    if (this.context.user.id === user.id) {\n      return t`Super users can't disable themselves.`;\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex((g) => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        (g) => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name, page_size: 5 })\n      .then((result) => this.setState({ searchGroups: result.data.data }))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            groups: {\n              variant: 'danger',\n              title: t`Groups list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          },\n        });\n      });\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import React from 'react';\nimport { UserType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Main,\n  UserForm,\n} from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: BreadcrumbType[];\n  errorMessages: ErrorMessagesType;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: ErrorMessagesType) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          pageControls={extraControls}\n          title={title}\n        />\n        <Main>\n          <section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            />\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { dom, parse } from 'antsibull-docs';\nimport React from 'react';\nimport {\n  PluginContentType,\n  PluginDoc,\n  PluginOption,\n  ReturnedValue,\n} from 'src/api';\nimport './render-plugin-doc.scss';\n\n// Documentation for module doc string spec\n// https://docs.ansible.com/ansible/latest/dev_guide/developing_modules_documenting.html\n\ninterface IState {\n  renderError: boolean;\n}\n\ninterface IProps {\n  plugin: PluginContentType;\n\n  renderPluginLink: (\n    pluginName: string,\n    pluginType: string,\n    text: React.ReactNode | undefined,\n  ) => React.ReactElement;\n  renderDocLink: (name: string, href: string) => React.ReactElement;\n  renderTableOfContentsLink: (\n    title: string,\n    section: string,\n  ) => React.ReactElement;\n  renderWarning: (text: string) => React.ReactElement;\n}\n\nexport class RenderPluginDoc extends React.Component<IProps, IState> {\n  subOptionsMaxDepth: number;\n  returnContainMaxDepth: number;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      renderError: false,\n    };\n  }\n\n  componentDidCatch(error) {\n    console.log(error);\n    this.setState({ renderError: true });\n  }\n\n  render() {\n    const { plugin } = this.props;\n\n    if (!this.state.renderError) {\n      // componentDidCatch doesn't seem to be able to catch errors that\n      // are thrown outside of return(), so we'll wrap everything in a\n      // try just in case\n      let doc: PluginDoc;\n      let example: string;\n      let returnVals: ReturnedValue[];\n      let content;\n      try {\n        doc = this.parseDocString(plugin);\n        example = this.parseExamples(plugin);\n        returnVals = this.parseReturn(plugin);\n        content = {\n          synopsis: this.renderSynopsis(doc),\n          parameters: this.renderParameters(\n            doc.options,\n            plugin.content_type,\n            this.subOptionsMaxDepth,\n          ),\n          notes: this.renderNotes(doc),\n          examples: this.renderExample(example),\n          returnValues: this.renderReturnValues(\n            returnVals,\n            this.returnContainMaxDepth,\n          ),\n          shortDescription: this.renderShortDescription(doc),\n          deprecated: this.renderDeprecated(doc, plugin.content_name),\n          requirements: this.renderRequirements(doc),\n        };\n      } catch (err) {\n        console.log(err);\n        return this.renderError(plugin);\n      }\n\n      return (\n        <div>\n          <h1>\n            {plugin.content_type} &gt; {plugin.content_name}\n          </h1>\n          <br />\n          {content.shortDescription}\n          {content.deprecated}\n          {this.renderTableOfContents(content)}\n          {content.synopsis}\n          {content.requirements}\n          {content.parameters}\n          {content.notes}\n          {content.examples}\n          {content.returnValues}\n        </div>\n      );\n    } else {\n      return this.renderError(plugin);\n    }\n  }\n\n  private renderError(plugin) {\n    // There's a good chance that something about the plugin doc data will\n    // be malformed since it isn't validated. When that hapens, show an\n    // error instead of crashing the whole app\n    return (\n      <React.Fragment>\n        {this.props.renderWarning(\n          'Documentation Syntax Error: cannot parse plugin documention.',\n        )}\n        <br />\n        <div>\n          {plugin.content_type && plugin.content_name ? (\n            <h1>\n              {plugin.content_type} &gt; {plugin.content_name}\n            </h1>\n          ) : null}\n          <p>\n            The documentation object for this plugin seems to contain invalid\n            syntax that makes it impossible for Automation Hub to parse. You can\n            still look at the unformatted documentation object bellow if you\n            need to.\n          </p>\n\n          <h2>Unformatted Documentation</h2>\n\n          <pre className='plugin-raw'>{JSON.stringify(plugin, null, 2)}</pre>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private parseDocString(plugin: PluginContentType): PluginDoc {\n    // TODO: if the parser can't figure out what to do with the object\n    // passed to it, it should throw an error that can be displayed to the\n    // user with the piece of the documention that's broken.\n\n    // TODO: make the doc string match the desired output as closely as\n    // possible\n    if (!plugin.doc_strings) {\n      return { description: [], short_description: '' } as PluginDoc;\n    }\n\n    const doc: PluginDoc = { ...plugin.doc_strings.doc };\n\n    let maxDepth = 0;\n\n    const parseOptions = (options: PluginOption[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const op of options) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        op.description = this.ensureListofStrings(op.description);\n\n        if (typeof op.default === 'object') {\n          op.default = JSON.stringify(op.default);\n        }\n\n        // recursively parse sub options\n        if (op.suboptions) {\n          parseOptions(op.suboptions, depth + 1);\n        }\n      }\n    };\n\n    if (doc.options) {\n      parseOptions(doc.options, 0);\n    }\n\n    doc.description = this.ensureListofStrings(doc.description);\n    this.subOptionsMaxDepth = maxDepth;\n\n    return doc;\n  }\n\n  private parseExamples(plugin: PluginContentType): string {\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (typeof plugin.doc_strings.examples === 'string') {\n      // the examples always seem to have an annoying new line at the top\n      // so just replace it here if it exists.\n      return plugin.doc_strings.examples.replace('\\n', '');\n    } else {\n      return null;\n    }\n  }\n\n  private parseReturn(plugin: PluginContentType): ReturnedValue[] {\n    // TODO: make the return string match the desired output as closely as\n    // possible\n\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (!plugin.doc_strings.return) {\n      return null;\n    }\n\n    let maxDepth = 0;\n\n    const parseReturnRecursive = (returnV: ReturnedValue[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const ret of returnV) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        ret.description = this.ensureListofStrings(ret.description);\n\n        // recursively parse sub options\n        if (ret.contains) {\n          parseReturnRecursive(ret.contains, depth + 1);\n        }\n      }\n    };\n\n    const returnValues = [...plugin.doc_strings.return];\n    parseReturnRecursive(returnValues, 0);\n    this.returnContainMaxDepth = maxDepth;\n\n    return returnValues;\n  }\n\n  private formatPartError(part: dom.ErrorPart): React.ReactNode {\n    return <span className='error'>ERROR while parsing: {part.message}</span>;\n  }\n\n  private formatPartBold(part: dom.BoldPart): React.ReactNode {\n    return <b>{part.text}</b>;\n  }\n\n  private formatPartCode(part: dom.CodePart): React.ReactNode {\n    return <span className='inline-code'>{part.text}</span>;\n  }\n\n  private formatPartHorizontalLine(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    part: dom.HorizontalLinePart,\n  ): React.ReactNode {\n    return <hr />;\n  }\n\n  private formatPartItalic(part: dom.ItalicPart): React.ReactNode {\n    return <i>{part.text}</i>;\n  }\n\n  private formatPartLink(part: dom.LinkPart): React.ReactNode {\n    return this.props.renderDocLink(part.text, part.url);\n  }\n\n  private formatPartModule(part: dom.ModulePart): React.ReactNode {\n    return this.props.renderPluginLink(part.fqcn, 'module', undefined);\n  }\n\n  private formatPartRstRef(part: dom.RSTRefPart): React.ReactNode {\n    return part.text;\n  }\n\n  private formatPartURL(part: dom.URLPart): React.ReactNode {\n    return (\n      <a href={part.url} target='_blank' rel='noreferrer'>\n        {part.url}\n      </a>\n    );\n  }\n\n  private formatPartText(part: dom.TextPart): React.ReactNode {\n    return part.text;\n  }\n\n  private formatPartEnvVariable(part: dom.EnvVariablePart): React.ReactNode {\n    return <span className='inline-code'>{part.name}</span>;\n  }\n\n  private formatPartOptionNameReturnValue(\n    part: dom.OptionNamePart | dom.ReturnValuePart,\n  ): React.ReactNode {\n    const content =\n      part.value === undefined ? (\n        <span className='inline-code'>\n          <b>{part.name}</b>\n        </span>\n      ) : (\n        <span className='inline-code'>\n          {part.name}={part.value}\n        </span>\n      );\n    if (!part.plugin) {\n      return content;\n    }\n    return this.props.renderPluginLink(\n      part.plugin.fqcn,\n      part.plugin.type,\n      content,\n    );\n  }\n\n  private formatPartOptionValue(part: dom.OptionValuePart): React.ReactNode {\n    return <span className='inline-code'>{part.value}</span>;\n  }\n\n  private formatPartPlugin(part: dom.PluginPart): React.ReactNode {\n    return this.props.renderPluginLink(\n      part.plugin.fqcn,\n      part.plugin.type,\n      undefined,\n    );\n  }\n\n  private formatPart(part: dom.Part): React.ReactNode {\n    switch (part.type) {\n      case dom.PartType.ERROR:\n        return this.formatPartError(part as dom.ErrorPart);\n      case dom.PartType.BOLD:\n        return this.formatPartBold(part as dom.BoldPart);\n      case dom.PartType.CODE:\n        return this.formatPartCode(part as dom.CodePart);\n      case dom.PartType.HORIZONTAL_LINE:\n        return this.formatPartHorizontalLine(part as dom.HorizontalLinePart);\n      case dom.PartType.ITALIC:\n        return this.formatPartItalic(part as dom.ItalicPart);\n      case dom.PartType.LINK:\n        return this.formatPartLink(part as dom.LinkPart);\n      case dom.PartType.MODULE:\n        return this.formatPartModule(part as dom.ModulePart);\n      case dom.PartType.RST_REF:\n        return this.formatPartRstRef(part as dom.RSTRefPart);\n      case dom.PartType.URL:\n        return this.formatPartURL(part as dom.URLPart);\n      case dom.PartType.TEXT:\n        return this.formatPartText(part as dom.TextPart);\n      case dom.PartType.ENV_VARIABLE:\n        return this.formatPartEnvVariable(part as dom.EnvVariablePart);\n      case dom.PartType.OPTION_NAME:\n        return this.formatPartOptionNameReturnValue(part as dom.OptionNamePart);\n      case dom.PartType.OPTION_VALUE:\n        return this.formatPartOptionValue(part as dom.OptionValuePart);\n      case dom.PartType.PLUGIN:\n        return this.formatPartPlugin(part as dom.PluginPart);\n      case dom.PartType.RETURN_VALUE:\n        return this.formatPartOptionNameReturnValue(\n          part as dom.ReturnValuePart,\n        );\n    }\n  }\n\n  private applyDocFormatters(text: string): React.ReactNode {\n    // TODO: pass current plugin's type and name, and (if role) the current entrypoint as well\n    const parsed = parse(text);\n\n    // Special case: result is a single paragraph consisting of a single text part\n    if (\n      parsed.length === 1 &&\n      parsed[0].length === 1 &&\n      parsed[0][0].type === dom.PartType.TEXT\n    ) {\n      return <span>{parsed[0][0].text}</span>;\n    }\n\n    const fragments = [];\n    for (const paragraph of parsed) {\n      for (const part of paragraph) {\n        fragments.push(this.formatPart(part));\n      }\n    }\n    return (\n      <span>\n        {fragments.map((x, i) => (\n          <React.Fragment key={i}>{x}</React.Fragment>\n        ))}\n      </span>\n    );\n  }\n\n  private ensureListofStrings(v) {\n    if (typeof v === 'string') {\n      return [v];\n    } else if (!v) {\n      return [];\n    } else {\n      return v;\n    }\n  }\n\n  private renderDeprecated(doc: PluginDoc, _pluginName: string) {\n    const isDeprecated = doc.deprecated;\n\n    if (!isDeprecated) {\n      return null;\n    }\n\n    const deprecated = doc.deprecated || {};\n\n    return (\n      <React.Fragment>\n        <h2>DEPRECATED</h2>\n        {deprecated.removed_in ? (\n          <div>\n            <b>Removed in version</b> {doc.deprecated.removed_in}\n          </div>\n        ) : null}\n\n        <div>\n          <b>Why: </b>\n          {deprecated.why ? doc.deprecated.why : 'No reason specified.'}\n        </div>\n\n        <div>\n          <b>Alternative: </b>\n          {deprecated.alternative\n            ? doc.deprecated.alternative\n            : 'No alternatives specified.'}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private renderTableOfContents(content) {\n    // return this.props.renderTableOfContentsLink('Synopsis', 'synopsis');\n\n    return (\n      <ul>\n        {content['synopsis'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Synopsis', 'synopsis')}\n          </li>\n        )}\n        {content['parameters'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Parameters', 'parameters')}\n          </li>\n        )}\n        {content['notes'] !== null && (\n          <li>{this.props.renderTableOfContentsLink('Notes', 'notes')}</li>\n        )}\n        {content['examples'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Examples', 'examples')}\n          </li>\n        )}\n        {content['returnValues'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink(\n              'Return Values',\n              'return-values',\n            )}\n          </li>\n        )}\n      </ul>\n    );\n  }\n\n  private renderShortDescription(doc: PluginDoc) {\n    return <div>{doc.short_description}</div>;\n  }\n\n  private renderSynopsis(doc: PluginDoc) {\n    return (\n      <React.Fragment>\n        <h2 id='synopsis'>Synopsis</h2>\n        <ul>\n          {doc.description.map((d, i) => (\n            <li key={i}>{this.applyDocFormatters(d)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameters(\n    parameters: PluginOption[],\n    content_type: string,\n    maxDepth: number,\n  ) {\n    if (!parameters) {\n      return null;\n    }\n\n    // render the entries first,\n    const paramEntries = this.renderParameterEntries(\n      parameters,\n      content_type,\n      0,\n      maxDepth,\n      '',\n    );\n\n    return (\n      <React.Fragment>\n        <h2 id='parameters'>Parameters</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Parameter</th>\n              <th>\n                Choices/\n                <span className='blue'>Defaults</span>\n              </th>\n              {content_type !== 'module' ? <th>Configuration</th> : null}\n              <th>Comments</th>\n            </tr>\n            {\n              // TODO: add support for sub options. Example:\n              //https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/network/fortios/fortios_dlp_fp_doc_source.py#L93}\n              // TODO: do we need to display version added?\n            }\n            {paramEntries}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameterEntries(\n    parameters: PluginOption[],\n    content_type: string,\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let output = [];\n    parameters.forEach((option) => {\n      const spacers = [];\n      const key = `${parent}-${option.name}`;\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} className='spacer' />);\n      }\n      output.push(\n        <tr key={key}>\n          {\n            // PARAMETER --------------------------------\n          }\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.suboptions ? 'parent' : ''}\n          >\n            <span className='option-name'>{option.name}</span>\n            <small>\n              {this.documentedType(option['type'])}\n              {option['elements'] ? (\n                <span>\n                  {' '}\n                  / elements ={this.documentedType(option['elements'])}\n                </span>\n              ) : null}\n              {option['required'] ? (\n                <span>\n                  {' '}\n                  / <span className='red'>required</span>\n                </span>\n              ) : null}\n            </small>\n          </td>\n          {\n            // CHOICES -------------------------------\n          }\n          <td>{this.renderChoices(option)}</td>\n          {\n            // CONFIGURATION (non module only) -------\n          }\n          {content_type !== 'module' ? (\n            <td>{this.renderPluginConfiguration(option)}</td>\n          ) : null}\n          {\n            // COMMENTS ------------------------------\n          }\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option['aliases'] ? (\n              <small>\n                <span className='green'>\n                  aliases: {option['aliases'].join(', ')}\n                </span>\n              </small>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      // recursively render sub options\n      if (option.suboptions) {\n        output = output.concat(\n          this.renderParameterEntries(\n            option.suboptions,\n            content_type,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n\n    return output;\n  }\n\n  private renderPluginConfiguration(option) {\n    return (\n      <React.Fragment>\n        {option['ini'] ? (\n          <div className='plugin-config'>\n            ini entries:\n            {option['ini'].map((v, i) => (\n              <p key={i}>\n                [{v.section}]<br />\n                {v.key} = {v.default ? v.default : 'VALUE'}\n              </p>\n            ))}\n          </div>\n        ) : null}\n\n        {option['env'] ? (\n          <div className='plugin-config'>\n            {option['env'].map((v, i) => (\n              <div key={i}>env: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n\n        {option['vars'] ? (\n          <div className='plugin-config'>\n            {option['vars'].map((v, i) => (\n              <div key={i}>var: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderChoices(option) {\n    let choices, defaul;\n\n    if (option['type'] === 'bool') {\n      choices = ['true', 'false'];\n      if (option['default'] === true) {\n        defaul = 'true';\n      } else if (option['default'] === false) {\n        defaul = 'false';\n      }\n    } else {\n      choices = option['choices'] || [];\n      defaul = option['default'];\n    }\n\n    return (\n      <React.Fragment>\n        {choices && Array.isArray(choices) && choices.length !== 0 ? (\n          <div>\n            <span className='option-name'>Choices: </span>\n            <ul>\n              {choices.map((c, i) => (\n                <li key={i}>\n                  {c === defaul ? (\n                    <span className='blue'>{c} &nbsp;&larr;</span>\n                  ) : (\n                    c\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n\n        {defaul && !choices.includes(defaul) ? (\n          <span>\n            <span className='option-name'>Default: </span>\n            <span className='blue'>{defaul}</span>\n          </span>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderNotes(doc: PluginDoc) {\n    if (!doc.notes) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2 id='notes'>Notes</h2>\n        <ul>\n          {doc.notes.map((note, i) => (\n            <li key={i}>{this.applyDocFormatters(note)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderRequirements(doc: PluginDoc) {\n    if (!doc.requirements) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2>Requirements</h2>\n        <ul>\n          {doc.requirements.map((req, i) => (\n            <li key={i}>{req}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderExample(example: string) {\n    if (!example) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='examples'>Examples</h2>\n        <pre>{example}</pre>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValues(returnV: ReturnedValue[], maxDepth: number) {\n    if (!returnV) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='return-values'>Return Values</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Key</th>\n              <th>Returned</th>\n              <th>Description</th>\n            </tr>\n            {this.renderReturnValueEntries(returnV, 0, maxDepth, '')}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValueEntries(\n    returnValues: ReturnedValue[],\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let entries = [];\n\n    returnValues.forEach((option) => {\n      const spacers = [];\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} colSpan={1} className='spacer' />);\n      }\n      const key = `${parent}-${option.name}`;\n      entries.push(\n        <tr key={key}>\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.contains ? 'parent' : ''}\n          >\n            {option.name} <br /> ({option.type})\n          </td>\n          <td>{option.returned}</td>\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option.sample ? (\n              <div>\n                <br />\n                sample:\n                {typeof option.sample === 'string' ? (\n                  option.sample\n                ) : (\n                  <pre>{JSON.stringify(option.sample, null, 2)}</pre>\n                )}\n              </div>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      if (option.contains) {\n        entries = entries.concat(\n          // recursively render values\n          this.renderReturnValueEntries(\n            option.contains,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n    return entries;\n  }\n\n  // https://github.com/ansible/ansible/blob/1b8aa798df6f6fa96ba5ea2a9dbf01b3f1de555c/hacking/build_library/build_ansible/jinja2/filters.py#L53\n  private documentedType(text) {\n    switch (text) {\n      case 'str':\n        return 'string';\n      case 'bool':\n        return 'boolean';\n      case 'int':\n        return 'integer';\n      case 'dict':\n        return 'dictionary';\n      case undefined:\n        return '-';\n      default:\n        return text;\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownSeparator,\n  DropdownToggle,\n  DropdownToggleCheckbox,\n  Flex,\n  FlexItem,\n  Label,\n  LabelGroup,\n  Spinner,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleRepositoryType } from 'src/api';\nimport {\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  Pagination,\n  RadioRow,\n  SortTable,\n} from 'src/components';\n\ninterface IProps {\n  allRepositories: AnsibleRepositoryType[];\n  fixedRepos: string[];\n  loadRepos: (params, setRepositoryList, setLoading, setItemsCount) => void;\n  selectedRepos: string[];\n  setSelectedRepos: (selectedRepos: string[]) => void;\n  singleSelectionOnly?: boolean;\n  hideFixedRepos?: boolean;\n}\n\nexport const MultipleRepoSelector = (props: IProps) => {\n  const [isSelectorChecked, setIsSelectorChecked] = useState(false);\n  const [isSelectorOpen, setIsSelectorOpen] = useState(false);\n  const [inputText, setInputText] = useState('');\n  const [repositoryList, setRepositoryList] = useState<AnsibleRepositoryType[]>(\n    [],\n  );\n  const [itemsCount, setItemsCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  function changeSelection(name) {\n    if (props.fixedRepos.includes(name)) {\n      return;\n    }\n\n    const checked = props.selectedRepos.includes(name);\n\n    if (checked) {\n      // remove\n      props.setSelectedRepos(\n        props.selectedRepos.filter((element) => element != name),\n      );\n    } else {\n      // add\n      props.setSelectedRepos([...props.selectedRepos, name]);\n    }\n  }\n\n  function renderLabels() {\n    const labels = (\n      <>\n        <LabelGroup>\n          {props.selectedRepos.map((name) => {\n            let label = null;\n            if (props.fixedRepos.includes(name)) {\n              if (!props.hideFixedRepos) {\n                label = <Label>{name}</Label>;\n              }\n            } else {\n              label = (\n                <Label onClose={() => changeSelection(name)}>{name}</Label>\n              );\n            }\n            return <>{label} </>;\n          })}\n        </LabelGroup>\n      </>\n    );\n\n    return (\n      <>\n        <Flex>\n          <FlexItem>\n            <b>{t`Selected`}</b>\n          </FlexItem>\n          <FlexItem>{labels}</FlexItem>\n        </Flex>\n      </>\n    );\n  }\n\n  useEffect(() => {\n    props.loadRepos(params, setRepositoryList, setLoading, setItemsCount);\n  }, [params, props.allRepositories]);\n\n  function renderMultipleSelector() {\n    function onToggle(isOpen: boolean) {\n      setIsSelectorOpen(isOpen);\n    }\n\n    function onFocus() {\n      const element = document.getElementById('toggle-split-button');\n      element.focus();\n    }\n\n    function onSelect() {\n      setIsSelectorOpen(false);\n      onFocus();\n    }\n\n    function selectAll() {\n      props.setSelectedRepos(props.allRepositories.map((a) => a.name));\n      setIsSelectorChecked(true);\n    }\n\n    function selectPage() {\n      const newRepos = [...props.selectedRepos];\n\n      repositoryList.forEach((repo) => {\n        if (!props.selectedRepos.includes(repo.name)) {\n          newRepos.push(repo.name);\n        }\n      });\n\n      props.setSelectedRepos(newRepos);\n      setIsSelectorChecked(true);\n    }\n\n    function deselectAll() {\n      props.setSelectedRepos(props.fixedRepos);\n      setIsSelectorChecked(false);\n    }\n\n    function deselectPage() {\n      const newSelectedRepos = props.selectedRepos.filter(\n        (repo) =>\n          props.fixedRepos.includes(repo) ||\n          !repositoryList.find((repo2) => repo2.name == repo),\n      );\n      props.setSelectedRepos(newSelectedRepos);\n      setIsSelectorChecked(false);\n    }\n\n    function onToggleCheckbox() {\n      setIsSelectorChecked(!isSelectorChecked);\n      if (isSelectorChecked) {\n        deselectPage();\n      } else {\n        selectPage();\n      }\n    }\n\n    const dropdownItems = [\n      <DropdownItem\n        onClick={selectPage}\n        key='select-page'\n      >{t`Select page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={selectAll}\n        key='select-all'\n      >{t`Select all (${props.allRepositories.length} items)`}</DropdownItem>,\n      <DropdownSeparator key='separator' />,\n      <DropdownItem\n        onClick={deselectPage}\n        key='deselect-page'\n      >{t`Deselect page (${repositoryList.length} items)`}</DropdownItem>,\n      <DropdownItem\n        onClick={deselectAll}\n        key='deselect-all'\n      >{t`Deselect all (${props.allRepositories.length} items)`}</DropdownItem>,\n    ];\n\n    return (\n      <Dropdown\n        onSelect={onSelect}\n        toggle={\n          <DropdownToggle\n            splitButtonItems={[\n              <DropdownToggleCheckbox\n                id='split-button-toggle-checkbox'\n                key='split-checkbox'\n                aria-label='Select all'\n                checked={isSelectorChecked}\n                onChange={onToggleCheckbox}\n              />,\n            ]}\n            onToggle={onToggle}\n            id='toggle-split-button'\n          />\n        }\n        isOpen={isSelectorOpen}\n        dropdownItems={dropdownItems}\n      />\n    );\n  }\n\n  function renderTable() {\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Name`,\n          type: 'alpha',\n          id: 'name',\n        },\n      ],\n    };\n\n    return (\n      <>\n        <table\n          aria-label={t`Collection versions`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={sortTableOptions}\n            params={params}\n            updateParams={(p) => setParams(p)}\n          />\n          <tbody>\n            {repositoryList.map((repo, i) => (\n              <>\n                {!props.singleSelectionOnly && (\n                  <CheckboxRow\n                    rowIndex={i}\n                    key={repo.name}\n                    isSelected={props.selectedRepos.includes(repo.name)}\n                    onSelect={() => {\n                      changeSelection(repo.name);\n                    }}\n                    isDisabled={props.fixedRepos.includes(repo.name)}\n                    data-cy={`ApproveModal-CheckboxRow-row-${repo.name}`}\n                  >\n                    <td>\n                      <div>{repo.name}</div>\n                      <div>{repo.description}</div>\n                    </td>\n                  </CheckboxRow>\n                )}\n\n                {props.singleSelectionOnly && (\n                  <>\n                    <RadioRow\n                      rowIndex={i}\n                      key={repo.name}\n                      isSelected={props.selectedRepos.includes(repo.name)}\n                      onSelect={() => {\n                        props.setSelectedRepos([repo.name]);\n                      }}\n                      isDisabled={props.fixedRepos.includes(repo.name)}\n                      data-cy={`ApproveModal-RadioRow-row-${repo.name}`}\n                    >\n                      <td>\n                        <div>{repo.name}</div>\n                        <div>{repo.description}</div>\n                      </td>\n                    </RadioRow>\n                  </>\n                )}\n              </>\n            ))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {renderLabels()}\n      <div className='toolbar hub-toolbar'>\n        <Toolbar>\n          <ToolbarGroup>\n            {!props.singleSelectionOnly && (\n              <ToolbarItem>{renderMultipleSelector()}</ToolbarItem>\n            )}\n            <ToolbarItem>\n              <CompoundFilter\n                inputText={inputText}\n                onChange={(text) => {\n                  setInputText(text);\n                }}\n                updateParams={(p) => setParams(p)}\n                params={params}\n                filterConfig={[\n                  {\n                    id: 'name__icontains',\n                    title: t`Repository`,\n                  },\n                ]}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n\n        <Pagination\n          params={params}\n          updateParams={(p) => setParams(p)}\n          count={itemsCount}\n          isTop\n        />\n      </div>\n      <div>\n        <AppliedFilters\n          updateParams={(p) => {\n            setParams(p);\n            setInputText('');\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort']}\n          niceNames={{\n            name__icontains: t`Name`,\n          }}\n        />\n      </div>\n\n      {loading ? <Spinner /> : renderTable()}\n\n      <div className='footer'>\n        <Pagination\n          params={params}\n          updateParams={(p) => setParams(p)}\n          count={itemsCount}\n        />\n      </div>\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  selectedRepo: string;\n}\n\nexport const RepoSelector = ({ selectedRepo }: IProps) => {\n  const { featureFlags } = useContext();\n\n  if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n    return null;\n  }\n  if (!featureFlags.display_repositories) {\n    return null;\n  }\n\n  const repoName =\n    {\n      community: t`Community`,\n      published: t`Published`,\n      rejected: t`Rejected`,\n      'rh-certified': t`Red Hat Certified`,\n      staging: t`Staging`,\n      validated: t`Validated`,\n    }[selectedRepo] || selectedRepo;\n\n  return (\n    <div className='breadcrumb-container'>\n      <Flex>\n        <FlexItem>\n          <InputGroup>\n            <InputGroupText style={{ paddingLeft: 0 }} variant='plain'>\n              {t`Repository`}\n            </InputGroupText>\n            <InputGroupText\n              variant='plain'\n              style={{\n                backgroundColor: 'var(--pf-global--disabled-color--300)',\n                color: 'var(--pf-global--Color--100)',\n                height: '36px',\n              }}\n            >\n              {repoName}\n            </InputGroupText>\n          </InputGroup>\n        </FlexItem>\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Button,\n  Checkbox,\n  Form,\n  FormGroup,\n  Select,\n  SelectOption,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleRemoteAPI, AnsibleRepositoryType } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  HelperText,\n  LazyDistributions,\n  PulpLabels,\n} from 'src/components';\nimport {\n  ErrorMessagesType,\n  errorMessage,\n  repositoryBasePath,\n} from 'src/utilities';\n\ninterface IProps {\n  allowEditName: boolean;\n  errorMessages: ErrorMessagesType;\n  onCancel: () => void;\n  onSave: ({ createDistribution, hideFromSearch, pipeline }) => void;\n  repository: AnsibleRepositoryType;\n  updateRepository: (r) => void;\n}\n\nexport const AnsibleRepositoryForm = ({\n  allowEditName,\n  errorMessages,\n  onCancel,\n  onSave,\n  repository,\n  updateRepository,\n}: IProps) => {\n  const requiredFields = [];\n  const disabledFields = allowEditName ? [] : ['name'];\n\n  const toError = (bool) => (bool ? 'default' : 'error');\n  const formGroup = (fieldName, label, helperText, children) => (\n    <FormGroup\n      key={fieldName}\n      fieldId={fieldName}\n      label={\n        helperText ? (\n          <>\n            {label} <HelperText content={helperText} />\n          </>\n        ) : (\n          label\n        )\n      }\n      isRequired={requiredFields.includes(fieldName)}\n      validated={toError(!(fieldName in errorMessages))}\n      helperTextInvalid={errorMessages[fieldName]}\n    >\n      {children}\n    </FormGroup>\n  );\n  const inputField = (fieldName, label, helperText, props) =>\n    formGroup(\n      fieldName,\n      label,\n      helperText,\n      <TextInput\n        validated={toError(!(fieldName in errorMessages))}\n        isRequired={requiredFields.includes(fieldName)}\n        isDisabled={disabledFields.includes(fieldName)}\n        id={fieldName}\n        value={repository[fieldName] || ''}\n        onChange={(value) =>\n          updateRepository({ ...repository, [fieldName]: value })\n        }\n        {...props}\n      />,\n    );\n  const stringField = (fieldName, label, helperText?) =>\n    inputField(fieldName, label, helperText, { type: 'text' });\n  const numericField = (fieldName, label, helperText?) =>\n    inputField(fieldName, label, helperText, { type: 'number' });\n\n  const isValid = !requiredFields.find((field) => !repository[field]);\n\n  const [createDistribution, setCreateDistribution] = useState(true);\n  const [disabledDistribution, setDisabledDistribution] = useState(false);\n  const onDistributionsLoad = (distroBasePath) => {\n    if (distroBasePath) {\n      setCreateDistribution(false);\n      setDisabledDistribution(true);\n    } else {\n      setCreateDistribution(true);\n      setDisabledDistribution(false);\n    }\n  };\n\n  const [hideFromSearch, setHideFromSearch] = useState(\n    repository?.pulp_labels?.hide_from_search === '',\n  );\n  const [pipeline, setPipeline] = useState(repository?.pulp_labels?.pipeline);\n  const [disableHideFromSearch, setDisableHideFromSearch] = useState(\n    hideFromSearch && pipeline === 'staging',\n  );\n\n  const [remotes, setRemotes] = useState(null);\n  const [remotesError, setRemotesError] = useState(null);\n  const loadRemotes = (name?) => {\n    setRemotesError(null);\n    AnsibleRemoteAPI.list({ ...(name ? { name__icontains: name } : {}) })\n      .then(({ data }) => setRemotes(data.results))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setRemotes([]);\n        setRemotesError(errorMessage(status, statusText));\n      });\n  };\n\n  useEffect(() => loadRemotes(), []);\n\n  useEffect(() => {\n    if (!repository) {\n      onDistributionsLoad(null);\n      return;\n    }\n\n    repositoryBasePath(repository.name, repository.pulp_href)\n      .catch(() => null)\n      .then(onDistributionsLoad);\n  }, [repository?.pulp_href]);\n\n  const selectedRemote = remotes?.find?.(\n    ({ pulp_href }) => pulp_href === repository?.remote,\n  );\n\n  const [selectedPipeline, setSelectedPipeline] = useState(\n    hideFromSearch && pipeline === 'staging'\n      ? 'staging'\n      : pipeline === 'approved'\n      ? 'approved'\n      : 'none',\n  );\n\n  const [selectOpen, setSelectOpen] = useState(false);\n\n  const selectPipeline = (value) => {\n    if (disableHideFromSearch && value !== 'staging') {\n      setHideFromSearch(repository?.pulp_labels?.hide_from_search === '');\n    }\n    if (value === 'staging') {\n      setSelectedPipeline(value);\n      setPipeline(value);\n      setHideFromSearch(true);\n      setDisableHideFromSearch(true);\n    } else if (value === 'approved') {\n      setSelectedPipeline(value);\n      setPipeline(value);\n      setDisableHideFromSearch(false);\n    } else {\n      setSelectedPipeline('none');\n      setPipeline(null);\n      setDisableHideFromSearch(false);\n    }\n    setSelectOpen(false);\n  };\n\n  const selectOptions = {\n    staging: { id: 'staging', toString: () => t`Staging` },\n    approved: { id: 'approved', toString: () => t`Approved` },\n    none: { id: 'none', toString: () => t`None` },\n  };\n\n  const pipelineHelp = (\n    <Trans>\n      Pipeline adds repository labels with pre-defined meanings:\n      <ul>\n        <li>\n          <b>None</b> - users require permissions to modify content in this\n          repository to upload collection.\n        </li>\n        <li>\n          <b>Approved</b> - collections can be moved here on approval.\n          Publishing directly to this repository is disabled.\n        </li>\n        <li>\n          <b>Staging</b> - collections uploaded here require approval before\n          showing up on the search page. Anyone with upload permissions for a\n          namespace can upload collections to this repository.\n        </li>\n      </ul>\n    </Trans>\n  );\n  const labelsHelp = (\n    <Trans>\n      Repository labels can change the context in which a repository is seen.\n      <ul>\n        <li>\n          <b>Hide from search</b> (\n          <pre style={{ display: 'inline-block' }}>hide_from_search</pre>) -\n          prevent collections in this repository from showing up on the home\n          page\n        </li>\n        <li>\n          (<pre style={{ display: 'inline-block' }}>pipeline: *</pre>) - see\n          Pipeline above\n        </li>\n      </ul>\n    </Trans>\n  );\n\n  return (\n    <Form>\n      {stringField('name', t`Name`)}\n      {stringField('description', t`Description`)}\n      {numericField(\n        'retain_repo_versions',\n        t`Retained number of versions`,\n        t`In order to retain all versions, leave this field blank.`,\n      )}\n\n      {formGroup(\n        'distributions',\n        t`Distributions`,\n        t`Content in repositories without a distribution will not be visible to clients for sync, download or search.`,\n        <>\n          <LazyDistributions\n            emptyText={t`None`}\n            repositoryHref={repository.pulp_href}\n          />\n          <br />\n          <Checkbox\n            isChecked={createDistribution}\n            isDisabled={disabledDistribution}\n            onChange={(value) => setCreateDistribution(value)}\n            label={t`Create a \"${repository.name}\" distribution`}\n            id='create_distribution'\n          />\n        </>,\n      )}\n\n      {formGroup(\n        'pipeline',\n        t`Pipeline`,\n        pipelineHelp,\n        <div data-cy='pipeline'>\n          <Select\n            variant='single'\n            isOpen={selectOpen}\n            onToggle={() => setSelectOpen(!selectOpen)}\n            onSelect={(_e, value: { id }) => selectPipeline(value.id)}\n            selections={selectOptions[selectedPipeline]}\n          >\n            {Object.entries(selectOptions).map(([k, v]) => (\n              <SelectOption key={k} value={v} />\n            ))}\n          </Select>\n        </div>,\n      )}\n\n      {formGroup(\n        'labels',\n        t`Labels`,\n        labelsHelp,\n        <>\n          <div\n            // prevents \"N more\" clicks from submitting the form\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n          >\n            <PulpLabels labels={repository.pulp_labels} />\n          </div>\n          <div style={{ marginTop: '12px' }}>\n            <Checkbox\n              isChecked={hideFromSearch}\n              isDisabled={disableHideFromSearch}\n              label={t`Hide from search`}\n              id='hide_from_search'\n              onChange={(value) => setHideFromSearch(value)}\n            />\n          </div>\n        </>,\n      )}\n\n      {formGroup(\n        'private',\n        t`Make private`,\n        t`Make the repository private.`,\n        <Checkbox\n          id='private'\n          isChecked={repository.private}\n          label={t`Make private`}\n          onChange={(value) =>\n            updateRepository({ ...repository, private: value })\n          }\n        />,\n      )}\n\n      {formGroup(\n        'remote',\n        t`Remote`,\n        t`Setting a remote allows a repository to sync from elsewhere.`,\n        <>\n          <div data-cy='remote'>\n            {remotes ? (\n              <APISearchTypeAhead\n                loadResults={loadRemotes}\n                onClear={() =>\n                  updateRepository({ ...repository, remote: null })\n                }\n                onSelect={(_event, value) =>\n                  updateRepository({\n                    ...repository,\n                    remote: remotes.find(({ name }) => name === value)\n                      ?.pulp_href,\n                  })\n                }\n                placeholderText={t`Select a remote`}\n                results={remotes}\n                selections={\n                  selectedRemote\n                    ? [\n                        {\n                          name: selectedRemote.name,\n                          id: selectedRemote.pulp_href,\n                        },\n                      ]\n                    : []\n                }\n              />\n            ) : null}\n            {remotesError ? (\n              <span\n                style={{\n                  color: 'var(--pf-global--danger-color--200)',\n                }}\n              >\n                {t`Failed to load remotes: ${remotesError}`}\n              </span>\n            ) : null}\n            {!remotes && !remotesError ? <Spinner size='sm' /> : null}\n          </div>\n        </>,\n      )}\n\n      {errorMessages['__nofield'] ? (\n        <span\n          style={{\n            color: 'var(--pf-global--danger-color--200)',\n          }}\n        >\n          {errorMessages['__nofield']}\n        </span>\n      ) : null}\n\n      <ActionGroup key='actions'>\n        <Button\n          isDisabled={!isValid}\n          key='confirm'\n          variant='primary'\n          onClick={() =>\n            onSave({\n              createDistribution,\n              hideFromSearch,\n              pipeline,\n            })\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' variant='link' onClick={onCancel}>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    </Form>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Spinner, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { AnsibleDistributionAPI } from 'src/api';\nimport { errorMessage } from 'src/utilities';\n\nexport const LazyDistributions = ({\n  emptyText,\n  repositoryHref,\n}: {\n  emptyText?: string;\n  repositoryHref: string;\n}) => {\n  const [distributions, setDistributions] = useState([]);\n  const [count, setCount] = useState(null);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const query = (prepend?) => {\n    AnsibleDistributionAPI.list({\n      repository: repositoryHref,\n      sort: 'pulp_created',\n      page,\n      page_size: 10,\n    })\n      .then(({ data: { count, results } }) => {\n        setDistributions(prepend ? [...prepend, ...results] : results);\n        setCount(count);\n        setError(null);\n        setLoading(false);\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setDistributions(prepend || []);\n        setCount(null);\n        setError(errorMessage(status, statusText));\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (!repositoryHref) {\n      setDistributions([]);\n      setCount(null);\n      setPage(1);\n      setError(null);\n      setLoading(false);\n      return;\n    }\n\n    setDistributions([]);\n    setCount(null);\n    setPage(1);\n    setError(null);\n    setLoading(true);\n\n    query();\n  }, [repositoryHref]);\n\n  // support pagination, but page == 1 is handled above\n  useEffect(() => {\n    if (page === 1) {\n      return;\n    }\n\n    query(distributions);\n  }, [page]);\n\n  const errorElement = error && (\n    <Tooltip content={t`Failed to load distributions: ${error}`} key='empty'>\n      <Button variant='plain'>\n        <ExclamationCircleIcon />\n      </Button>\n    </Tooltip>\n  );\n\n  const loadMore = () => {\n    setPage((page) => page + 1);\n  };\n\n  return loading ? (\n    <Spinner size='sm' />\n  ) : error ? (\n    errorElement\n  ) : (\n    <>\n      {distributions?.map?.(({ name }) => name)?.join?.(', ') ||\n        (emptyText ?? '---')}\n      {count > distributions?.length ? (\n        <>\n          {' '}\n          <a onClick={loadMore}>(more)</a>\n        </>\n      ) : null}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Spinner, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AnsibleRepositoryAPI } from 'src/api';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\n\nexport const LazyRepositories = ({\n  emptyText,\n  remoteHref,\n}: {\n  emptyText?: string;\n  remoteHref: string;\n}) => {\n  const [repositories, setRepositories] = useState([]);\n  const [count, setCount] = useState(null);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const query = (prepend?) => {\n    AnsibleRepositoryAPI.list({ remote: remoteHref, page, page_size: 10 })\n      .then(({ data: { count, results } }) => {\n        setRepositories(prepend ? [...prepend, ...results] : results);\n        setCount(count);\n        setError(null);\n        setLoading(false);\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        setRepositories(prepend || []);\n        setCount(null);\n        setError(errorMessage(status, statusText));\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (!remoteHref) {\n      setRepositories([]);\n      setCount(null);\n      setPage(1);\n      setError(null);\n      setLoading(false);\n      return;\n    }\n\n    setRepositories([]);\n    setCount(null);\n    setPage(1);\n    setError(null);\n    setLoading(true);\n\n    query();\n  }, [remoteHref]);\n\n  // support pagination, but page == 1 is handled above\n  useEffect(() => {\n    if (page === 1) {\n      return;\n    }\n\n    query(repositories);\n  }, [page]);\n\n  const errorElement = error && (\n    <Tooltip content={t`Failed to load repositories: ${error}`} key='empty'>\n      <Button variant='plain'>\n        <ExclamationCircleIcon />\n      </Button>\n    </Tooltip>\n  );\n\n  const loadMore = () => {\n    setPage((page) => page + 1);\n  };\n\n  return loading ? (\n    <Spinner size='sm' />\n  ) : error ? (\n    errorElement\n  ) : (\n    <>\n      {repositories?.map?.(({ name }, index) => (\n        <>\n          {index ? ', ' : ''}\n          <Link to={formatPath(Paths.ansibleRepositoryDetail, { name })}>\n            {name}\n          </Link>\n        </>\n      ))}\n      {!repositories?.length ? emptyText ?? '---' : null}\n      {count > repositories?.length ? (\n        <>\n          {' '}\n          <a onClick={loadMore}>(more)</a>\n        </>\n      ) : null}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelGroup } from '@patternfly/react-core';\nimport React from 'react';\n\nexport const PulpLabels = ({ labels }: { labels: Record<string, string> }) => {\n  if (!labels || !Object.keys(labels).length) {\n    return <>{t`None`}</>;\n  }\n\n  return (\n    <LabelGroup>\n      {Object.entries(labels).map(([k, v]) => (\n        <Label key={k}>\n          {k}\n          {v ? ': ' + v : null}\n        </Label>\n      ))}\n    </LabelGroup>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { CodeEditor, Language } from '@patternfly/react-code-editor';\nimport {\n  ActionGroup,\n  Button,\n  Checkbox,\n  ExpandableSection,\n  Flex,\n  FlexItem,\n  Form,\n  FormGroup,\n  Modal,\n  Switch,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  DownloadIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport { FileUpload, HelperText, WriteOnlyField } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport {\n  ErrorMessagesType,\n  downloadString,\n  isFieldSet,\n  isWriteOnly,\n  validateURLHelper,\n} from 'src/utilities';\n\ninterface IProps {\n  allowEditName?: boolean;\n  closeModal: () => void;\n  errorMessages: ErrorMessagesType;\n  remote: RemoteType;\n  remoteType: 'registry' | 'ansible-remote';\n  saveRemote: () => void;\n  showModal?: boolean;\n  showMain?: boolean;\n  title?: string;\n  updateRemote: (remote) => void;\n}\n\ninterface FormFilename {\n  name: string;\n  original: boolean;\n}\n\ninterface IState {\n  filenames: {\n    requirements_file: FormFilename;\n    client_key: FormFilename;\n    client_cert: FormFilename;\n    ca_cert: FormFilename;\n  };\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    const { requirements_file, client_key, client_cert, ca_cert } =\n      props.remote || {};\n\n    this.state = {\n      filenames: {\n        requirements_file: {\n          name: requirements_file ? 'requirements.yml' : '',\n          original: !!requirements_file,\n        },\n        client_key: {\n          name: client_key ? 'client_key' : '',\n          original: !!client_key,\n        },\n        client_cert: {\n          name: client_cert ? 'client_cert' : '',\n          original: !!client_cert,\n        },\n        ca_cert: {\n          name: ca_cert ? 'ca_cert' : '',\n          original: !!ca_cert,\n        },\n      },\n    };\n\n    // Shim in a default concurrency value to pass form validation (AAH-959)\n    if (\n      this.props.remoteType !== 'registry' &&\n      this.props.remote.download_concurrency === null\n    ) {\n      this.updateRemote(10, 'download_concurrency');\n    }\n  }\n\n  render() {\n    const {\n      allowEditName,\n      closeModal,\n      remote,\n      saveRemote,\n      showMain,\n      showModal,\n      remoteType,\n      title,\n    } = this.props;\n\n    if (!remote) {\n      return null;\n    }\n\n    const requiredFields = ['name', 'url'];\n    let disabledFields = allowEditName ? [] : ['name'];\n\n    switch (remoteType) {\n      case 'ansible-remote':\n        // require only name, url; nothing disabled\n        break;\n\n      case 'registry':\n        disabledFields = disabledFields.concat([\n          'auth_url',\n          'token',\n          'requirements_file',\n          'signed_only',\n        ]);\n        break;\n    }\n\n    const save = (\n      <Button\n        isDisabled={!this.isValid(requiredFields)}\n        key='confirm'\n        variant='primary'\n        onClick={() => saveRemote()}\n      >\n        {t`Save`}\n      </Button>\n    );\n    const cancel = (\n      <Button key='cancel' variant='link' onClick={() => closeModal()}>\n        {t`Cancel`}\n      </Button>\n    );\n\n    if (showMain) {\n      return (\n        <>\n          {this.renderForm(\n            requiredFields,\n            disabledFields,\n            <ActionGroup key='actions'>\n              {save}\n              {cancel}\n            </ActionGroup>,\n          )}\n        </>\n      );\n    }\n\n    return (\n      <Modal\n        isOpen={showModal}\n        title={title || t`Edit remote`}\n        variant='small'\n        onClose={() => closeModal()}\n        actions={[save, cancel]}\n      >\n        {this.renderForm(requiredFields, disabledFields)}\n      </Modal>\n    );\n  }\n\n  private renderForm(requiredFields, disabledFields, extra?) {\n    const { errorMessages, remote, remoteType } = this.props;\n    const { filenames } = this.state;\n    const { collection_signing } = this.context.featureFlags;\n    const writeOnlyFields =\n      remote[\n        remoteType === 'ansible-remote' ? 'hidden_fields' : 'write_only_fields'\n      ];\n\n    const docsAnsibleLink = (\n      <a\n        target='_blank'\n        href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'\n        rel='noreferrer'\n      >\n        requirements.yml\n      </a>\n    );\n\n    const yamlTemplate = [\n      '# Sample requirements.yaml',\n      '',\n      'collections:',\n      '  - name: my_namespace.my_collection_name',\n      '  - name: my_namespace.my_collection_name2',\n    ].join('\\n');\n\n    const filename = (field) =>\n      filenames[field].original ? t`(uploaded)` : filenames[field].name;\n    const fileOnChange = (field) => (value, name) => {\n      this.setState(\n        {\n          filenames: {\n            ...filenames,\n            [field]: {\n              name,\n              original: false,\n            },\n          },\n        },\n        () => this.updateRemote(value, field),\n      );\n    };\n\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={t`Name`}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={(value) => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'url'}\n          label={t`URL`}\n          labelIcon={\n            <HelperText content={t`The URL of an external content source.`} />\n          }\n          isRequired={requiredFields.includes('url')}\n          {...validateURLHelper(errorMessages['url'], remote.url)}\n          helperTextIcon={<ExclamationTriangleIcon />}\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n        >\n          <TextInput\n            validated={\n              validateURLHelper(errorMessages['url'], remote.url).validated\n            }\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={(value) => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n\n        {!disabledFields.includes('signed_only') && collection_signing ? (\n          <FormGroup\n            fieldId={'signed_only'}\n            name={t`Signed only`}\n            label={t`Download only signed collections`}\n          >\n            <Switch\n              id='signed_only'\n              isChecked={!!remote.signed_only}\n              onChange={(value) => this.updateRemote(value, 'signed_only')}\n            />\n          </FormGroup>\n        ) : null}\n\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={t`Token`}\n            labelIcon={\n              <HelperText\n                content={t`Token for authenticating to the server URL.`}\n              />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', writeOnlyFields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                autoComplete='off'\n                id='token'\n                value={remote.token || ''}\n                onChange={(value) => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={t`SSO URL`}\n            labelIcon={<HelperText content={t`Single sign on URL.`} />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={(value) => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={t`YAML requirements`}\n            labelIcon={\n              <HelperText\n                content={\n                  <Trans>\n                    This uses the same {docsAnsibleLink} format as the\n                    ansible-galaxy CLI with the caveat that roles aren&apos;t\n                    supported and the source parameter is not supported.\n                  </Trans>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('requirements_file')}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('requirements_file')}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() =>\n                    downloadString(\n                      this.props.remote.requirements_file,\n                      filenames.requirements_file.name,\n                    )\n                  }\n                  variant='plain'\n                  aria-label={t`Download requirements file`}\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n            <ExpandableSection\n              toggleTextExpanded={t`Close YAML editor`}\n              toggleTextCollapsed={t`Edit in YAML editor`}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <ExclamationTriangleIcon />{' '}\n                  {t`If you populate this requirements file, this remote will only sync collections from this file, otherwise all collections will be synchronized.`}\n                  <CodeEditor\n                    code={this.props.remote.requirements_file}\n                    isCopyEnabled\n                    isDarkTheme\n                    isDownloadEnabled\n                    isLanguageLabelVisible\n                    isUploadEnabled\n                    emptyState={\n                      <>\n                        <pre>{yamlTemplate}</pre>\n                        <Button\n                          variant='plain'\n                          onClick={() =>\n                            this.updateRemote(yamlTemplate, 'requirements_file')\n                          }\n                        >{t`Use template`}</Button>\n                        <Button\n                          variant='plain'\n                          onClick={() =>\n                            this.updateRemote('\\n', 'requirements_file')\n                          }\n                        >{t`Start from scratch`}</Button>\n                      </>\n                    }\n                    height='20rem'\n                    language={Language.yaml}\n                    onChange={(value) =>\n                      this.updateRemote(value, 'requirements_file')\n                    }\n                    onEditorDidMount={(editor) => editor.focus()}\n                  />\n                </FlexItem>\n              </Flex>\n            </ExpandableSection>\n          </FormGroup>\n        )}\n\n        <FormGroup\n          data-cy='username'\n          fieldId={'username'}\n          label={t`Username`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The username to be used for authentication when syncing.`\n                  : t`The username to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('username')}\n          validated={this.toError(!('username' in errorMessages))}\n          helperTextInvalid={errorMessages['username']}\n        >\n          <WriteOnlyField\n            isValueSet={\n              isWriteOnly('username', writeOnlyFields) &&\n              isFieldSet('username', writeOnlyFields)\n            }\n            onClear={() => this.updateIsSet('username', false)}\n          >\n            <TextInput\n              validated={this.toError(!('username' in errorMessages))}\n              isRequired={requiredFields.includes('username')}\n              isDisabled={disabledFields.includes('username')}\n              id='username'\n              type='text'\n              value={remote.username || ''}\n              onChange={(value) => this.updateRemote(value, 'username')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <FormGroup\n          data-cy='password'\n          fieldId={'password'}\n          label={t`Password`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The password to be used for authentication when syncing.`\n                  : t`The password to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('password')}\n          validated={this.toError(!('password' in errorMessages))}\n          helperTextInvalid={errorMessages['password']}\n        >\n          <WriteOnlyField\n            isValueSet={isFieldSet('password', writeOnlyFields)}\n            onClear={() => this.updateIsSet('password', false)}\n          >\n            <TextInput\n              validated={this.toError(!('password' in errorMessages))}\n              isRequired={requiredFields.includes('password')}\n              isDisabled={disabledFields.includes('password')}\n              id='password'\n              type='password'\n              autoComplete='off'\n              value={remote.password || ''}\n              onChange={(value) => this.updateRemote(value, 'password')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <ExpandableSection\n          toggleTextExpanded={t`Hide advanced options`}\n          toggleTextCollapsed={t`Show advanced options`}\n        >\n          <div className='pf-c-form'>\n            <FormGroup\n              fieldId={'proxy_url'}\n              label={t`Proxy URL`}\n              isRequired={requiredFields.includes('proxy_url')}\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_url']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_url' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_url')}\n                isDisabled={disabledFields.includes('proxy_url')}\n                id='proxy_url'\n                type='text'\n                value={remote.proxy_url || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_url')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_username'\n              fieldId={'proxy_username'}\n              label={t`Proxy username`}\n              isRequired={requiredFields.includes('proxy_username')}\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_username']}\n            >\n              <WriteOnlyField\n                isValueSet={\n                  isWriteOnly('proxy_username', writeOnlyFields) &&\n                  isFieldSet('proxy_username', writeOnlyFields)\n                }\n                onClear={() => this.updateIsSet('proxy_username', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_username' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_username')}\n                  isDisabled={disabledFields.includes('proxy_username')}\n                  id='proxy_username'\n                  type='text'\n                  value={remote.proxy_username || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_username')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_password'\n              fieldId={'proxy_password'}\n              label={t`Proxy password`}\n              isRequired={requiredFields.includes('proxy_password')}\n              validated={this.toError(!('proxy_password' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('proxy_password', writeOnlyFields)}\n                onClear={() => this.updateIsSet('proxy_password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_password' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_password')}\n                  isDisabled={disabledFields.includes('proxy_password')}\n                  id='proxy_password'\n                  type='password'\n                  autoComplete='off'\n                  value={remote.proxy_password || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_password')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'tls_validation'}\n              label={t`TLS validation`}\n              labelIcon={\n                <HelperText\n                  content={t`If selected, TLS peer validation must be performed.`}\n                />\n              }\n              isRequired={requiredFields.includes('tls_validation')}\n              validated={this.toError(!('tls_validation' in errorMessages))}\n              helperTextInvalid={errorMessages['tls_validation']}\n            >\n              <Checkbox\n                onChange={(value) => this.updateRemote(value, 'tls_validation')}\n                id='tls_validation'\n                isChecked={remote.tls_validation}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_key'}\n              label={t`Client key`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded private key used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_key')}\n              validated={this.toError(!('client_key' in errorMessages))}\n              helperTextInvalid={errorMessages['client_key']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('client_key', writeOnlyFields)}\n                onClear={() => this.updateIsSet('client_key', false)}\n              >\n                <FileUpload\n                  data-cy='client_key'\n                  validated={this.toError(!('client_key' in errorMessages))}\n                  isRequired={requiredFields.includes('client_key')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('client_key')}\n                  value={this.props.remote.client_key || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('client_key')}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_cert'}\n              label={t`Client certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_cert')}\n              validated={this.toError(!('client_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['client_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('client_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('client_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('client_cert')}\n                    value={this.props.remote.client_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('client_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='client_cert'\n                    isDisabled={!this.props.remote.client_cert}\n                    onClick={() =>\n                      downloadString(\n                        this.props.remote.client_cert,\n                        filenames.client_cert.name,\n                      )\n                    }\n                    variant='plain'\n                    aria-label={t`Download client certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'ca_cert'}\n              label={t`CA certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('ca_cert')}\n              validated={this.toError(!('ca_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['ca_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('ca_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('ca_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('ca_cert')}\n                    value={this.props.remote.ca_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('ca_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='ca_cert'\n                    isDisabled={!this.props.remote.ca_cert}\n                    onClick={() =>\n                      downloadString(\n                        this.props.remote.ca_cert,\n                        filenames.ca_cert.name,\n                      )\n                    }\n                    variant='plain'\n                    aria-label={t`Download CA certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'download_concurrency'}\n              label={t`Download concurrency`}\n              labelIcon={\n                <HelperText\n                  content={t`Total number of simultaneous connections.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.download_concurrency) ||\n                remote.download_concurrency > 0\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Number must be greater than 0`}\n            >\n              <TextInput\n                id='download_concurrency'\n                type='number'\n                value={remote.download_concurrency || ''}\n                validated={\n                  !this.isNumericSet(remote.download_concurrency) ||\n                  remote.download_concurrency > 0\n                    ? 'default'\n                    : 'error'\n                }\n                onChange={(value) =>\n                  this.updateRemote(value, 'download_concurrency')\n                }\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'rate_limit'}\n              label={t`Rate Limit`}\n              labelIcon={\n                <HelperText\n                  content={t`Limits total download rate in requests per second.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.rate_limit) ||\n                Number.isInteger(remote.rate_limit)\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Must be an integer.`}\n            >\n              <TextInput\n                id='rate_limit'\n                type='number'\n                value={remote.rate_limit || ''}\n                onChange={(value) => this.updateRemote(value, 'rate_limit')}\n              />\n            </FormGroup>\n          </div>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n        {extra}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields) {\n    const { remote, remoteType } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n\n    if (remoteType === 'ansible-remote') {\n      // only required in remotes, not registries\n      if (remote.download_concurrency < 1) {\n        return false;\n      }\n    }\n\n    if (validateURLHelper(null, remote.url).validated == 'error') {\n      return false;\n    }\n\n    return true;\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const { remote, remoteType } = this.props;\n    const hiddenFieldsName =\n      remoteType === 'ansible-remote' ? 'hidden_fields' : 'write_only_fields';\n\n    const newFields: WriteOnlyFieldType[] = remote[hiddenFieldsName].map(\n      (field) =>\n        field.name === fieldName ? { ...field, is_set: value } : field,\n    );\n\n    this.props.updateRemote({\n      ...remote,\n      [fieldName]: null,\n      [hiddenFieldsName]: newFields,\n    });\n  }\n\n  private updateRemote(value, field) {\n    const { remote } = this.props;\n\n    const numericFields = ['download_concurrency', 'rate_limit'];\n    if (numericFields.includes(field)) {\n      value = Number.isInteger(value)\n        ? value\n        : Number.isNaN(parseInt(value, 10))\n        ? null\n        : parseInt(value, 10);\n    }\n\n    this.props.updateRemote({ ...remote, [field]: value });\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private isNumericSet(value) {\n    return value != null && value !== '';\n  }\n}\n","import {\n  Form,\n  FormGroup,\n  TextInput,\n  TextInputTypes,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  errorMessages: ErrorMessagesType;\n  formFields: {\n    formGroupLabelIcon?: React.ReactElement;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: string;\n  }[];\n  formPrefix?: React.ReactNode;\n  formSuffix?: React.ReactNode;\n  isReadonly: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: Record<string, any>;\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map((field) => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && field.formGroupLabelIcon}\n          validated={isReadonly ? 'default' : validated}\n          data-cy={`DataForm-field-${field.id}`}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={(field.type as TextInputTypes) || 'text'}\n              validated={validated}\n              value={model[field.id]}\n              {...(field.type === 'password' ? { autoComplete: 'off' } : {})}\n            />\n          )}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { ActionType } from 'src/actions';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  FilterOption,\n  LoadingPageSpinner,\n  LocalizedSortHeaders,\n  Pagination,\n  Query,\n  RenderTableRow,\n  SortTable,\n} from 'src/components';\nimport { filterIsSet, handleHttpError } from 'src/utilities';\n\ninterface IProps<T> {\n  actionContext: {\n    addAlert;\n    hasObjectPermission?;\n    hasPermission;\n    query;\n    setState;\n    state;\n  };\n  defaultPageSize: number;\n  defaultSort?: string;\n  errorTitle: string;\n  filterConfig?: FilterOption[];\n  headerActions?: ActionType[];\n  listItemActions?: ActionType[];\n  noDataButton?: (item, actionContext) => React.ReactNode;\n  noDataDescription: string;\n  noDataTitle: string;\n  query: Query<T>;\n  renderTableRow: RenderTableRow<T>;\n  sortHeaders: LocalizedSortHeaders;\n  title: string;\n}\n\nexport function DetailList<T>({\n  actionContext,\n  defaultPageSize,\n  defaultSort,\n  errorTitle,\n  filterConfig,\n  headerActions,\n  listItemActions,\n  noDataButton,\n  noDataDescription,\n  noDataTitle,\n  query,\n  renderTableRow,\n  sortHeaders,\n  title,\n}: IProps<T>) {\n  const { addAlert } = actionContext;\n  const [items, setItems] = useState<T[]>([]);\n  const [params, setParams] = useState({\n    page: 1,\n    page_size: defaultPageSize,\n    sort: defaultSort,\n  });\n  const [inputText, setInputText] = useState('');\n  const [itemCount, setItemCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    query({ params })\n      .then(({ data: { count, results } }) => {\n        setItems(results);\n        setItemCount(count);\n      })\n      .catch(handleHttpError(errorTitle, () => setItems([]), addAlert))\n      .then(() => setLoading(false));\n  }, [params]);\n\n  const renderModals = (actionContext) => (\n    <>\n      {headerActions?.length\n        ? headerActions.map((action) => action?.modal?.(actionContext))\n        : null}\n      {listItemActions?.length\n        ? listItemActions.map((action) => action?.modal?.(actionContext))\n        : null}\n    </>\n  );\n\n  const knownFilters = (filterConfig || []).map(({ id }) => id);\n  const noData = items.length === 0 && !filterIsSet(params, knownFilters);\n\n  const niceNames = Object.fromEntries(\n    (filterConfig || []).map(({ id, title }) => [id, title]),\n  );\n\n  return (\n    <>\n      {renderModals?.(actionContext)}\n      {noData && !loading ? (\n        <EmptyStateNoData\n          button={<>{noDataButton?.(null, actionContext)}</>}\n          description={noDataDescription}\n          title={noDataTitle}\n        />\n      ) : loading ? (\n        <LoadingPageSpinner />\n      ) : (\n        <>\n          <div className='hub-list-toolbar' data-cy={`DetailList`}>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarGroup>\n                  <ToolbarItem>\n                    <CompoundFilter\n                      inputText={inputText}\n                      onChange={setInputText}\n                      updateParams={setParams}\n                      params={params}\n                      filterConfig={filterConfig || []}\n                    />\n                  </ToolbarItem>\n                  {headerActions?.length &&\n                    headerActions.map((action) => (\n                      <ToolbarItem key={action.title}>\n                        {action.button(null, actionContext)}\n                      </ToolbarItem>\n                    ))}\n                </ToolbarGroup>\n              </ToolbarContent>\n            </Toolbar>\n\n            <Pagination\n              params={params}\n              updateParams={setParams}\n              count={itemCount}\n              isTop\n            />\n          </div>\n          <div>\n            <AppliedFilters\n              updateParams={(p) => {\n                setParams(p);\n                setInputText('');\n              }}\n              params={params}\n              ignoredParams={['page_size', 'page', 'sort', 'ordering']}\n              niceNames={niceNames}\n            />\n          </div>\n          {loading ? (\n            <LoadingPageSpinner />\n          ) : !items.length ? (\n            <EmptyStateFilter />\n          ) : (\n            <table\n              aria-label={title}\n              className='hub-c-table-content pf-c-table'\n            >\n              <SortTable\n                options={{ headers: sortHeaders }}\n                params={params}\n                updateParams={setParams}\n              />\n              <tbody>\n                {items.map((item, i) =>\n                  renderTableRow(item, i, actionContext, listItemActions),\n                )}\n              </tbody>\n            </table>\n          )}\n          <Pagination\n            params={params}\n            updateParams={setParams}\n            count={itemCount}\n          />\n        </>\n      )}\n    </>\n  );\n}\n","import React from 'react';\n\ninterface IProps {\n  item?: object;\n  fields?: {\n    label: string;\n    value: string | number | boolean | React.ReactNode;\n  }[];\n}\n\nexport const Details = ({ item, fields = [] }: IProps) => (\n  <>\n    {fields.map(({ label, value }) => (\n      <div key={label} style={{ overflowWrap: 'break-word' }}>\n        <div>\n          <b>{label}</b>\n        </div>\n        <div>{value}</div>\n      </div>\n    ))}\n    {item && (\n      <>\n        <hr />\n        <pre style={{ whiteSpace: 'pre-wrap' }}>\n          {JSON.stringify(item, null, 2)}\n        </pre>\n      </>\n    )}\n  </>\n);\n","import { Trans, t } from '@lingui/macro';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { Tooltip } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { language } from 'src/l10n';\n\ninterface IProps {\n  item?: { download_count?: number };\n}\n\nexport const DownloadCount = ({ item }: IProps) => {\n  if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n    return null;\n  }\n  if (!item?.download_count) {\n    return null;\n  }\n\n  const downloadCount = new Intl.NumberFormat(language).format(\n    item.download_count,\n  );\n\n  return (\n    <Tooltip\n      content={t`Download count is the sum of all versions' download counts`}\n    >\n      <DownloadIcon /> <Trans>{downloadCount} Downloads</Trans>\n    </Tooltip>\n  );\n};\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\n\ninterface IProps {\n  button?: boolean;\n  next?: string;\n}\n\nexport const LoginLink = ({ button, next }: IProps) => {\n  const { featureFlags } = useContext();\n  const className = button ? 'pf-c-button pf-m-primary' : '';\n\n  // NOTE: also update AuthHandler#render (src/loaders/standalone/routes.tsx) when changing this\n  if (featureFlags?.external_authentication && UI_EXTERNAL_LOGIN_URI) {\n    return <a className={className} href={UI_EXTERNAL_LOGIN_URI}>{t`Login`}</a>;\n  } else {\n    return (\n      <Link\n        className={className}\n        to={formatPath(Paths.login, {}, { next })}\n      >{t`Login`}</Link>\n    );\n  }\n};\n","import React from 'react';\n\ninterface IProps extends React.HTMLAttributes<HTMLDivElement> {\n  text: string;\n}\n\nconst HTMLComment = ({ text, ...props }: IProps) => (\n  <div {...props} dangerouslySetInnerHTML={{ __html: `<!-- ${text} -->` }} />\n);\n\nexport const UIVersion = () => (\n  <HTMLComment\n    className='hub-ui-version'\n    text={`ansible-hub-ui ${UI_COMMIT_HASH}`}\n  />\n);\n","import {\n  ArrowsAltVIcon,\n  LongArrowAltDownIcon,\n  LongArrowAltUpIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n      className?: string;\n    }[];\n  };\n  params: {\n    sort?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const SortTable = ({ options, params, updateParams }: IProps) => {\n  function sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    updateParams({\n      ...ParamHelper.setParam(params, 'sort', (isMinus ? '-' : '') + id),\n      page: 1,\n    });\n  }\n\n  function getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n\n    let Icon;\n    let isMinus = false;\n\n    const activeIcon = !!params.sort && id == params.sort.replace('-', '');\n    if (activeIcon) {\n      isMinus = params.sort.includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        data-cy={'sort_' + id}\n        size='sm'\n        onClick={() => sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  const getHeaderItem = (item) => (\n    <th key={item.id} className={item?.className}>\n      {item.title} {getIcon(item.type, item.id)}\n    </th>\n  );\n\n  return (\n    <thead>\n      <tr className='hub-SortTable-headers' data-cy='SortTable-headers'>\n        {options.headers.map((element) => getHeaderItem(element))}\n      </tr>\n    </thead>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationIcon,\n  OutlinedClockIcon,\n  SyncAltIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n  className?: string;\n}\n\ninterface LabelPropType {\n  color: LabelProps['color'];\n  icon: React.ReactElement;\n  text: string;\n}\n\nconst typeToVariantMap: Record<string, LabelProps['variant']> = {\n  primary: 'outline',\n  secondary: 'filled',\n};\n\nconst statusToProps = (status): LabelPropType => {\n  switch (status) {\n    case PulpStatus.waiting:\n      return {\n        color: 'blue',\n        text: t`Pending`,\n        icon: <OutlinedClockIcon />,\n      };\n\n    // TODO: what does skipped mean in pulp\n    case PulpStatus.skipped:\n    case PulpStatus.canceled:\n      return {\n        color: 'orange',\n        text: t`Canceled`,\n        icon: <ExclamationIcon />,\n      };\n\n    case PulpStatus.running:\n      return { color: 'blue', text: t`Running`, icon: <SyncAltIcon /> };\n\n    case PulpStatus.completed:\n      return {\n        color: 'green',\n        text: t`Completed`,\n        icon: <CheckCircleIcon />,\n      };\n\n    case PulpStatus.failed:\n      return {\n        color: 'red',\n        text: t`Failed`,\n        icon: <ExclamationCircleIcon />,\n      };\n  }\n  return null;\n};\n\nexport const StatusIndicator = ({\n  status,\n  type = 'primary',\n  className,\n}: IProps) => {\n  const labelProps = statusToProps(status);\n  if (!labelProps) {\n    return <>---</>;\n  }\n\n  return (\n    <Label\n      variant={typeToVariantMap[type]}\n      color={labelProps.color}\n      icon={labelProps.icon}\n      className={className}\n    >\n      {labelProps.text}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport React from 'react';\n\nexport const DeprecatedTag = () => (\n  <div\n    style={{\n      display: 'inline-block',\n      margin: '4px',\n      backgroundColor: '#C9190B',\n      color: 'white',\n      fontSize: '14px',\n      paddingLeft: '5px',\n      paddingRight: '5px',\n      paddingBottom: '2px',\n      paddingTop: '2px',\n      borderRadius: '3px',\n    }}\n  >\n    {t`DEPRECATED`}\n  </div>\n);\n","import { Label } from '@patternfly/react-core';\nimport React from 'react';\nimport './tag.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport const Tag = ({ children }: IProps) => (\n  <Label className='hub-c-label-tag' readOnly data-cy='tag'>\n    {children}\n  </Label>\n);\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport React from 'react';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n  toggleIcon?: React.ReactElement;\n  style?: React.CSSProperties;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map((group) => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n        toggleIcon={this.props.toggleIcon}\n        style={this.props.style}\n        chipGroupProps={chipGroupProps()}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={t`Not found`}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = (evt) => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  ExpandableSection,\n  Modal,\n  Spinner,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport React, { useEffect, useState } from 'react';\nimport { WisdomDenyIndexAPI } from 'src/api';\nimport { AlertList, AlertType, closeAlert } from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  scope: 'namespace' | 'legacy_namespace';\n  reference: string;\n  closeAction: () => void;\n  addAlert: (alert) => void;\n}\n\nexport const WisdomModal = (props: IProps) => {\n  const [isInDenyIndex, setIsInDenyIndex] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [alerts, setAlerts] = useState([]);\n\n  let titleWillBeUsed = null;\n  let titleWillNotBeUsed = null;\n\n  let areYouSureToOptIn = null;\n  let areYouSureToOptOut = null;\n\n  const name = props.reference;\n\n  if (props.scope == 'namespace') {\n    titleWillBeUsed = (\n      <Trans>\n        Namespace <b>{name}</b> is opted in to Ansible Lightspeed.\n      </Trans>\n    );\n    titleWillNotBeUsed = (\n      <Trans>\n        Namespace <b>{name}</b> is opted out of Ansible Lightspeed.\n      </Trans>\n    );\n    areYouSureToOptIn = (\n      <Trans>\n        The following namespace will be opted in to Ansible Lightspeed:\n      </Trans>\n    );\n    areYouSureToOptOut = (\n      <Trans>\n        Are you sure you want to opt the following namespace out of Ansible\n        Lightspeed?\n      </Trans>\n    );\n  }\n\n  if (props.scope == 'legacy_namespace') {\n    titleWillBeUsed = (\n      <Trans>\n        Legacy namespace <b>{name}</b> is opted in to Ansible Lightspeed.\n      </Trans>\n    );\n    titleWillNotBeUsed = (\n      <Trans>\n        Legacy namespace <b>{name}</b> is opted out of Ansible Lightspeed.\n      </Trans>\n    );\n    areYouSureToOptIn = (\n      <Trans>\n        The following legacy namespace will be opted in to Ansible Lightspeed:\n      </Trans>\n    );\n    areYouSureToOptOut = (\n      <Trans>\n        Are you sure you want to opt the following legacy namespace out of\n        Ansible Lightspeed?\n      </Trans>\n    );\n  }\n\n  useEffect(() => {\n    setIsInDenyIndex(null);\n    setLoading(true);\n\n    WisdomDenyIndexAPI.isInDenyIndex(props.scope, props.reference)\n      .then((result) => {\n        setIsInDenyIndex(result);\n        setLoading(false);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to load Ansible Lightspeed information.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }, [props.scope, props.reference]);\n\n  const addAlert = (alert: AlertType) => {\n    setAlerts([...alerts, alert]);\n  };\n\n  const finishAction = (isInDenyIndex) => {\n    props.closeAction();\n\n    if (props.addAlert) {\n      props.addAlert({\n        title: isInDenyIndex ? titleWillNotBeUsed : titleWillBeUsed,\n        variant: 'success',\n      });\n    }\n  };\n\n  const removeFromDenyIndex = () => {\n    setLoading(true);\n    WisdomDenyIndexAPI.removeFromDenyIndex(props.scope, props.reference)\n      .then(() => {\n        finishAction(false);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to opt in to Ansible Lightspeed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n        setLoading(false);\n      });\n  };\n\n  const addToDenyIndex = () => {\n    setLoading(true);\n    WisdomDenyIndexAPI.addToDenyIndex(props.scope, props.reference)\n      .then(() => {\n        finishAction(true);\n      })\n      .catch(({ response: { status, statusText } }) => {\n        addAlert({\n          title: t`Failed to opt out of Ansible Lightspeed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n        setLoading(false);\n      });\n  };\n\n  const actions = [];\n\n  if (!loading) {\n    if (isInDenyIndex) {\n      actions.push(\n        <Button\n          key='remove'\n          onClick={removeFromDenyIndex}\n          variant={ButtonVariant.primary}\n        >\n          {t`Opt in to Ansible Lightspeed`}\n        </Button>,\n      );\n    } else {\n      actions.push(\n        <Button\n          key='add'\n          onClick={addToDenyIndex}\n          variant={ButtonVariant.primary}\n        >\n          {t`Opt out of Ansible Lightspeed`}\n        </Button>,\n      );\n    }\n\n    actions.push(\n      <Button key='close' onClick={() => props.closeAction()} variant='link'>\n        {t`Cancel`}\n      </Button>,\n    );\n  }\n\n  const expandableTitle = t`Additional details`;\n  return (\n    <Modal\n      actions={actions}\n      isOpen={true}\n      onClose={props.closeAction}\n      title={\n        loading\n          ? t`Ansible Lightspeed settings`\n          : isInDenyIndex\n          ? t`Opt in to Ansible Lightspeed`\n          : t`Opt out of Ansible Lightspeed`\n      }\n      variant='small'\n      titleIconVariant={isInDenyIndex ? null : 'warning'}\n    >\n      <AlertList\n        alerts={alerts}\n        closeAlert={(i) => closeAlert(i, { alerts, setAlerts })}\n      />\n      {loading ? (\n        <Spinner />\n      ) : (\n        <div>\n          <div>\n            <Trans>\n              <p>\n                Red Hat is working on exciting new Ansible content development\n                capabilities within the context of{' '}\n                <a\n                  href='https://www.redhat.com/en/engage/project-wisdom'\n                  target='_blank'\n                  rel='noreferrer'\n                >\n                  Ansible Lightspeed\n                </a>{' '}\n                <ExternalLinkAltIcon /> to help other automators build Ansible\n                content.\n              </p>\n            </Trans>\n            <br />\n            <ExpandableSection\n              toggleTextExpanded={expandableTitle}\n              toggleTextCollapsed={expandableTitle}\n            >\n              <div>\n                <Trans>\n                  <p>\n                    Your roles and collections may be used as training data for\n                    a machine learning model that provides Ansible automation\n                    content recommendations.\n                  </p>\n                  <p>\n                    If you have concerns, please contact the Ansible team at{' '}\n                    <a href='mailto:ansible-content-ai@redhat.com'>\n                      ansible-content-ai@redhat.com\n                    </a>\n                    .\n                  </p>\n                </Trans>\n              </div>\n            </ExpandableSection>\n          </div>\n          <br />\n          <div>\n            {!loading && isInDenyIndex ? areYouSureToOptIn : areYouSureToOptOut}\n          </div>\n          <br />\n          {props.reference}\n        </div>\n      )}\n    </Modal>\n  );\n};\n","import { msg } from '@lingui/macro';\n\nexport class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static readonly CARD_DEFAULT_PAGE_SIZE = 10;\n  static readonly CARD_DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n  static readonly INSIGHTS_DEPLOYMENT_MODE = 'insights';\n  static readonly STANDALONE_DEPLOYMENT_MODE = 'standalone';\n\n  static CERTIFIED_REPO =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? 'published'\n      : 'rh-certified';\n\n  static NOTCERTIFIED = 'rejected';\n  static NEEDSREVIEW = 'staging';\n  static APPROVED = 'approved';\n\n  static USER_GROUP_MGMT_PERMISSIONS = [\n    'galaxy.delete_user',\n    'galaxy.add_user',\n    'galaxy.change_user',\n    'galaxy.delete_group',\n    'galaxy.add_group',\n  ];\n\n  static PROTECTED_REPOSITORIES = [\n    'rh-certified',\n    'validated',\n    'community',\n    'published',\n    'staging',\n    'rejected',\n  ];\n\n  static COLLECTION_FILTER_TAGS = [\n    'application',\n    'cloud',\n    'database',\n    'eda',\n    'infrastructure',\n    'linux',\n    'monitoring',\n    'networking',\n    'security',\n    'storage',\n    'tools',\n    'windows',\n  ];\n\n  static TASK_NAMES = {\n    'galaxy_ng.app.tasks.curate_all_synclist_repository': msg`Curate all synclist repository`,\n    'galaxy_ng.app.tasks.curate_synclist_repository': msg`Curate synclist repository`,\n    'galaxy_ng.app.tasks.import_and_auto_approve': msg`Import and auto approve`,\n    'galaxy_ng.app.tasks.import_and_move_to_staging': msg`Import and move to staging`,\n    'galaxy_ng.app.tasks.promotion._remove_content_from_repository': msg`Remove content from repository`,\n    'galaxy_ng.app.tasks.publishing.import_and_auto_approve': msg`Import and auto approve`,\n    'galaxy_ng.app.tasks.synclist.curate_synclist_repository_batch': msg`Curate synclist repository batch`,\n    'pulp_ansible.app.tasks.collections.collection_sync': msg`Pulp ansible: collection sync`,\n    'pulp_ansible.app.tasks.collections.import_collection': msg`Pulp ansible: Import collection`,\n    'pulp_ansible.app.tasks.collections.sync': msg`Pulp Ansible: Collections sync`,\n    'pulp_ansible.app.tasks.collections.update_collection_remote': msg`Pulp ansible: Update collection remote`,\n    'pulp_ansible.app.tasks.copy.copy_content': msg`Pulp ansible: Copy content`,\n    'pulp_ansible.app.tasks.roles.synchronize': msg`Pulp Ansible: Roles synchronize`,\n    'pulp_container.app.tasks.build_image_from_containerfile': msg`Pulp container: Build image from containerfile`,\n    'pulp_container.app.tasks.general_multi_delete': msg`Pulp container: General multi delete`,\n    'pulp_container.app.tasks.recursive_add_content': msg`Pulp container: Recursive add content`,\n    'pulp_container.app.tasks.recursive_remove_content': msg`Pulp container: Recursive remove content`,\n    'pulp_container.app.tasks.synchronize': msg`Pulp container: Tasks synchronize`,\n    'pulp_container.app.tasks.tag_image': msg`Pulp container: Tag image`,\n    'pulp_container.app.tasks.untag_image': msg`Pulp container: Untage image`,\n    'pulpcore.app.tasks.export.pulp_export': msg`Pulpcore: Pulp export`,\n    'pulpcore.app.tasks.pulp_import': msg`Pulpcore: Pulp import`,\n    'pulpcore.app.tasks.repository.add_and_remove': msg`Pulpcore: Add and remove`,\n    'pulpcore.app.tasks.repository.delete_version': msg`Pulpcore: Delete version`,\n    'pulpcore.app.tasks.repository.repair_version': msg`Pulpcore: Repair version`,\n    'pulpcore.app.tasks.upload.commit': msg`Pulpcore: Upload commit`,\n    'pulpcore.plugin.tasking.add_and_remove': msg`Pulpcore: Add or remove`,\n    'pulpcore.tasking.tasks.base.general_create': msg`Pulpcore: General create`,\n    'pulpcore.tasking.tasks.base.general_delete': msg`Pulpcore: General delete`,\n    'pulpcore.tasking.tasks.base.general_update': msg`Pulpcore: General update`,\n    'pulpcore.tasking.tasks.import_repository_version': msg`Pulpcore: Import repository version`,\n    'pulpcore.tasking.tasks.orphan_cleanup': msg`Pulpcore: Orphan cleanup`,\n    'pulpcore.tasking.tasks.repair_all_artifacts': msg`Pulpcore: Repair all artifacts`,\n  };\n\n  static LOCKED_ROLES_WITH_DESCRIPTION = {\n    // galaxy roles\n    'galaxy.ansible_repository_owner': msg`Manage ansible repositories.`,\n    'galaxy.collection_admin': msg`Create, delete and change collection namespaces. Upload and delete collections. Sync collections from remotes. Approve and reject collections.`,\n    'galaxy.collection_curator': msg`Approve, reject and sync collections from remotes.`,\n    'galaxy.collection_namespace_owner': msg`Change and upload collections to namespaces.`,\n    'galaxy.collection_publisher': msg`Upload and modify collections.`,\n    'galaxy.collection_remote_owner': msg`Manage collection remotes.`,\n    'galaxy.content_admin': msg`Manage all content types.`,\n    'galaxy.execution_environment_admin': msg`Push, delete, and change execution environments. Create, delete and change remote registries.`,\n    'galaxy.execution_environment_collaborator': msg`Change existing execution environments.`,\n    'galaxy.execution_environment_namespace_owner': msg`Create and update execution environments under existing container namespaces.`,\n    'galaxy.execution_environment_publisher': msg`Push, and change execution environments.`,\n    'galaxy.group_admin': msg`View, add, remove and change groups.`,\n    'galaxy.synclist_owner': msg`View, add, remove and change synclists.`,\n    'galaxy.task_admin': msg`View, and cancel any task.`,\n    'galaxy.user_admin': msg`View, add, remove and change users.`,\n\n    // core roles\n    'core.task_owner': msg`Allow all actions on a task.`,\n    'core.taskschedule_owner': msg`Allow all actions on a taskschedule.`,\n  };\n}\n","import { t } from '@lingui/macro';\nimport { Bullseye } from '@patternfly/react-core';\nimport React from 'react';\nimport NotFoundImage from 'src/../static/images/not_found.svg';\nimport { BaseHeader, Main } from 'src/components';\nimport { withRouter } from 'src/utilities';\nimport './not-found.scss';\n\nexport const NotFound = (_props) => (\n  <>\n    <BaseHeader title={t`404 - Page not found`} />\n    <Main>\n      <section className='body'>\n        <Bullseye className='hub-c-bullseye'>\n          <div className='hub-c-bullseye__center'>\n            <img src={NotFoundImage} alt={t`Not found image`} />\n            <div>{t`We couldn't find the page you're looking for!`}</div>\n            <div className='pf-c-content'>\n              <span className='hub-c-bullseye__404'>404</span>\n            </div>\n          </div>\n        </Bullseye>\n      </section>\n    </Main>\n  </>\n);\n\nexport default withRouter(NotFound);\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { LoadingPageWithHeader } from 'src/components';\nimport { Paths } from 'src/paths';\n\nconst AnsibleRemoteDetail = lazy(\n  () => import('src/containers/ansible-remote/detail'),\n);\nconst AnsibleRemoteEdit = lazy(\n  () => import('src/containers/ansible-remote/edit'),\n);\nconst AnsibleRemoteList = lazy(\n  () => import('src/containers/ansible-remote/list'),\n);\nconst AnsibleRepositoryDetail = lazy(\n  () => import('src/containers/ansible-repository/detail'),\n);\nconst AnsibleRepositoryEdit = lazy(\n  () => import('src/containers/ansible-repository/edit'),\n);\nconst AnsibleRepositoryList = lazy(\n  () => import('src/containers/ansible-repository/list'),\n);\n\nconst CertificationDashboard = lazy(\n  () =>\n    import('src/containers/certification-dashboard/certification-dashboard'),\n);\n\nconst CollectionContent = lazy(\n  () => import('src/containers/collection-detail/collection-content'),\n);\n\nconst CollectionDependencies = lazy(\n  () => import('src/containers/collection-detail/collection-dependencies'),\n);\n\nconst CollectionDetail = lazy(\n  () => import('src/containers/collection-detail/collection-detail'),\n);\n\nconst CollectionDocs = lazy(\n  () => import('src/containers/collection-detail/collection-docs'),\n);\n\nconst CollectionImportLog = lazy(\n  () => import('src/containers/collection-detail/collection-import-log'),\n);\n\nconst CollectionDistributions = lazy(\n  () => import('src/containers/collection-detail/collection-distributions'),\n);\n\nconst EditNamespace = lazy(\n  () => import('src/containers/edit-namespace/edit-namespace'),\n);\n\nconst MyImports = lazy(() => import('src/containers/my-imports/my-imports'));\n\nconst MyNamespaces = lazy(\n  () => import('src/containers/namespace-list/my-namespaces'),\n);\n\nconst NamespaceDetail = lazy(\n  () => import('src/containers/namespace-detail/namespace-detail'),\n);\n\nconst NotFound = lazy(() => import('src/containers/not-found/not-found'));\n\nconst Partners = lazy(() => import('src/containers/namespace-list/partners'));\n\nconst Search = lazy(() => import('src/containers/search/search'));\n\nconst SignatureKeysList = lazy(\n  () => import('src/containers/signature-keys/list'),\n);\n\nconst TaskDetail = lazy(\n  () => import('src/containers/task-management/task_detail'),\n);\n\nconst TaskListView = lazy(\n  () => import('src/containers/task-management/task-list-view'),\n);\n\nconst TokenInsights = lazy(() => import('src/containers/token/token-insights'));\n\nconst routes = [\n  { path: Paths.ansibleRemoteDetail, component: AnsibleRemoteDetail },\n  { path: Paths.ansibleRemoteEdit, component: AnsibleRemoteEdit },\n  { path: Paths.ansibleRemotes, component: AnsibleRemoteList },\n  { path: Paths.ansibleRepositories, component: AnsibleRepositoryList },\n  { path: Paths.ansibleRepositoryDetail, component: AnsibleRepositoryDetail },\n  { path: Paths.ansibleRepositoryEdit, component: AnsibleRepositoryEdit },\n  {\n    path: Paths.approvalDashboard,\n    component: CertificationDashboard,\n  },\n  { path: Paths.notFound, component: NotFound },\n  { path: Paths.token, component: TokenInsights },\n  { path: Paths.partners, component: Partners },\n  { path: Paths.editNamespace, component: EditNamespace },\n  { path: Paths.myCollections, component: NamespaceDetail },\n  { path: Paths.myCollectionsByRepo, component: NamespaceDetail },\n  { path: Paths.myNamespaces, component: MyNamespaces },\n  { path: Paths.signatureKeys, component: SignatureKeysList },\n  { path: Paths.taskList, component: TaskListView },\n  { path: Paths.taskDetail, component: TaskDetail },\n  {\n    path: Paths.collectionDocsPageByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionDocsIndexByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentDocsByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentListByRepo,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLogByRepo,\n    component: CollectionImportLog,\n  },\n  {\n    path: Paths.collectionDependenciesByRepo,\n    component: CollectionDependencies,\n  },\n  {\n    component: CollectionDistributions,\n    path: Paths.collectionDistributionsByRepo,\n  },\n  { path: Paths.collectionByRepo, component: CollectionDetail },\n  { path: Paths.namespaceDetail, component: NamespaceDetail },\n  { path: Paths.collections, component: Search },\n  { path: Paths.collectionDocsPage, component: CollectionDocs },\n  { path: Paths.collectionDocsIndex, component: CollectionDocs },\n  {\n    path: Paths.collectionContentDocs,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentList,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLog,\n    component: CollectionImportLog,\n  },\n  { path: Paths.myImports, component: MyImports },\n  { path: Paths.namespace, component: NamespaceDetail },\n  { path: Paths.collections, component: Search },\n  { path: '/', component: Search },\n];\n\n/**\n * changes routes depending on the path\n * https://reactrouter.com/en/main/route/route\n */\nexport const InsightsRoutes = () => {\n  return (\n    <Suspense fallback={<LoadingPageWithHeader />}>\n      <Routes>\n        {routes.map(({ component: Component, path }, index) => (\n          <Route key={index} path={path} element={<Component path={path} />} />\n        ))}\n        <Route path='*' element={<NotFound path={null} />} />\n      </Routes>\n    </Suspense>\n  );\n};\n","import '../app.scss';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport React, { useEffect, useState } from 'react';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType, UIVersion } from 'src/components';\nimport { hasPermission } from 'src/utilities';\nimport { AppContext } from '../app-context';\nimport { loadContext } from '../load-context';\nimport { InsightsRoutes } from './routes';\n\nconst App = (_props) => {\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [featureFlags, setFeatureFlags] = useState<FeatureFlagsType>(null);\n  const [settings, setSettings] = useState<SettingsType>(null);\n  const [user, setUser] = useState<UserType>(null);\n\n  const { identifyApp, updateDocumentTitle } = useChrome();\n\n  // componentDidMount\n  useEffect(() => {\n    identifyApp('automation-hub');\n    updateDocumentTitle(APPLICATION_NAME);\n\n    loadContext().then(({ alerts, featureFlags, settings, user }) => {\n      setAlerts(alerts);\n      setFeatureFlags(featureFlags);\n      setSettings(settings);\n      setUser(user);\n    });\n  }, []);\n\n  // Wait for the user data to load before any of the child components are rendered. This will prevent API calls from happening before the app can authenticate\n  if (!user) {\n    return null;\n  }\n\n  const queueAlert = (alert) => setAlerts((alerts) => [...alerts, alert]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        alerts,\n        featureFlags,\n        queueAlert,\n        setAlerts,\n        setUser,\n        settings,\n        user,\n        hasPermission: (name) =>\n          hasPermission(\n            {\n              user,\n              settings,\n              featureFlags,\n            },\n            name,\n          ),\n      }}\n    >\n      <InsightsRoutes />\n      <UIVersion />\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import {\n  ActiveUserAPI,\n  FeatureFlagsAPI,\n  FeatureFlagsType,\n  SettingsAPI,\n  SettingsType,\n  UserType,\n} from 'src/api';\nimport { AlertType } from 'src/components';\n\ninterface ContextFragment {\n  alerts: AlertType[];\n  featureFlags: FeatureFlagsType;\n  settings?: SettingsType;\n  user?: UserType;\n}\n\nexport function loadContext(): Promise<ContextFragment> {\n  const getFeatureFlags = FeatureFlagsAPI.get().then(\n    ({ data: featureFlags }) => ({\n      alerts: (featureFlags._messages || []).map((msg) => ({\n        variant: 'warning',\n        title: msg.split(':')[1],\n      })),\n      featureFlags,\n    }),\n  );\n\n  return Promise.all([\n    ActiveUserAPI.getUser(),\n    SettingsAPI.get(),\n    getFeatureFlags,\n  ])\n    .then(([user, { data: settings }, { alerts, featureFlags }]) => ({\n      alerts,\n      featureFlags,\n      settings,\n      user,\n    }))\n    .catch(() => {\n      // we need this even if ActiveUserAPI fails, otherwise isExternalAuth will always be false, breaking keycloak redirect\n      return getFeatureFlags.then(({ alerts, featureFlags }) => ({\n        alerts,\n        featureFlags,\n      }));\n    });\n}\n","import { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\nimport React from 'react';\nimport 'src/l10n';\nimport App from './loaders/insights/loader';\n\n// Entrypoint for compiling the app to run in insights mode.\n\nconst AnsibleHub = () => (\n  <React.StrictMode>\n    <I18nProvider i18n={i18n}>\n      <App />\n    </I18nProvider>\n  </React.StrictMode>\n);\n\n// ignore unused exports default\nexport default AnsibleHub;\n","import { i18n } from '@lingui/core';\nimport * as moment from 'moment';\n\n// remember to update lingui.config.js as well\nconst availableLanguages = ['en', 'es', 'fr', 'ko', 'nl', 'ja', 'zh'];\n\n// map missing moment locales (node_modules/moment/src/locale/<locale>.js must exist, except for english)\nconst momentLocales = {\n  zh: 'zh-cn',\n};\n\nasync function activate(locale: string, pseudolocalization = false) {\n  const { messages } = await import(`src/../locale/${locale}.js`);\n\n  if (pseudolocalization) {\n    Object.keys(messages).forEach((key) => {\n      if (Array.isArray(messages[key])) {\n        // t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>\", \"Foo \", ['param'], \"<<\"]\n        messages[key] = ['»', ...messages[key], '«'];\n      } else {\n        // simple string\n        messages[key] = '»' + messages[key] + '«';\n      }\n    });\n  }\n\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n\n  moment.locale(momentLocales[locale] || locale);\n}\n\n// Accept-Language\nconst userLanguage = navigator.languages\n  .map((lang) => lang.replace(/[-_].*/, ''))\n  .filter((lang) => availableLanguages.includes(lang))[0];\n\nconst searchParams = Object.fromEntries(\n  new URLSearchParams(window.location.search),\n);\n\nif (searchParams.pseudolocalization === 'true') {\n  window.localStorage.test_l10n = 'true';\n}\nif (searchParams.pseudolocalization === 'false') {\n  delete window.localStorage.test_l10n;\n}\n\nif (searchParams.lang) {\n  window.localStorage.override_l10n = searchParams.lang;\n}\nif (searchParams.lang === '') {\n  delete window.localStorage.override_l10n;\n}\n\nconst overrideLanguage =\n  window.localStorage.override_l10n &&\n  availableLanguages.includes(window.localStorage.override_l10n) &&\n  window.localStorage.override_l10n;\nexport const language = overrideLanguage || userLanguage || 'en';\nconst pseudolocalization = window.localStorage.test_l10n === 'true';\n\nif (overrideLanguage) {\n  console.debug(\n    `language autodetection overriden to: ${overrideLanguage}, unset by visiting ${\n      window.location.origin + window.location.pathname + '?lang='\n    }`,\n  );\n}\nif (pseudolocalization) {\n  console.debug(\n    `pseudolocalization enabled, unset by visiting ${\n      window.location.origin +\n      window.location.pathname +\n      '?pseudolocalization=false'\n    }`,\n  );\n}\n\nactivate(language, pseudolocalization);\n","import React from 'react';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType } from 'src/components';\n\nexport interface IAppContextType {\n  user?: UserType;\n  setUser: (user: UserType) => void;\n  selectedRepo?: string;\n  featureFlags: FeatureFlagsType;\n  alerts: AlertType[];\n  setAlerts: (alerts: AlertType[]) => void;\n  queueAlert: (alert: AlertType) => void;\n  settings: SettingsType;\n  hasPermission: (name: string) => boolean;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\nexport const useContext = () => React.useContext(AppContext);\n","import { t } from '@lingui/macro';\nimport { Constants } from 'src/constants';\nimport { ParamHelper, ParamType } from 'src/utilities';\n\nexport function formatPath(path: Paths, data = {}, params?: ParamType) {\n  // insights router has basename=\"/\", \"/beta/\" or \"/preview/\", with hub under a nested \"ansible/automation-hub\" route - our urls are relative to that\n  let url =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? UI_BASE_PATH.replace('/preview/', '/')\n          .replace('/beta/', '/')\n          .replace(/\\/$/, '')\n      : '';\n  url += (path as string) + '/';\n  url = url.replaceAll('//', '/');\n\n  for (const k of Object.keys(data)) {\n    url = url.replace(':' + k, encodeURIComponent(data[k]));\n  }\n\n  if (params) {\n    const path = `${url}?${ParamHelper.getQueryString(params)}`;\n    return path;\n  } else {\n    return url;\n  }\n}\n\n// handle long/short EE routes:\n// (path, container: 'namespaced/name') -> (pathWithNamespace, { namespace: 'namespaced', container: 'name' })\n// (path, container: 'simple') -> (path, { container: 'simple' })\n// see also withContainerParamFix\nexport function formatEEPath(path, data, params?) {\n  const pathsWithNamespace = {\n    [Paths.executionEnvironmentDetail]:\n      Paths.executionEnvironmentDetailWithNamespace,\n    [Paths.executionEnvironmentDetailActivities]:\n      Paths.executionEnvironmentDetailActivitiesWithNamespace,\n    [Paths.executionEnvironmentDetailImages]:\n      Paths.executionEnvironmentDetailImagesWithNamespace,\n    [Paths.executionEnvironmentDetailAccess]:\n      Paths.executionEnvironmentDetailAccessWithNamespace,\n    [Paths.executionEnvironmentManifest]:\n      Paths.executionEnvironmentManifestWithNamespace,\n  };\n\n  if (data.container?.includes('/')) {\n    const [namespace, container] = data.container.split('/');\n    const pathWithNamespace = pathsWithNamespace[path];\n    return formatPath(\n      pathWithNamespace,\n      { ...data, namespace, container },\n      params,\n    );\n  }\n\n  return formatPath(path, data, params);\n}\n\nexport enum Paths {\n  ansibleRemoteDetail = '/ansible/remotes/:name',\n  ansibleRemoteEdit = '/ansible/remotes/:name/edit',\n  ansibleRemotes = '/ansible/remotes',\n  ansibleRepositories = '/ansible/repositories',\n  ansibleRepositoryDetail = '/ansible/repositories/:name',\n  ansibleRepositoryEdit = '/ansible/repositories/:name/edit',\n  dispatch = '/dispatch',\n  executionEnvironmentDetail = '/containers/:container',\n  executionEnvironmentDetailWithNamespace = '/containers/:namespace/:container',\n  executionEnvironmentDetailActivities = '/containers/:container/_content/activity',\n  executionEnvironmentDetailActivitiesWithNamespace = '/containers/:namespace/:container/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container/_content/images',\n  executionEnvironmentDetailImagesWithNamespace = '/containers/:namespace/:container/_content/images',\n  executionEnvironmentDetailAccess = '/containers/:container/_content/access',\n  executionEnvironmentDetailAccessWithNamespace = '/containers/:namespace/:container/_content/access',\n  executionEnvironmentManifest = '/containers/:container/_content/images/:digest',\n  executionEnvironmentManifestWithNamespace = '/containers/:namespace/:container/_content/images/:digest',\n  executionEnvironments = '/containers',\n  executionEnvironmentsRegistries = '/registries',\n  roleEdit = '/role/:role',\n  roleList = '/roles',\n  createRole = '/roles/create',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  taskDetail = '/task/:task',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  landingPage = '/',\n  legacyRole = '/legacy/roles/:username/:name',\n  legacyRoles = '/legacy/roles/',\n  legacyNamespace = '/legacy/namespaces/:namespaceid',\n  legacyNamespaces = '/legacy/namespaces/',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  collectionDependenciesByRepo = '/repo/:repo/:namespace/:collection/dependencies',\n  collectionDistributionsByRepo = '/repo/:repo/:namespace/:collection/distributions',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  namespace = '/:namespace',\n  namespaceDetail = '/namespaces/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  taskList = '/tasks',\n  signatureKeys = '/signature-keys',\n  collections = '/collections',\n}\n\nexport const namespaceBreadcrumb = () =>\n  ({\n    namespaces: { name: t`Namespaces`, url: formatPath(Paths.namespaces) },\n    partners: { name: t`Partners`, url: formatPath(Paths.partners) },\n  })[NAMESPACE_TERM];\n","import { FeatureFlagsType } from 'src/api';\n\nexport const canSignNamespace = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  namespace,\n) => {\n  const { can_create_signatures } = featureFlags;\n  const permissions = namespace?.related_fields?.my_permissions || [];\n\n  return (\n    // (can_create_signatures also implies signatures_enabled and collection_signing)\n    can_create_signatures &&\n    permissions.includes('galaxy.change_namespace') &&\n    permissions.includes('galaxy.upload_to_namespace')\n  );\n};\n\nexport const canSignEE = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  container,\n) => {\n  const { container_signing } = featureFlags;\n  const permissions = container.namespace.my_permissions;\n\n  return (\n    container_signing &&\n    permissions.includes('container.change_containernamespace')\n  );\n};\n","import { t } from '@lingui/macro';\n\nexport const chipGroupProps = () => {\n  const count = '${remaining}'; // pf templating\n  return {\n    collapsedText: t`${count} more`,\n    expandedText: t`Show Less`,\n  };\n};\n","import { CollectionVersionSearch } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    dependency: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts({\n  contents: content,\n  dependencies,\n}: CollectionVersionSearch['collection_version']): Summary {\n  const summary: Summary = {\n    total_count: content.length,\n    contents: {\n      module: 0,\n      role: 0,\n      plugin: 0,\n      dependency: Object.keys(dependencies).length,\n    },\n  };\n\n  for (const c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport class ErrorMessagesType {\n  [key: string]: string;\n}\n\nexport function mapErrorMessages(err): ErrorMessagesType {\n  const messages = {};\n  const { data } = err.response;\n\n  // 500 errors only have err.response.data string\n  if (typeof data === 'string') {\n    messages['__nofield'] = err.response.data;\n    return messages;\n  }\n\n  // errors can come in several flavors depending on if the API is from\n  // pulp or anible.\n  // Galaxy error:\n  // {\n  //   \"errors\": [\n  //     {\n  //       \"status\": \"400\",\n  //       \"code\": \"invalid\",\n  //       \"title\": \"<short_message>\",\n  //       \"detail\": \"<long_message>\",\n  //       \"source\": {\n  //         \"parameter\": \"<field_name>\"\n  //       }\n  //     }\n  //   ]\n  // }\n  // Pulp error:\n  // {\n  //   \"<field_name>\": \"<error_message>\",\n  // }\n\n  // handle galaxy error\n  if ('errors' in data && Array.isArray(data['errors'])) {\n    for (const e of err.response.data.errors) {\n      if (e.source) {\n        messages[e.source.parameter] = e.detail;\n      } else {\n        // some error responses are too cool to have a\n        // parameter set on them >:(\n        messages['__nofield'] = e.detail || e.title;\n      }\n    }\n\n    return messages;\n  }\n\n  // handle pulp error\n  if (typeof data === 'object') {\n    return data;\n  }\n\n  return {};\n}\n\nexport function isFieldValid(\n  errorMessagesType: ErrorMessagesType,\n  name,\n): 'default' | 'error' {\n  let names = [];\n  if (Array.isArray(name)) {\n    names = name;\n  } else {\n    names.push(name);\n  }\n\n  if (!errorMessagesType) {\n    return 'default';\n  }\n\n  return names.find((n) => errorMessagesType[n]) ? 'error' : 'default';\n}\n\nexport function isFormValid(errorMessages: ErrorMessagesType) {\n  if (!errorMessages) {\n    return true;\n  }\n\n  return !Object.values(errorMessages).find(Boolean);\n}\n\nexport function alertErrorsWithoutFields(\n  errorMessages: ErrorMessagesType,\n  fields,\n  addAlert,\n  title,\n  setErrorMessages,\n) {\n  if (!errorMessages) {\n    return;\n  }\n\n  // select only errors without associated field\n  const errors = Object.keys(errorMessages)\n    .filter((field) => !fields.includes(field))\n    .map((field) => errorMessages[field]);\n\n  if (errors.length) {\n    // alert them\n    addAlert({\n      variant: 'danger',\n      title: title,\n      description: errors.join('\\n'),\n    });\n\n    // filter only errors with field, rest will be removed from the state, because they were already alerted\n    const formErrors = {};\n\n    Object.keys(errorMessages).forEach((field) => {\n      if (fields.includes(field)) {\n        formErrors[field] = errorMessages[field];\n      }\n    });\n\n    setErrorMessages(formErrors);\n  }\n\n  return;\n}\n","import { t } from '@lingui/macro';\nimport { mapErrorMessages } from './map-error-messages';\n\nexport function errorMessage(\n  statusCode: number,\n  statusText: string,\n  customMessage?: string,\n) {\n  const messages = {\n    500: t`Error ${statusCode} - ${statusText}: The server encountered an error and was unable to complete your request.`,\n    401: t`Error ${statusCode} - ${statusText}: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    403: t`Error ${statusCode} - ${statusText}: Forbidden: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    404: t`Error ${statusCode} - ${statusText}: The server could not find the requested URL.`,\n    400: t`Error ${statusCode} - ${statusText}: The server was unable to complete your request.`,\n    default: t`Error ${statusCode} - ${statusText}`,\n    custom: t`Error ${statusCode} - ${statusText}: ${customMessage}`,\n  };\n  if (customMessage) {\n    return messages.custom;\n  }\n  return messages[statusCode] || messages.default;\n}\n\nexport const handleHttpError = (title, callback, addAlert) => (e) => {\n  let description = e.toString();\n\n  if (e.response) {\n    // HTTP error\n    const { status, statusText } = e.response;\n\n    const err = mapErrorMessages(e);\n    const message = Object.values(err).join(' ');\n\n    description = message\n      ? errorMessage(status, statusText, message)\n      : errorMessage(status, statusText);\n  }\n\n  addAlert({\n    title,\n    variant: 'danger',\n    description,\n  });\n\n  callback();\n};\n","const UUIDRegEx =\n  /\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b/i;\n\nexport function parsePulpIDFromURL(url: string): string {\n  for (const section of url.split('/')) {\n    if (section.match(UUIDRegEx)) {\n      return section;\n    }\n  }\n\n  return null;\n}\n","import { t } from '@lingui/macro';\nimport { TaskAPI } from 'src/api';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\n\ninterface Options {\n  bailAfter?: number;\n  multiplier?: number;\n  waitMs?: number;\n}\n\nexport function waitForTask(task, options: Options = {}) {\n  // default to starting with a 2s wait, increasing the wait time 1.5x each time, with max 10 attempts\n  // 2000, 1.5, 10 = ~226s ; 500, 1.5, 10 = ~57s\n  const { waitMs = 2000, multiplier = 1.5, bailAfter = 10 } = options;\n\n  return TaskAPI.get(task).then((result) => {\n    const failing = ['skipped', 'failed', 'canceled'];\n\n    if (failing.includes(result.data.state)) {\n      return Promise.reject(\n        result.data.error?.description ?? t`Task failed without error message.`,\n      );\n    }\n\n    if (result.data.state !== 'completed') {\n      if (!bailAfter) {\n        return Promise.reject(\n          new Error(t`Giving up waiting for task after 10 attempts.`),\n        );\n      }\n\n      return new Promise((r) => setTimeout(r, waitMs)).then(() =>\n        waitForTask(task, {\n          ...options,\n          waitMs: Math.round(waitMs * multiplier),\n          bailAfter: bailAfter - 1,\n        }),\n      );\n    }\n  });\n}\n\nexport function waitForTaskUrl(taskUrl, options = {}) {\n  return waitForTask(parsePulpIDFromURL(taskUrl), options);\n}\n","import { t } from '@lingui/macro';\nimport {\n  AnsibleRepositoryAPI,\n  AnsibleRepositoryType,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\nimport { waitForTaskUrl } from './wait-for-task';\n\nasync function getAll(additionalParams = {}) {\n  let list = [];\n\n  // loop max 10 times (= 1000 items)\n  for (let page = 1; page <= 10; page++) {\n    const result = await AnsibleRepositoryAPI.list({\n      ...additionalParams,\n      page,\n      page_size: 100,\n    });\n\n    list = list.concat(result.data.results);\n    if (list.length >= result.data.count) {\n      return list;\n    }\n  }\n}\n\nexport class RepositoriesUtils {\n  public static listApproved(): Promise<AnsibleRepositoryType[]> {\n    return getAll({ pulp_label_select: 'pipeline=approved' });\n  }\n\n  public static listAll(): Promise<AnsibleRepositoryType[]> {\n    return getAll();\n  }\n\n  public static async deleteCollection(repoName, collectionVersion_pulp_href) {\n    const repo = (\n      await AnsibleRepositoryAPI.list({ name: repoName, page_size: 1 })\n    )?.data?.results?.[0];\n    if (!repo) {\n      return Promise.reject({ error: t`Repository ${repoName} not found.` });\n    }\n\n    const task = (\n      await AnsibleRepositoryAPI.removeContent(\n        parsePulpIDFromURL(repo.pulp_href),\n        collectionVersion_pulp_href,\n      )\n    )?.data?.task;\n\n    await waitForTaskUrl(task);\n  }\n\n  public static pushToOrFilterOutCollections(\n    selectedCollection: CollectionVersionSearch,\n    collections: CollectionVersionSearch[],\n  ): CollectionVersionSearch[] {\n    // check if collection is already selected\n    const selectedItem = collections.find(\n      ({ collection_version: cv, repository }) =>\n        cv.pulp_href === selectedCollection.collection_version.pulp_href &&\n        repository.pulp_href === selectedCollection.repository.pulp_href,\n    );\n\n    // if collection is not selected, add it to selected items\n    if (!selectedItem) {\n      return [...collections, selectedCollection];\n    }\n\n    // unselect collection\n    return collections.filter(\n      ({ collection_version: cv, repository }) =>\n        cv.pulp_href !== selectedCollection.collection_version.pulp_href ||\n        repository.pulp_href !== selectedCollection.repository.pulp_href,\n    );\n  }\n\n  public static async getCollectionRepoList(\n    collection: CollectionVersionSearch,\n  ) {\n    const { name, namespace, version } = collection.collection_version;\n\n    // get repository list for selected collection\n    // TODO: support more pages\n    const collectionInRepos = await CollectionVersionAPI.list({\n      namespace,\n      name,\n      version,\n      page_size: 100,\n      offset: 0,\n    });\n\n    const collectionRepos = collectionInRepos.data.data.map(\n      ({ repository }) => repository.name,\n    );\n\n    return collectionRepos;\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { DropdownItem, Tooltip } from '@patternfly/react-core';\nimport React from 'react';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n} from 'src/api';\nimport { errorMessage } from './fail-alerts';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\nimport { RepositoriesUtils } from './repositories';\nimport { waitForTask } from './wait-for-task';\n\nexport class DeleteCollectionUtils {\n  public static getUsedbyDependencies(collection: CollectionVersionSearch) {\n    const { name, namespace } = collection.collection_version;\n    return CollectionVersionAPI.getUsedDependenciesByCollection(namespace, name)\n      .then(({ data }) => data.data.length === 0)\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        return Promise.reject({\n          title: t`Dependencies for collection \"${name}\" could not be displayed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  public static deleteMenuOption({\n    canDeleteCollection,\n    noDependencies,\n    onClick,\n    deleteAll,\n    display_repositories,\n  }) {\n    if (!canDeleteCollection) {\n      return null;\n    }\n\n    if (!display_repositories && !deleteAll) {\n      // cant display delete from repository when repositories are turned off\n      return null;\n    }\n\n    const caption = deleteAll\n      ? t`Delete entire collection from system`\n      : t`Delete collection from repository`;\n\n    const key = deleteAll ? 'delete-collection' : 'remove-collection';\n\n    if (noDependencies === false) {\n      return (\n        <Tooltip\n          key={key}\n          position='left'\n          content={\n            <Trans>\n              Cannot delete until collections <br />\n              that depend on this collection <br />\n              have been deleted.\n            </Trans>\n          }\n        >\n          <DropdownItem isDisabled>{caption}</DropdownItem>\n        </Tooltip>\n      );\n    }\n\n    return (\n      <DropdownItem data-cy={key} key={key} onClick={onClick}>\n        {caption}\n      </DropdownItem>\n    );\n  }\n\n  public static tryOpenDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    collection,\n    deleteAll,\n  }) {\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) =>\n        DeleteCollectionUtils.openDeleteModalWithConfirm({\n          addAlert,\n          setState,\n          noDependencies,\n          collection,\n          deleteAll,\n        }),\n      )\n      .catch((alert) => addAlert(alert));\n  }\n\n  private static openDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    noDependencies,\n    collection,\n    deleteAll,\n  }) {\n    if (noDependencies) {\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n        deleteAll: deleteAll,\n      });\n    } else {\n      addAlert({\n        title: (\n          <Trans>\n            Cannot delete until collections <br />\n            that depend on this collection <br />\n            have been deleted.\n          </Trans>\n        ),\n        variant: 'warning',\n      });\n    }\n  }\n\n  public static deleteCollection({\n    collection,\n    setState,\n    load,\n    redirect,\n    addAlert,\n    deleteFromRepo,\n  }) {\n    let promise = null;\n    if (deleteFromRepo) {\n      promise = RepositoriesUtils.deleteCollection(\n        deleteFromRepo,\n        collection.collection_version.pulp_href,\n      );\n    } else {\n      promise = CollectionAPI.deleteCollection(collection);\n    }\n\n    promise\n      .then((res) => {\n        if (!deleteFromRepo) {\n          const taskId = parsePulpIDFromURL(res.data.task);\n          return waitForTask(taskId);\n        }\n      })\n      .then(() => {\n        addAlert({\n          variant: 'success',\n          title: (\n            <Trans>\n              Collection &quot;{collection.collection_version.name}\n              &quot; has been successfully deleted.\n            </Trans>\n          ),\n        });\n\n        if (redirect) {\n          setState({ redirect });\n        }\n\n        if (load) {\n          load();\n        }\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n\n        addAlert({\n          variant: 'danger',\n          title: t`Collection \"${collection.collection_version.name}\" could not be deleted.`,\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() =>\n        setState({\n          deleteCollection: null,\n          isDeletionPending: false,\n        }),\n      );\n  }\n}\n","import { saveAs } from 'file-saver';\n\nexport const downloadString = (data, filename) =>\n  saveAs(\n    new Blob([data], {\n      type: 'text/plain;charset=utf-8',\n    }),\n    filename,\n  );\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\n\nexport function filterIsSet(params, filters) {\n  return some(filters, (filter) => filter in params);\n}\n","// Returns the API path for a specific repository\nexport function getRepoURL(distribution_base_path, view_published = false) {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = API_HOST ? API_HOST : window.location.origin;\n\n  // repo/distro \"published\" is special; not related to repo pipeline type\n  if (distribution_base_path === 'published' && view_published === false) {\n    return `${host}${API_BASE_PATH}`;\n  }\n\n  return `${host}${API_BASE_PATH}content/${distribution_base_path}/`;\n}\n\n// returns the server name for (protocol-less) container urls\n// url/image, url/image:tag, url/image@digest (including sha256: prefix)\nexport function getContainersURL({\n  name,\n  tag,\n  digest,\n}: {\n  name: string;\n  tag?: string;\n  digest?: string;\n}) {\n  const host = window.location.host;\n\n  return `${host}/${name}${tag ? `:${tag}` : ''}${\n    digest && !tag ? `@${digest}` : ''\n  }`;\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function hasPermission({ user, settings, featureFlags }, name) {\n  if (!user?.model_permissions) {\n    return false;\n  }\n\n  if (!user.model_permissions[name]) {\n    console.error(`Unknown permission ${name}`);\n    return !!user.is_superadmin;\n  }\n\n  return !!user.model_permissions[name].has_model_permission;\n}\n","import React from 'react';\nimport { DateComponent, HelperText, StatusIndicator } from 'src/components';\n\nexport function lastSynced(entity) {\n  if (!entity.last_sync_task || !entity.last_sync_task.finished_at) {\n    return null;\n  }\n\n  return (\n    <>\n      <DateComponent date={entity.last_sync_task.finished_at} />\n    </>\n  );\n}\n\nexport function lastSyncStatus(entity) {\n  if (!entity.last_sync_task) {\n    return null;\n  }\n\n  let errorMessage = null;\n  if (entity.last_sync_task.error) {\n    errorMessage = (\n      <HelperText content={entity.last_sync_task.error['description']} />\n    );\n  }\n\n  return (\n    <>\n      <StatusIndicator status={entity.last_sync_task.state} /> {errorMessage}\n    </>\n  );\n}\n","import { cloneDeep } from 'lodash';\n\ntype ParamValueType = string | number | string[];\nexport type ParamType = Record<string, ParamValueType>;\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // do not append empty values at all (this will disable searching by empty strings)\n      if (val.trim().length == 0) {\n        return;\n      }\n\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(p: object, key: string, value: ParamValueType) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: ParamType, keys: string[]) {\n    const params = cloneDeep(p);\n    for (const k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: object, ignoreParams?: string[]) {\n    const paramString = [];\n\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function (params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params }, callback);\n      this.props.navigate({\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n\n  // removes any params not in ignoredParams from params and calls updateParams with it\n  static clearAllFilters({ params, ignoredParams, updateParams }) {\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    updateParams({ ...params, page: 1 });\n  }\n\n  // check if params are valid for sorting\n  static validSortParams = (sort, sortParams, defaultSort) => {\n    const isDesc = sort.includes('-');\n\n    const ascSort = isDesc ? sort.replace('-', '') : sort;\n\n    if (sortParams.includes(ascSort)) {\n      return isDesc ? sort : ascSort;\n    }\n\n    return defaultSort;\n  };\n}\n","import { t } from '@lingui/macro';\nimport { SignContainersAPI } from 'src/api';\nimport { waitForTaskUrl } from './wait-for-task';\n\nexport class RepoSigningUtils {\n  public static getContainerPulpType(item) {\n    const pulp_types = item.pulp.repository.pulp_type.split('.');\n    if (pulp_types.length > 1) {\n      return pulp_types[1];\n    } else {\n      return '';\n    }\n  }\n\n  public static sign(item, context, addAlert, reload) {\n    if (\n      item.pulp.repository.remote &&\n      Object.keys(item.pulp.repository.remote.last_sync_task || {}).length == 0\n    ) {\n      addAlert({\n        variant: 'danger',\n        description: t`Container must be synchronized with remote repository first.`,\n        title: t`Failed to sign the container version.`,\n      });\n      return;\n    }\n\n    const service = context.settings.GALAXY_CONTAINER_SIGNING_SERVICE;\n    SignContainersAPI.getSigningService(service)\n      .then((result) => {\n        const pulp_href = result.data.results[0]['pulp_href'];\n        return SignContainersAPI.sign(\n          item.pulp.repository.id,\n          RepoSigningUtils.getContainerPulpType(item),\n          pulp_href,\n          item.pulp.distribution.base_path,\n        ).then((result) => {\n          addAlert({\n            variant: 'success',\n            title: t`Signing started for container \"${item.name}\".`,\n          });\n          return waitForTaskUrl(result.data.task).then(() => {\n            if (reload) {\n              reload();\n            }\n          });\n        });\n      })\n      .catch((ex) => {\n        addAlert({\n          variant: 'danger',\n          description: t`API Error: ${ex}`,\n          title: t`Failed to sign the container version.`,\n        });\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport { AnsibleDistributionAPI, AnsibleRepositoryAPI } from 'src/api';\n\n// returns the preferred distribution base_path given a repo name\n// if there is a distribution with the same name as the repository, it will be used (as long as it's connected to the right repo too)\n// if not, the oldest will be used\n// reject if no distributions or repository\n// optional pulp_href param skips repo lookup\n\nexport function repositoryBasePath(name, pulp_href?): Promise<string> {\n  return Promise.all([\n    pulp_href\n      ? Promise.resolve({ name, pulp_href })\n      : AnsibleRepositoryAPI.list({ name, page_size: 1 }).then(firstResult),\n    AnsibleDistributionAPI.list({ name, page_size: 1 }).then(firstResult),\n  ]).then(async ([repository, distribution]) => {\n    if (!repository) {\n      return Promise.reject(t`Failed to find repository ${name}`);\n    }\n\n    if (distribution && distribution.repository === repository.pulp_href) {\n      return distribution.base_path;\n    }\n\n    distribution = await AnsibleDistributionAPI.list({\n      repository: repository.pulp_href,\n      sort: 'pulp_created',\n      page_size: 1,\n    }).then(firstResult);\n\n    if (!distribution) {\n      return Promise.reject(\n        t`Failed to find a distribution for repository ${name}`,\n      );\n    }\n\n    return distribution.base_path;\n  });\n}\n\nfunction firstResult({ data: { results } }) {\n  return results[0];\n}\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","import { Trans } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Paths, formatPath } from 'src/paths';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\n\ntype VariantType = 'default' | 'success' | 'danger' | 'warning' | 'info';\n\n// task can be { task: (pulp_href) } or \"(pulp_href)\" or \"(uuid)\"\nexport const taskAlert = (task, title, variant: VariantType = 'info') => ({\n  title,\n  variant,\n  description: (\n    <span>\n      <Trans>\n        See the task management{' '}\n        <Link\n          to={formatPath(Paths.taskDetail, {\n            task: parsePulpIDFromURL(task?.task || task),\n          })}\n        >\n          detail page{' '}\n        </Link>\n        for the status of this task.\n      </Trans>\n    </span>\n  ),\n});\n","import { i18n } from '@lingui/core';\nimport { Constants } from 'src/constants';\n\n// Locked roles description can't be translated on the API\n// To solve this problem, description for the locked roles\n// must be hardcoded into the UI\nexport const translateLockedRolesDescription = (name, desc) =>\n  Constants.LOCKED_ROLES_WITH_DESCRIPTION[name]\n    ? i18n._(Constants.LOCKED_ROLES_WITH_DESCRIPTION[name])\n    : desc;\n","import { t } from '@lingui/macro';\n\nexport function validateURLHelper(\n  outsideError: string | undefined,\n  url: string,\n): {\n  validated: 'default' | 'warning' | 'error';\n  helperTextInvalid?: string;\n  helperText?: string;\n} {\n  if (outsideError) {\n    return { validated: 'error', helperTextInvalid: outsideError };\n  }\n\n  try {\n    const { protocol } = new URL(url);\n    if (protocol === 'http:') {\n      return {\n        validated: 'warning',\n        helperText: t`Consider using a secure URL (https://).`,\n      };\n    }\n\n    if (protocol === 'https:') {\n      return { validated: 'default' };\n    }\n  } catch (_) {\n    // fallthrough\n  }\n\n  return {\n    validated: 'error',\n    helperTextInvalid: t`The URL needs to be in 'http(s)://' format.`,\n  };\n}\n","import React from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Paths } from 'src/paths';\n\n// compatibility layer between react-router v6 and class components\n\n// differences from v5:\n// history.push -> navigate\n// location -> location\n// match.params -> routeParams\n// match.path -> routePath\n\nexport class RouteProps {\n  location: ReturnType<typeof useLocation>;\n  navigate: ReturnType<typeof useNavigate>;\n  routeParams: Record<string, string>;\n  routePath: Paths;\n}\n\nexport const withRouter = (ClassComponent) => {\n  const WithRouter = ({ path }: { path: string }) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const params = useParams();\n\n    return (\n      <ClassComponent\n        location={location}\n        navigate={navigate}\n        routeParams={params}\n        routePath={path}\n      />\n    );\n  };\n  WithRouter.displayName = `withRouter(${\n    ClassComponent.displayName || ClassComponent.name\n  })`;\n\n  return WithRouter;\n};\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isWriteOnly(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  return !!field;\n}\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  if (field) {\n    return field.is_set;\n  } else {\n    throw `Field ${name} is not in writeOnlyFields`;\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","webpackContext","webpackContextResolve","BaseAPI","apiBaseUrl","_this","_classCallCheck","this","http","axios","baseURL","paramsSerializer","serialize","params","ParamHelper","getQueryString","interceptors","request","use","authHandler","_authHandler","_createClass","key","value","p","_objectSpread","pageSize","parseInt","Constants","DEFAULT_PAGE_SIZE","page","apiPath","get","getPath","mapPageToOffset","data","put","post","patch","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","DEPLOYMENT_MODE","INSIGHTS_DEPLOYMENT_MODE","window","insights","chrome","auth","getUser","STANDALONE_DEPLOYMENT_MODE","headers","Cookies","abrupt","stop","_x","apply","arguments","HubAPI","_BaseAPI","_inherits","_super","call","API_BASE_PATH","_defineProperty","_assertThisInitialized","url","concat","UI_API_VERSION","ActiveUserAPI","_HubAPI","API","_len","length","args","Array","_key","getUIPath","result","reject","username","password","_this2","loginURL","_get","_getPrototypeOf","prototype","PulpAPI","PULP_API_BASE_PATH","changedParams","useOrdering","AnsibleDistributionAPI","_PulpAPI","AnsibleRemoteAPI","pk","newValue","oldValue","reducedData","remote","unmodifiedRemote","auth_url","_i","_Object$keys","field","smartUpdate","_id","_obj","role","AnsibleRepositoryAPI","pulp_id","list","body","undefined","version_href","base_version","collection_version_hrefs","add_content_units","collection_version_href","remove_content_units","CertificateUploadAPI","formData","FormData","append","file","repository","signed_collection","filterListItem","item","latest_version","contents","metadata","filter","includes","content_type","CollectionAPI","_getSignatures","_deleteCollection","_deleteCollectionVersion","_getDownloadURL","_setDeprecation","repo","path","response","_ref","_ref$collection_versi","namespace","name","is_deprecated","distroBasePath","collection_version","repositoryBasePath","pulp_href","sent","deprecated","progressCallback","cancelToken","config","onUploadProgress","token","distro_base_path","source","_callee2","version","_context2","_ref2","download_url","_x2","_x3","_x4","_x5","_callee3","_ref3","_ref3$collection_vers","_context3","_x6","_callee4","_ref4","_ref4$collection_vers","_context4","_x7","collection","_callee5","_context5","_x8","_x9","_x10","_x11","CollectionVersionAPI","source_base_path","destination_base_path","create","ContainerDistributionAPI","ContainerTagAPI","repositoryID","tag","digest","ExecutionEnvironmentAPI","readme","manifest","ExecutionEnvironmentRegistryAPI","clearSetFieldsFromRequest","write_only_fields","ExecutionEnvironmentRemoteAPI","FeatureFlagsAPI","GenericPulpAPI","GroupAPI","groupId","roleId","content_object","ImportAPI","LegacyAPI","fullPath","API_VERSION","_LegacyAPI","getApiPath","_Object$entries","entries","_Object$entries$_i","_slicedToArray","MyNamespaceAPI","MySyncListAPI","NamespaceAPI","PulpStatus","RoleAPI","for_object_type","newParams","permissionId","SettingsAPI","SignCollectionAPI","_sign","updatedData","repository_name","_objectWithoutProperties","_excluded","status","serviceName","containerId","pulp_type","signServicePath","base_path","postObj","manifest_signing_service","SigningServiceAPI","TaskAPI","TaskManagementAPI","UserAPI","WisdomDenyIndexAPI","scope","reference","encodeURIComponent","count","removePath","addPath","ApproveModal","props","_useState","useState","_useState2","alerts","setAlerts","_useState3","_useState4","selectedRepos","setSelectedRepos","_useState5","_useState6","fixedRepos","setFixedRepos","_useState7","_useState8","loading","setLoading","context","useContext","addAlert","alert","prevAlerts","_toConsumableArray","useEffect","fixedReposLocal","selectedReposLocal","collectionVersion","repository_list","forEach","allRepositories","r","push","React","Modal","actions","Button","onClick","error","_approveAsync","_yield$AnsibleReposit","_yield","reapprove","originRepoName","reposToApprove","repositoriesRef","collectionData","autosign","signingService_href","signingServiceName","signingList","task","find","stagingRepoNames","rejectedRepoName","i18n","_","values","page_size","t3","t2","t1","t0","results","t4","parsePulpIDFromURL","settings","GALAXY_AUTO_SIGN_COLLECTIONS","GALAXY_COLLECTION_SIGNING_SERVICE","collection_versions","destination_repositories","copyCollectionVersion","moveCollectionVersion","t7","t6","t5","t8","waitForTaskUrl","finishAction","title","variant","description","approveAsync","isDisabled","closeAction","isOpen","onClose","className","MultipleRepoSelector","loadRepos","setRepositoryList","setItemsCount","par","_ref$response","statusText","errorMessage","Spinner","AlertList","closeAlert","i","CardListSwitcher","updateParams","_ref$size","size","disp","view_type","iconClasses","ThLargeIcon","cx","selected","setParam","ListIcon","CollectionCard","d","namespace_metadata","is_signed","displaySignatures","menu","footer","featureFlags","company","contentSummary","convertContentSummaryCounts","Card","CardHeader","Logo","alt","fallbackToDefault","image","avatar_url","unlockWidth","flexGrow","display_repositories","TextContent","Text","component","TextVariants","small","Badge","isRead","Link","to","formatPath","Paths","ansibleRepositoryDetail","CERTIFIED_REPO","SignatureBadge","isCompact","signState","collectionByRepo","Trans","components","namespaceDetail","CardBody","Tooltip","content","slice","k","type","CollectionNumericLabel","newline","CardFooter","NamespaceCard","namespaceURL","CardHeaderMain","CardTitle","getDescription","MAX_DESCRIPTION_LENGTH","CollectionDependenciesList","dependencies_repos","dependencies","List","ListVariant","inline","dependency","listDep","EmptyStateNoData","fqn","version_range","ListItem","style","marginRight","HelperText","CollectionUsedbyDependenciesList","usedByDependencies","itemCount","usedByDependenciesLoading","ignoredParams","filterIsSet","Toolbar","ToolbarGroup","ToolbarItem","SearchInput","name__icontains","onChange","_e","val","onClear","placeholder","Sort","options","sort","Pagination","isTop","LoadingPageSpinner","getReduced","EmptyStateFilter","CollectionContentList","_step","toShow","summary","all","showing","keywords","_iterator","_createForOfIteratorHelper","s","n","done","_c$content_type","c","keywordMatch","match","typeMatch","err","f","clickable","collectionContentDocsByRepo","EmptyStateCustom","icon","ExclamationTriangleIcon","DownloadSignatureGridItem","display_signatures","show","setShow","signatures","setSignatures","isLoading","setIsLoading","getSignatures","res","message","GridItem","Split","hasGutter","SplitItem","padding","ButtonVariant","link","DownloadIcon","idx","signature","CodeBlock","CodeBlockCode","CollectionInfo","_content$license","_content$docs_blob","_content$docs_blob2","downloadLinkRef","installCommand","Grid","tags","Tag","license","isFilled","join","ClipboardCopy","isReadOnly","user","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD","Alert","isInline","LoginLink","collectionDistributionsByRepo","ref","display","getDownloadURL","downloadURL","current","href","click","_e$response","download","requires_ansible","docs_blob","collection_readme","dangerouslySetInnerHTML","__html","html","collectionDocsIndexByRepo","TableOfContents","docsBlob","setDocsBlob","table","setTable","collapsedCategories","baseUrlParams","documentation","modules","roles","plugins","playbooks","documentation_files","sanitizeDocsUrls","split","toUpperCase","collectionDocsPageByRepo","_step2","_iterator2","getContentEntry","a","b","startsWith","parseLinks","searchBarRef","Nav","theme","NavList","links","filterString","isExpanded","filteredLinks","toLowerCase","NavExpandable","capitalize","isActive","getSelectedCategory","index","NavItem","isSelected","textOverflow","overflow","whiteSpace","renderLinks","entry","selectedName","selectedType","base","content_name","CollectionFilter","repositories","setRepositories","inputText","setInputText","selectedFilter","setSelectedFilter","pulp_label_select","repos","_context$featureFlags","displayTags","displayRepos","displayNamespaces","filterConfig","inputType","COLLECTION_FILTER_TAGS","Boolean","ToolbarContent","marginLeft","CompoundFilter","text","selectFilter","AppliedFilters","niceNames","niceValues","false","true","marginTop","CollectionList","collections","collectionControls","DataList","CollectionListItem","_extends","showNamespace","clearAllFilters","SignAllCertificatesModal","onSubmit","onCancel","ModalVariant","medium","primary","span","Form","FormGroup","fieldId","label","FormSelect","FormSelectOption","SignSingleCertificateModal","_ref$signState","_ref$isCompact","Label","color","CheckCircleIcon","UploadSingCertificateModal","filename","setFilename","setPath","FileUpload","filenamePlaceholder","browseButtonText","onFileInputChange","onClearClick","_ref$collection","dropdownMenu","synclistSwitch","uploadButton","cells","DataListCell","alignRight","width","DeprecatedTag","LabelGroup","chipGroupProps","Flex","direction","default","alignItems","FlexItem","DateComponent","date","pulp_created","alignSelf","DataListItem","DataListItemRow","DataListItemCells","dataListCells","ConfirmModal","cancelAction","children","confirmAction","spinner","confirmButtonTitle","titleIconVariant","CopyCollectionToRepositoryModal","isSelectorOpen","setIsSelectorOpen","isSelectorChecked","setIsSelectorChecked","repositoryList","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","itemsCount","_useState15","_useState16","_useState17","_useState18","setParams","loadAssociatedRepoList","selectPage","deselectPage","dropdownItems","labels","repoList","RepositoriesUtils","getCollectionRepoList","changeSelection","checked","element","copyToRepositories","_props$collection","pulpId","signingService","repoHrefs","copyParams","taskAlert","DropdownItem","listAll","DropdownSeparator","Dropdown","onSelect","document","getElementById","focus","toggle","DropdownToggle","splitButtonItems","DropdownToggleCheckbox","onToggle","sortTableOptions","SortTable","CheckboxRow","rowIndex","renderTable","moment","format","fromNow","DeleteAnsibleRemoteModal","deleteAction","pending","setPending","DeleteModal","DeleteAnsibleRepositoryModal","DeleteCollectionModal","deleteCollection","isDeletionPending","confirmDelete","setConfirmDelete","deleteFromRepo","lastCollectionVersion","paddingBottom","Checkbox","isChecked","isRemove","_ref$variant","button","EmptyState","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","EmptyStateBody","EmptyStatePrimary","SearchIcon","PlusCircleIcon","CubesIcon","EmptyStateUnauthorized","LockIcon","BaseHeader","_React$Component","_this$props","logo","pageControls","breadcrumbs","contextSelector","versionControl","CollectionHeader","_submitCertificate","modalPagination","setState","modalCollections","_this$props$collectio","requestParams","order_by","_this$props$collectio2","errorAlert","state","isOpenSignAllModal","sign","signing_service","waitForTask","task_id","x","_this$props$collectio3","isOpenSignModal","deleteAll","promise","deleteCollectionVersion","taskId","topVersion","queueAlert","redirect","_err$response","_err$response$data","detail","dependent_collection_versions","isOpenVersionsSelect","isOpenVersionsModal","DEFAULT_PAGINATION_OPTIONS","noDependencies","updateCollection","showImportModal","uploadCertificateModalOpen","versionToUploadCertificate","copyCollectionToRepositoryModal","DeleteCollectionUtils","getUsedbyDependencies","include_related","_ref5","prevProps","_this3","activeTab","actuallyCollection","collectionsCount","_this$state","urlKeys","latestVersion","_this$context$feature","can_upload_signatures","isLatestVersion","v","collectionName","Navigate","canSign","canSignNamespace","hasPermission","deleteMenuOption","canDeleteCollection","openDeleteModalWithConfirm","deprecate","checkUploadPrivilleges","copyToRepository","issueUrl","ImportModal","onUploadSuccess","myImports","setOpen","warn","toggleImportModal","closeUploadCertificateModal","submitCertificate","signCollection","signVersion","isPlain","updatePaginationParams","_ref6","toString","load","RepoSelector","selectedRepo","Breadcrumbs","Select","SelectVariant","single","selections","loadingVariant","SelectOption","DownloadCount","target","rel","ExternalLinkAltIcon","StatefulDropdown","items","renderTabs","_this4","related_fields","my_permissions","active","_this$props2","pathParams","reduced","ignoreParams","tabs","collectionContentListByRepo","collectionImportLogByRepo","collectionDependenciesByRepo","LinkTabs","_this$state$versionTo","_this5","upload","reload","_ref7","_ref8","_this6","setDeprecation","_err$response2","warning","closeAlertMixin","AppContext","PartnerHeader","filters","Tabs","Popover","position","PopoverPosition","top","bodyContent","headerContent","header","iconPosition","OutlinedQuestionCircleIcon","Status","_saveFile","errors","uploadProgress","uploadStatus","waiting","allRepos","onlyStaging","loadAllRepos","pipeline","_repo$pulp_labels","_repo$pulp_labels2","pulp_labels","addAlertObj","handleClose","saveFile","canUpload","disabled","handleFileUpload","files","htmlFor","renderFileIcon","Radio","singleSelectionOnly","hideFixedRepos","uploading","SpinnerIcon","FolderOpenIcon","newCollection","acceptedFileTypes","COLLECTION_NAME_REGEX","test","artifact","sha256","getCancelToken","loaded","total","messages","msg","cancel","LegacyNamespaceListItem","_summary_fields$owner","namespace_url","legacyNamespace","namespaceid","ai_deny_index","summary_fields","userOwnsLegacyNamespace","owners","showWisdom","is_superuser","openModal","float","contextType","onSelectProp","_ref$toggleType","toggleType","defaultText","_ref$isPlain","ariaLabel","setSelected","event","currentTarget","renderToggle","open","DropdownPosition","right","autoFocus","toggleIndicator","KebabToggle","ListItemActions","_this$props$buttons","_this$props$kebabItem","buttons","kebabItems","anyButtons","anyKebab","paddingRight","textAlign","justifyContent","Bullseye","height","LoadingPageWithHeader","Skeleton","Main","failed","objectFit","maxHeight","src","DefaultLogo","onError","MarkdownEditor","updateText","helperText","editing","TextArea","ReactMarkdown","ImportConsole","lastImport","followLogs","selectedImport","apiError","renderTitle","running","followMessages","handleScrollClick","renderMessage","completed","level","hideCollectionName","empty","collectionHead","approvalStatus","_collection$repositor","repoStatus","NOTCERTIFIED","NEEDSREVIEW","APPROVED","StatusIndicator","traceback","setFollowMessages","scrollIntoView","behavior","requestAnimationFrame","ImportList","kwField","namespaces","loadNamespaces","selectImport","importList","numberOfResults","renderApiSearchAhead","renderList","perPage","onSetPage","onPerPageSelect","getStatusClass","renderDescription","finished_at","statusClass","namespace_filter","APISearchTypeAhead","loadResults","placeholderText","NamespaceForm","errorMessages","isRequired","TextInput","helperTextInvalid","validated","toError","updateField","getLinksErrorText","renderLinkGroup","addLink","update","updateNamespace","splice","last","validateName","updateLink","validateUrl","TrashIcon","removeLink","validateURLHelper","ResourcesForm","resources","NamespaceModal","newNamespaceName","groups","toggleModal","onCreateSuccess","parameter","newNamespaceNameValid","handleSubmit","preventDefault","labelIcon","InputGroup","newNamespaceNameIsValid","NumericLabel","number","numberElem","Math","floor","labelElem","plugin","ListPage","_class","condition","displayName","defaultPageSize","defaultSort","errorTitle","headerActions","listItemActions","noDataButton","noDataDescription","noDataTitle","query","renderModals","renderTableRow","sortHeaders","typeaheadQuery","actionContext","action","_action$modal","modal","_action$modal2","translateTitle","klass","parseParamString","location","search","unauthorised","_renderModals","localizedFilterConfig","knownFilters","noData","fromEntries","filterId","obj","optionId","hasObjectPermission","listQuery","navigate","resetCompoundFilter","localizedSortHeaders","updateParamsMixin","withRouter","Page","listUrl","transformParams","render","permission","_item$my_permissions","_item$my_permissions$","_transformParams","routeParams","_item$my_permissions2","_item$my_permissions3","PageWithTabs","headerDetails","renderTab","tabUpdateParams","tab","localizedTabs","visible","NotFound","zIndex","flexDirection","marginBottom","actionClose","AlertActionCloseButton","alertIndex","newList","alertStateVariable","_ref$ignoredParams","_ref$niceNames","chips","isArray","ChipGroup","categoryName","_niceValues$key","Chip","deleteParam","unsetFilter","renderGroup","Breadcrumb","BreadcrumbItem","PFClipboardCopy","hoverTip","clickTip","selectedID","replace","indexOf","submitMultiple","isCreatable","hasOnCreateOption","filterOptions","FilterIcon","renderInput","submitFilter","control","trim","checkbox","onSelectMultiple","isGrouped","SelectGroup","option","selectTitleById","typeaheadResults","multiple","onKeyPress","handleEnter","newValues","opt","CopyURL","_ref$fallback","fallback","isCode","PFFileUpload","clearButtonText","_ref$active","extra","ToggleTemplate","_ref$firstIndex","firstIndex","_ref$lastIndex","lastIndex","_ref$itemCount","perPageOptions","extraProps","PaginationVariant","bottom","PaginationPF","String","titles","ofWord","perPageSuffix","toggleTemplate","isDescending","getIsDescending","desc","sortParamName","getSelected","descending","def","substring","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","setDescending","disabledTitle","PFTabs","activeKey","getActiveTab","Tab","eventKey","TabTitleText","findIndex","PFTooltip","WizardModal","steps","onSave","large","showClose","hasNoBodyWrapper","PFWizard","hasNoBodyPadding","navAriaLabel","mainAriaLabel","backButtonText","cancelButtonText","closeButtonAriaLabel","nextButtonText","titleId","descriptionId","WriteOnlyField","isValueSet","autoComplete","AccessTab","group","canEditOwners","showGroupRemoveModal","showGroupSelectWizard","buttonAdd","updateProps","renderGroupRemoveModal","renderGroupSelectWizard","renderRoles","renderGroups","sortedGroups","sortBy","renderGroupRow","_this$props3","urlPrefix","_this$props4","showRoleRemoveModal","showRoleSelectWizard","object_roles","sortedRoles","renderRoleRemoveModal","renderRoleSelectWizard","RoleListTable","tableHeader","ExpandableRow","expandableRowContent","GroupRolePermissions","groupname","removeGroup","removeRole","_this7","_this$props5","pulpObjectType","selectRolesMessage","_this$props$showGroup","_this$props$showGroup2","hasGroup","hasRoles","assignedGroups","selectedGroup","updateGroup","enableNext","SelectRoles","assignedRoles","selectedRoles","onRolesUpdate","canJumpTo","PreviewRoles","isFinished","addGroup","_group$object_roles","_this8","_this$props$showRoleS","addRole","DeleteUserModal","isWaitingForResponse","waitForDeleteConfirm","mapErrorMessages","closeModal","deleteUser","isUserSelfOrAdmin","getActionDescription","setTimeout","setRole","selectedRole","translateLockedRolesDescription","PermissionCategories","permissions","showCustom","showEmpty","_this$context","model_permissions","showUserManagement","external_authentication","userManagementFilter","USER_GROUP_MGMT_PERMISSIONS","allPermissions","categories","ui_category","knownPermissionsAndCategories","withActive","selectedPermissions","availablePermissions","groupsToShow","minWidth","grow","PermissionChipSelector","isViewOnly","onCategoryClear","onPermissionToggle","newPerms","Set","has","add","from","_model_permissions$pe","_model_permissions$pe2","menuAppendTo","typeaheadMulti","typeAheadAriaLabel","_model_permissions$pe3","perm","_perm$split","_perm$split2","category","catTitle","charAt","splitByDot","Divider","_ref$isStickyHeader","isStickyHeader","defaultTableHeader","TableComposable","colSpan","setIsExpanded","Tbody","Tr","Td","expand","ExpandableRowContent","_excluded2","select","disable","RadioRow","_excluded3","setGroups","groupsCount","setGroupsCount","localParams","setLocalParams","queryGroups","meta","isAssigned","some","tabHeader","flex","setRoles","rolesItemCount","setRolesItemCount","queryRoles","name__startswith","isRoleSelected","UserForm","newUser","updateUser","selection","g","addedGroup","searchGroups","name__contains","formErrors","updateUserFieldByName","passwordConfirm","loadGroups","isReadonly","saveUser","isNewUser","isMe","minLength","GALAXY_MINIMUM_PASSWORD_LENGTH","formFields","formGroupLabelIcon","requiredFields","superuserLabel","getSuperUserHelperText","Switch","labelOff","formSuffix","isPassSame","onSelectGroup","clearGroups","auth_provider","provider","ActionGroup","isPassValid","requiredFilled","DataForm","model","pass","confirm","UserFormPage","extraControls","RenderPluginDoc","renderError","console","log","doc","example","returnVals","parseDocString","parseExamples","parseReturn","synopsis","renderSynopsis","parameters","renderParameters","subOptionsMaxDepth","notes","renderNotes","examples","renderExample","returnValues","renderReturnValues","returnContainMaxDepth","shortDescription","renderShortDescription","renderDeprecated","requirements","renderRequirements","renderTableOfContents","renderWarning","JSON","stringify","doc_strings","short_description","maxDepth","parseOptions","depth","op","ensureListofStrings","_typeof","suboptions","parseReturnRecursive","returnV","ret","contains","part","renderDocLink","renderPluginLink","fqcn","dom","ERROR","formatPartError","BOLD","formatPartBold","CODE","formatPartCode","HORIZONTAL_LINE","formatPartHorizontalLine","ITALIC","formatPartItalic","LINK","formatPartLink","MODULE","formatPartModule","RST_REF","formatPartRstRef","URL","formatPartURL","TEXT","formatPartText","ENV_VARIABLE","formatPartEnvVariable","OPTION_NAME","formatPartOptionNameReturnValue","OPTION_VALUE","formatPartOptionValue","PLUGIN","formatPartPlugin","RETURN_VALUE","parsed","parse","_step3","fragments","_iterator3","_step4","_iterator4","formatPart","_pluginName","removed_in","why","alternative","renderTableOfContentsLink","applyDocFormatters","paramEntries","renderParameterEntries","parent","output","spacers","documentedType","renderChoices","renderPluginConfiguration","section","choices","defaul","note","renderReturnValueEntries","returned","sample","newRepos","newSelectedRepos","repo2","renderMultipleSelector","repoName","community","published","rejected","staging","InputGroupText","paddingLeft","backgroundColor","AnsibleRepositoryForm","_repository$pulp_labe","_repository$pulp_labe2","_remotes$find","allowEditName","updateRepository","disabledFields","bool","formGroup","fieldName","inputField","stringField","isValid","createDistribution","setCreateDistribution","disabledDistribution","setDisabledDistribution","onDistributionsLoad","hide_from_search","hideFromSearch","setHideFromSearch","setPipeline","disableHideFromSearch","setDisableHideFromSearch","remotes","setRemotes","remotesError","setRemotesError","loadRemotes","selectedRemote","selectedPipeline","setSelectedPipeline","selectOpen","setSelectOpen","selectOptions","approved","none","pipelineHelp","labelsHelp","numericField","LazyDistributions","emptyText","repositoryHref","_repository$pulp_labe3","selectPipeline","stopPropagation","PulpLabels","private","_event","_remotes$find2","_distributions$map","_distributions$map$jo","distributions","setDistributions","setCount","setPage","setError","prepend","_ref2$data","errorElement","ExclamationCircleIcon","LazyRepositories","_repositories$map","remoteHref","RemoteForm","requirements_file","client_key","client_cert","ca_cert","filenames","original","remoteType","download_concurrency","updateRemote","saveRemote","showMain","showModal","save","renderForm","collection_signing","writeOnlyFields","docsAnsibleLink","yamlTemplate","fileOnChange","helperTextIcon","helperTextInvalidIcon","signed_only","isFieldSet","updateIsSet","hideDefaultPreview","downloadString","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","CodeEditor","isCopyEnabled","isDarkTheme","isDownloadEnabled","isLanguageLabelVisible","isUploadEnabled","emptyState","language","Language","yaml","onEditorDidMount","editor","isWriteOnly","proxy_url","proxy_username","proxy_password","tls_validation","isNumericSet","rate_limit","Number","isInteger","_objectSpread3","hiddenFieldsName","newFields","is_set","isNaN","formPrefix","fields","DetailList","setItems","setItemCount","handleHttpError","Details","_ref$fields","overflowWrap","download_count","downloadCount","Intl","NumberFormat","UI_EXTERNAL_LOGIN_URI","login","HTMLComment","UIVersion","UI_COMMIT_HASH","Icon","isMinus","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","typeToVariantMap","secondary","_ref$type","labelProps","OutlinedClockIcon","skipped","canceled","ExclamationIcon","SyncAltIcon","statusToProps","margin","fontSize","paddingTop","borderRadius","readOnly","evt","textInput","getOptions","isPlaceholder","typeahead","hasInlineFilter","onFilter","toggleIcon","WisdomModal","isInDenyIndex","setIsInDenyIndex","titleWillBeUsed","titleWillNotBeUsed","areYouSureToOptIn","areYouSureToOptOut","removeFromDenyIndex","_ref2$response","addToDenyIndex","_ref3$response","expandableTitle","_props","NotFoundImage","AnsibleRemoteDetail","lazy","AnsibleRemoteEdit","AnsibleRemoteList","AnsibleRepositoryDetail","AnsibleRepositoryEdit","AnsibleRepositoryList","CertificationDashboard","CollectionContent","CollectionDependencies","CollectionDetail","CollectionDocs","CollectionImportLog","CollectionDistributions","EditNamespace","MyImports","MyNamespaces","NamespaceDetail","Partners","Search","SignatureKeysList","TaskDetail","TaskListView","TokenInsights","routes","ansibleRemoteDetail","ansibleRemoteEdit","ansibleRemotes","ansibleRepositories","ansibleRepositoryEdit","approvalDashboard","notFound","partners","editNamespace","myCollections","myCollectionsByRepo","myNamespaces","signatureKeys","taskList","taskDetail","collectionDocsPage","collectionDocsIndex","collectionContentDocs","collectionContentList","collectionImportLog","InsightsRoutes","Suspense","Routes","Component","Route","setFeatureFlags","setSettings","setUser","_useChrome","useChrome","identifyApp","updateDocumentTitle","getFeatureFlags","APPLICATION_NAME","_messages","_ref3$","Provider","I18nProvider","App","availableLanguages","momentLocales","zh","_activate","locale","pseudolocalization","_yield$import","_args","activate","userLanguage","navigator","languages","lang","searchParams","URLSearchParams","localStorage","test_l10n","override_l10n","overrideLanguage","debug","origin","pathname","UI_BASE_PATH","replaceAll","formatEEPath","_pathsWithNamespace","_data$container","pathsWithNamespace","executionEnvironmentDetail","executionEnvironmentDetailWithNamespace","executionEnvironmentDetailActivities","executionEnvironmentDetailActivitiesWithNamespace","executionEnvironmentDetailImages","executionEnvironmentDetailImagesWithNamespace","executionEnvironmentDetailAccess","executionEnvironmentDetailAccessWithNamespace","executionEnvironmentManifest","executionEnvironmentManifestWithNamespace","container","_data$container$split","_data$container$split2","namespaceBreadcrumb","_namespace$related_fi","can_create_signatures","collapsedText","expandedText","total_count","isFieldValid","errorMessagesType","names","isFormValid","alertErrorsWithoutFields","setErrorMessages","statusCode","customMessage","custom","callback","UUIDRegEx","_options$waitMs","waitMs","_options$multiplier","multiplier","_options$bailAfter","bailAfter","_result$data$error$de","_result$data$error","round","taskUrl","getAll","_getAll","additionalParams","_args3","_getCollectionRepoList","collectionVersion_pulp_href","_yield$AnsibleReposit2","removeContent","selectedCollection","cv","_collection$collectio","collectionInRepos","collectionRepos","offset","getUsedDependenciesByCollection","caption","saveAs","Blob","getRepoURL","distribution_base_path","view_published","host","has_model_permission","is_superadmin","lastSynced","entity","last_sync_task","lastSyncStatus","paramString","numericTypes","appendParam","cloneDeep","param","_i2","_deleteKeys","sortParams","isDesc","ascSort","firstResult","distribution","LOCKED_ROLES_WITH_DESCRIPTION","outsideError","protocol","ClassComponent","WithRouter","useLocation","useNavigate","useParams","routePath","el","newObj"],"sourceRoot":""}