{"version":3,"file":"js/781.1673992226318.754503efc986688a3fa5.js","mappings":"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","sources":["webpack:///./node_modules/lodash/isEqual.js","webpack:///./src/containers/collection-detail/base.ts","webpack:///./src/containers/collection-detail/collection-detail.tsx"],"sourcesContent":["var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","import { CollectionAPI, CollectionDetailType } from 'src/api';\nimport { AlertType } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\n\nexport interface IBaseCollectionState {\n  params: {\n    version?: string;\n    showing?: string;\n    keywords?: string;\n  };\n  collection: CollectionDetailType;\n  alerts?: AlertType[];\n}\n\nexport function loadCollection({\n  forceReload,\n  matchParams,\n  navigate,\n  selectedRepo,\n  setCollection,\n  stateParams,\n}) {\n  CollectionAPI.getCached(\n    matchParams['namespace'],\n    matchParams['collection'],\n    selectedRepo,\n    { ...stateParams, include_related: 'my_permissions' },\n    forceReload,\n  )\n    .then((result) => {\n      return CollectionAPI.list(\n        {\n          name: matchParams['collection'],\n        },\n        selectedRepo,\n      ).then((collections) => {\n        result.deprecated = collections.data.data[0].deprecated;\n        setCollection(result);\n      });\n    })\n    .catch(() => {\n      navigate(formatPath(Paths.notFound));\n    });\n}\n","import { isEqual } from 'lodash';\nimport * as React from 'react';\nimport {\n  AlertList,\n  CollectionHeader,\n  CollectionInfo,\n  LoadingPageWithHeader,\n  Main,\n  closeAlertMixin,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport { RouteProps, withRouter } from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { IBaseCollectionState, loadCollection } from './base';\n\n// renders collection level information\nclass CollectionDetail extends React.Component<\n  RouteProps,\n  IBaseCollectionState\n> {\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search);\n\n    this.state = {\n      collection: undefined,\n      params: params,\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadCollection(true);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!isEqual(prevProps.location, this.props.location)) {\n      this.loadCollection(false);\n    }\n  }\n\n  render() {\n    const { collection, params, alerts } = this.state;\n\n    if (!collection) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const breadcrumbs = [\n      namespaceBreadcrumb,\n      {\n        url: formatPath(Paths.namespaceByRepo, {\n          namespace: collection.namespace.name,\n          repo: this.context.selectedRepo,\n        }),\n        name: collection.namespace.name,\n      },\n      {\n        name: collection.name,\n      },\n    ];\n\n    return (\n      <React.Fragment>\n        <AlertList\n          alerts={alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        ></AlertList>\n        <CollectionHeader\n          reload={() => this.loadCollection(true)}\n          collection={collection}\n          params={params}\n          updateParams={(p) =>\n            this.updateParams(p, () => this.loadCollection(true))\n          }\n          breadcrumbs={breadcrumbs}\n          activeTab='install'\n          repo={this.context.selectedRepo}\n        />\n        <Main>\n          <section className='body'>\n            <CollectionInfo\n              {...collection}\n              updateParams={(p) => this.updateParams(p)}\n              params={this.state.params}\n              addAlert={(variant, title, description) =>\n                this.setState({\n                  alerts: [\n                    ...this.state.alerts,\n                    {\n                      variant,\n                      title,\n                      description,\n                    },\n                  ],\n                })\n              }\n            />\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private loadCollection(forceReload) {\n    loadCollection({\n      forceReload,\n      matchParams: this.props.routeParams,\n      navigate: this.props.navigate,\n      selectedRepo: this.context.selectedRepo,\n      setCollection: (collection) => this.setState({ collection }),\n      stateParams: this.state.params,\n    });\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n\nexport default withRouter(CollectionDetail);\n\nCollectionDetail.contextType = AppContext;\n"],"names":["baseIsEqual","module","exports","value","other","loadCollection","forceReload","matchParams","navigate","selectedRepo","setCollection","stateParams","CollectionAPI","include_related","then","result","name","collections","deprecated","data","formatPath","Paths","CollectionDetail","props","params","ParamHelper","location","search","state","collection","undefined","alerts","this","prevProps","breadcrumbs","namespaceBreadcrumb","url","namespace","repo","context","closeAlert","i","reload","updateParams","p","activeTab","className","addAlert","variant","title","description","setState","routeParams","closeAlertMixin","React","withRouter","contextType","AppContext"],"sourceRoot":""}