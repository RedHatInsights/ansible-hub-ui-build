{"version":3,"file":"js/264.f19a632a8358d35c9241.js","mappings":"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","sources":["webpack:///./locale/ lazy ^\\.\\/.*\\.js$ namespace object","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/api/base.ts","webpack:///./src/api/hub.ts","webpack:///./src/api/collection.ts","webpack:///./src/api/namespace.ts","webpack:///./src/api/response-types/pulp.ts","webpack:///./src/api/import.ts","webpack:///./src/api/active-user.ts","webpack:///./src/api/collection-version.ts","webpack:///./src/api/my-namespace.ts","webpack:///./src/api/user.ts","webpack:///./src/api/my-synclist.ts","webpack:///./src/api/task.ts","webpack:///./src/api/group.ts","webpack:///./src/api/pulp.ts","webpack:///./src/api/role.ts","webpack:///./src/api/remotes.ts","webpack:///./src/api/application-info.ts","webpack:///./src/api/distribution.ts","webpack:///./src/api/my-distribution.ts","webpack:///./src/api/execution-environment.ts","webpack:///./src/api/execution-environment-registry.ts","webpack:///./src/api/execution-environment-remote.ts","webpack:///./src/api/activities.ts","webpack:///./src/api/container-tag.ts","webpack:///./src/api/feature-flags.ts","webpack:///./src/api/container-distribution.ts","webpack:///./src/api/execution-environment-namespace.ts","webpack:///./src/api/controller.ts","webpack:///./src/api/task-management.ts","webpack:///./src/api/group-role.ts","webpack:///./src/api/generic-pulp.ts","webpack:///./src/api/settings.ts","webpack:///./src/api/sign-collections.ts","webpack:///./src/api/signing-service.ts","webpack:///./src/api/certificate-upload.ts","webpack:///./src/api/repositories.ts","webpack:///./src/api/sign-containers.ts","webpack:///./src/components/typeahead/typeahead.tsx","webpack:///./src/components/patternfly-wrappers/alert-list.tsx","webpack:///./src/components/patternfly-wrappers/applied-filters.tsx","webpack:///./src/components/headers/base-header.tsx","webpack:///./src/components/patternfly-wrappers/breadcrumbs.tsx","webpack:///./src/components/card-list-switcher/card-list-switcher.tsx","webpack:///./src/components/cards/collection-card.tsx","webpack:///./src/components/collection-detail/collection-content-list.tsx","webpack:///./src/components/collection-count/collection-count.tsx","webpack:///./src/components/date-component/date-component.tsx","webpack:///./src/components/signing/sign-single-certificate-modal.tsx","webpack:///./src/components/signing/sign-all-certificates-modal.tsx","webpack:///./src/components/signing/signature-badge.tsx","webpack:///./src/components/signing/upload-sign-certificate-modal.tsx","webpack:///./src/components/headers/collection-header.tsx","webpack:///./src/components/collection-detail/download-signature-grid-item.tsx","webpack:///./src/components/collection-detail/collection-info.tsx","webpack:///./src/components/collection-list/collection-filter.tsx","webpack:///./src/components/collection-list/collection-list.tsx","webpack:///./src/components/collection-list/collection-list-item.tsx","webpack:///./src/components/confirm-modal/confirm-modal.tsx","webpack:///./src/components/collection-dependencies-list/collection-dependencies-list.tsx","webpack:///./src/components/collection-dependencies-list/collection-usedby-dependencies-list.tsx","webpack:///./src/components/patternfly-wrappers/compound-filter.tsx","webpack:///./src/components/delete-modal/delete-modal.tsx","webpack:///./src/components/delete-modal/delete-execution-environment-modal.tsx","webpack:///./src/components/rbac/delete-group-modal.tsx","webpack:///./src/components/rbac/delete-user-modal.tsx","webpack:///./src/components/tags/deprecated-tag.tsx","webpack:///./src/components/empty-state/empty-state-custom.tsx","webpack:///./src/components/empty-state/empty-state-filter.tsx","webpack:///./src/components/empty-state/empty-state-no-data.tsx","webpack:///./src/components/empty-state/empty-state-unauthorized.tsx","webpack:///./src/components/execution-environment-header/execution-environment-header.tsx","webpack:///./src/components/rbac/group-modal.tsx","webpack:///./src/components/rbac/group-role-permissions.tsx","webpack:///./src/components/helper-text/helper-text.tsx","webpack:///./src/components/my-imports/import-console.tsx","webpack:///./src/components/my-imports/import-list.tsx","webpack:///./src/components/import-modal/import-modal.tsx","webpack:///./src/components/patternfly-wrappers/link-tabs.tsx","webpack:///./src/components/loading/loading-page-spinner.tsx","webpack:///./src/components/loading/loading-with-header.tsx","webpack:///./src/components/repositories/local-repository-table.tsx","webpack:///./src/components/shared/login-link.tsx","webpack:///./src/components/logo/logo.tsx","webpack:///./src/components/patternfly-wrappers/main.tsx","webpack:///./src/components/markdown-editor/markdown-editor.tsx","webpack:///./src/components/cards/namespace-card.tsx","webpack:///./src/components/namespace-form/namespace-form.tsx","webpack:///./src/components/namespace-modal/namespace-modal.tsx","webpack:///./src/components/numeric-label/numeric-label.tsx","webpack:///./src/components/rbac/owners-tab.tsx","webpack:///./src/components/patternfly-wrappers/pagination.tsx","webpack:///./src/components/headers/partner-header.tsx","webpack:///./src/components/rbac/permission-categories.tsx","webpack:///./src/components/rbac/permission-chip-selector.tsx","webpack:///./src/components/execution-environment/publish-to-controller-modal.tsx","webpack:///./src/components/render-plugin-doc/render-plugin-doc.tsx","webpack:///./src/components/repositories/remote-form.tsx","webpack:///./src/components/repositories/remote-repository-table.tsx","webpack:///./src/components/repo-selector/repo-selector.tsx","webpack:///./src/components/execution-environment/repository-form.tsx","webpack:///./src/components/rbac/role-form.tsx","webpack:///./src/components/namespace-form/resources-form.tsx","webpack:///./src/components/execution-environment/tag-manifest-modal.tsx","webpack:///./src/components/sha-label/sha-label.tsx","webpack:///./src/components/logo/small-logo.tsx","webpack:///./src/components/patternfly-wrappers/sort.tsx","webpack:///./src/components/sort-table/sort-table.tsx","webpack:///./src/components/patternfly-wrappers/stateful-dropdown.tsx","webpack:///./src/components/status/status-indicator.tsx","webpack:///./src/components/collection-detail/table-of-contents.tsx","webpack:///./src/components/patternfly-wrappers/tabs.tsx","webpack:///./src/components/tags/tag.tsx","webpack:///./src/components/patternfly-wrappers/tooltip.tsx","webpack:///./src/components/shared/ui-version.tsx","webpack:///./src/components/shared/data-form.tsx","webpack:///./src/components/rbac/user-form.tsx","webpack:///./src/components/rbac/user-form-page.tsx","webpack:///./src/components/rbac/role-list-table.tsx","webpack:///./src/components/patternfly-wrappers/write-only-field.tsx","webpack:///./src/components/patternfly-wrappers/clipboard-copy.tsx","webpack:///./src/components/patternfly-wrappers/fileupload.tsx","webpack:///./src/components/list-item-actions/list-item-actions.tsx","webpack:///./src/components/delete-modal/delete-collection-modal.tsx","webpack:///./src/components/patternfly-wrappers/wizard-modal.tsx","webpack:///./src/components/rbac/preview-roles.tsx","webpack:///./src/components/rbac/select-roles.tsx","webpack:///./src/components/rbac/select-group.tsx","webpack:///./src/components/legacy-role-list/legacy-role-item.tsx","webpack:///./src/components/legacy-namespace-list/legacy-namespace-item.tsx","webpack:///./src/constants.tsx","webpack:///./src/l10n.ts","webpack:///./src/loaders/insights/routes.tsx","webpack:///./src/loaders/insights/loader.tsx","webpack:///./src/loaders/load-context.ts","webpack:///./src/entry-insights.tsx","webpack:///./src/loaders/app-context.ts","webpack:///./src/paths.ts","webpack:///./src/utilities/chip-group-props.ts","webpack:///./src/utilities/content-summary.ts","webpack:///./src/utilities/sanitize-docs-urls.ts","webpack:///./src/utilities/map-error-messages.ts","webpack:///./src/utilities/get-repo-url.ts","webpack:///./src/utilities/write-only-fields.ts","webpack:///./src/utilities/filter-is-set.ts","webpack:///./src/utilities/truncate_sha.ts","webpack:///./src/utilities/has-permission.tsx","webpack:///./src/utilities/last-sync-task.tsx","webpack:///./src/utilities/wait-for-task.ts","webpack:///./src/utilities/fail-alerts.ts","webpack:///./src/utilities/validateURLHelper.ts","webpack:///./src/utilities/can-sign.tsx","webpack:///./src/utilities/delete-collection.tsx","webpack:///./src/utilities/translate-locked-roles-desc.ts","webpack:///./src/utilities/with-router.tsx","webpack:///./src/utilities/param-helper.tsx","webpack:///./src/utilities/parse-pulp-id.ts"],"sourcesContent":["var map = {\n\t\"./en.js\": [\n\t\t682,\n\t\t682\n\t],\n\t\"./es.js\": [\n\t\t35541,\n\t\t541\n\t],\n\t\"./fr.js\": [\n\t\t81870,\n\t\t870\n\t],\n\t\"./ja.js\": [\n\t\t27853,\n\t\t853\n\t],\n\t\"./ko.js\": [\n\t\t2620,\n\t\t620\n\t],\n\t\"./nl.js\": [\n\t\t96379,\n\t\t379\n\t],\n\t\"./zh.js\": [\n\t\t50415,\n\t\t415\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 77025;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\n\nexport class BaseAPI {\n  apiPath: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  http: any;\n\n  constructor(apiBaseUrl) {\n    this.http = axios.create({\n      baseURL: apiBaseUrl,\n      paramsSerializer: {\n        serialize: (params) => ParamHelper.getQueryString(params),\n      },\n    });\n\n    this.http.interceptors.request.use((request) => this.authHandler(request));\n  }\n\n  public mapPageToOffset(p) {\n    // Need to copy the object to make sure we aren't accidentally\n    // setting page state\n    const params = { ...p };\n\n    const pageSize =\n      parseInt(params['page_size']) || Constants.DEFAULT_PAGE_SIZE;\n    const page = parseInt(params['page']) || 1;\n\n    delete params['page'];\n    delete params['page_size'];\n\n    params['offset'] = page * pageSize - pageSize;\n    params['limit'] = pageSize;\n\n    return params;\n  }\n\n  list(params?: object, apiPath?: string) {\n    // The api uses offset/limit for pagination. I think this is confusing\n    // for params on the front end, so we're going to use page/page size\n    // for the URL params and just map it to whatever the api expects.\n\n    return this.http.get(this.getPath(apiPath), {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id + '/');\n  }\n\n  update(id: string | number, data, apiPath?: string) {\n    return this.http.put(this.getPath(apiPath) + id + '/', data);\n  }\n\n  create(data, apiPath?: string) {\n    return this.http.post(this.getPath(apiPath), data);\n  }\n\n  delete(id: string | number, apiPath?: string) {\n    return this.http.delete(this.getPath(apiPath) + id + '/');\n  }\n\n  patch(id: string | number, data, apiPath?: string) {\n    return this.http.patch(this.getPath(apiPath) + id + '/', data);\n  }\n\n  getPath(apiPath: string) {\n    return apiPath || this.apiPath;\n  }\n\n  private async authHandler(request) {\n    // This runs before every API request and ensures that the user is\n    // authenticated before the request is executed. On most calls it appears\n    // to only add ~10ms of latency.\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      await window.insights.chrome.auth.getUser();\n    }\n    if (DEPLOYMENT_MODE === Constants.STANDALONE_DEPLOYMENT_MODE) {\n      request.headers['X-CSRFToken'] = Cookies.get('csrftoken');\n    }\n    return request;\n  }\n}\n","import { BaseAPI } from './base';\n\nexport class HubAPI extends BaseAPI {\n  UI_API_VERSION = 'v1';\n\n  constructor() {\n    super(API_HOST + API_BASE_PATH);\n  }\n\n  // Use this function to get paths in the _ui API. That will ensure the API version\n  // gets updated when it changes\n  getUIPath(url: string) {\n    return `_ui/${this.UI_API_VERSION}/${url}`;\n  }\n}\n","import axios from 'axios';\nimport {\n  CollectionDetailType,\n  CollectionListType,\n  CollectionUploadType,\n} from 'src/api';\nimport { HubAPI } from './hub';\n\nfunction filterContents(contents) {\n  if (contents) {\n    return contents.filter(\n      (item) => !['doc_fragments', 'module_utils'].includes(item.content_type),\n    );\n  }\n\n  return contents;\n}\n\nfunction filterListItem(item: CollectionListType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nfunction filterDetailItem(item: CollectionDetailType) {\n  return {\n    ...item,\n    latest_version: {\n      ...item.latest_version,\n      contents: null, // deprecated\n      docs_blob: {\n        ...item.latest_version.docs_blob,\n        contents: filterContents(item.latest_version.docs_blob.contents),\n      },\n      metadata: {\n        ...item.latest_version.metadata,\n        contents: filterContents(item.latest_version.metadata.contents),\n      },\n    },\n  };\n}\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('repo/');\n  cachedCollection: CollectionDetailType;\n\n  list(params?, repo?: string) {\n    const path = this.apiPath + repo + '/';\n    return super.list(params, path).then((response) => ({\n      ...response,\n      data: {\n        ...response.data,\n        // remove module_utils, doc_fragments from each item\n        data: response.data.data.map(filterListItem),\n      },\n    }));\n  }\n\n  getPublishedCount(distributionPath: string) {\n    return this.http\n      .get(`v3/plugin/ansible/content/${distributionPath}/collections/index/`)\n      .then((result) => {\n        return result.data.meta.count;\n      });\n  }\n\n  getExcludesCount(distributionPath: string) {\n    return this.http\n      .get(`content/${distributionPath}/v3/excludes/`)\n      .then((result) => {\n        return result.data;\n      });\n  }\n\n  setDeprecation(\n    collection: CollectionListType,\n    isDeprecated: boolean,\n    repo: string,\n  ) {\n    const path = `v3/plugin/ansible/content/${repo}/collections/index/`;\n\n    return this.patch(\n      `${collection.namespace.name}/${collection.name}`,\n      {\n        deprecated: isDeprecated,\n      },\n      path,\n    );\n  }\n\n  upload(\n    repositoryPath: string,\n    data: CollectionUploadType,\n    progressCallback: (e) => void,\n    cancelToken?,\n  ) {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    // formData.append('sha256', artifact.sha256);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: progressCallback,\n    };\n\n    if (cancelToken) {\n      config['cancelToken'] = cancelToken.token;\n    }\n    return this.http.post(\n      'content/' + repositoryPath + '/v3/artifacts/collections/',\n      formData,\n      config,\n    );\n  }\n\n  getCancelToken() {\n    return axios.CancelToken.source();\n  }\n\n  // Caches the last collection returned from the server. If the requested\n  // collection matches the cache, return it, if it doesn't query the API\n  // for the collection and replace the old cache with the new value.\n  // This allows the collection page to be broken into separate components\n  // and routed separately without fetching redundant data from the API\n  getCached(\n    namespace,\n    name,\n    repo,\n    params?,\n    forceReload?: boolean,\n  ): Promise<CollectionDetailType> {\n    if (\n      !forceReload &&\n      this.cachedCollection &&\n      this.cachedCollection.name === name &&\n      this.cachedCollection.namespace.name === namespace\n    ) {\n      return Promise.resolve(this.cachedCollection);\n    }\n\n    const path = `${this.apiPath}${repo}/${namespace}/${name}/`;\n    return this.http\n      .get(path, {\n        params: params,\n      })\n      .then((result) => {\n        // remove module_utils, doc_fragments from item\n        const item = filterDetailItem(result.data);\n        this.cachedCollection = item;\n        return item;\n      });\n  }\n\n  getDownloadURL(distro_base_path, namespace, name, version) {\n    // UI API doesn't have tarball download link, so query it separately here\n    return new Promise((resolve, reject) => {\n      this.http\n        .get(\n          `v3/plugin/ansible/content/${distro_base_path}/collections/index/${namespace}/${name}/versions/${version}/`,\n        )\n        .then((result) => {\n          resolve(result.data['download_url']);\n        })\n        .catch((err) => reject(err));\n    });\n  }\n\n  deleteCollectionVersion(repo, collection) {\n    return this.http.delete(\n      `v3/plugin/ansible/content/${repo}/collections/index/${collection.namespace.name}/${collection.name}/versions/${collection.latest_version.version}/`,\n    );\n  }\n\n  deleteCollection(repo, collection) {\n    return this.http.delete(\n      `v3/plugin/ansible/content/${repo}/collections/index/${collection.namespace.name}/${collection.name}/`,\n    );\n  }\n\n  getUsedDependenciesByCollection(\n    namespace,\n    collection,\n    params = {},\n    cancelToken = undefined,\n  ) {\n    return this.http.get(\n      this.getUIPath(\n        `collection-versions/?dependency=${namespace}.${collection}`,\n      ),\n      { params: this.mapPageToOffset(params), cancelToken: cancelToken?.token },\n    );\n  }\n}\n\nexport const CollectionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const NamespaceAPI = new API();\n","export enum PulpStatus {\n  waiting = 'waiting',\n  skipped = 'skipped',\n  running = 'running',\n  completed = 'completed',\n  failed = 'failed',\n  canceled = 'canceled',\n}\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('imports/collections/');\n\n  get(id, path?) {\n    // call this to generate more task messages\n    // this.mock.updateImportDetail();\n    return super.get(id, path);\n  }\n}\n\nexport const ImportAPI = new API();\n","import { Constants } from 'src/constants';\nimport { HubAPI } from './hub';\nimport { UserType } from './response-types/user';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('me/');\n\n  getUser(): Promise<UserType> {\n    return this.http.get(this.apiPath).then((result) => result.data);\n  }\n\n  saveUser(data) {\n    return this.http.put(this.apiPath, data);\n  }\n\n  // insights has some asinine way of loading tokens that involves forcing the\n  // page to refresh before loading the token that can't be done witha single\n  // API request.\n  getToken(): Promise<{ data: { token: string } }> {\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      return Promise.reject(\n        'Use window.insights.chrome.auth to get tokens for insights deployments',\n      );\n    }\n\n    return this.http.post('v3/auth/token/', {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  logout() {\n    return this.http.post(this.getUIPath('auth/logout/'), {});\n  }\n\n  // Note: This does not reset the app's authentication state. That has to be done\n  // separately by setting the user state in the app's root component\n  login(username, password) {\n    const loginURL = this.getUIPath('auth/login/');\n\n    // Make a get request to the login endpoint to set CSRF tokens before making\n    // the authentication reqest\n    return this.http.get(loginURL).then(() =>\n      this.http.post(loginURL, {\n        username,\n        password,\n      }),\n    );\n  }\n}\n\nexport const ActiveUserAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('collection-versions/');\n\n  setRepository(\n    namespace: string,\n    name: string,\n    version: string,\n    originalRepo: string,\n    destinationRepo: string,\n  ) {\n    const path = `v3/collections/${namespace}/${name}/versions/${version}/move/${originalRepo}/${destinationRepo}/`;\n    return this.create({}, path);\n  }\n}\n\nexport const CollectionVersionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-namespaces/');\n\n  get(id: string, params = {}) {\n    return this.http.get(this.apiPath + id + '/', { params });\n  }\n}\n\nexport const MyNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('users/');\n}\n\nexport const UserAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-synclists/');\n\n  curate(id) {\n    return this.http.post(this.apiPath + id + '/curate/', {});\n  }\n}\n\nexport const MySyncListAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = 'v3/tasks/';\n}\n\nexport const TaskAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('groups/');\n}\n\nexport const GroupAPI = new API();\n","import { BaseAPI } from './base';\n\nexport class PulpAPI extends BaseAPI {\n  useOrdering = false; // translate ?sort into ?ordering in list()\n\n  constructor() {\n    super(API_HOST + PULP_API_BASE_PATH);\n  }\n\n  list(params?, apiPath?) {\n    const changedParams = { ...params };\n    if (this.useOrdering && changedParams['sort']) {\n      changedParams['ordering'] = changedParams['sort'];\n      delete changedParams['sort'];\n    }\n    return super.list(changedParams, apiPath);\n  }\n}\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'roles/';\n  useOrdering = true;\n\n  updatePermissions(id, data: unknown) {\n    return this.http.patch(this.apiPath + id, data);\n  }\n\n  // create(data)\n  // get(params?)\n\n  list(params?, for_object_type?) {\n    const newParams = { ...params };\n    if (for_object_type) {\n      // ?for_object_type=/api/automation-hub/pulp/api/v3/.../\n      // list visible in http://localhost:8002/api/automation-hub/pulp/api/v3/\n      newParams.for_object_type = PULP_API_BASE_PATH + for_object_type + '/';\n    }\n    return super.list(newParams);\n  }\n\n  getPermissions(id) {\n    return this.http.get(\n      this.apiPath + id + '/model-permissions/?limit=100000&offset=0',\n    );\n  }\n\n  addPermission(id, data) {\n    return this.http.post(this.apiPath + id + '/model-permissions/', data);\n  }\n\n  removePermission(id, permissionId) {\n    return this.http.delete(\n      this.apiPath + id + '/model-permissions/' + permissionId + '/',\n    );\n  }\n}\n\nexport const RoleAPI = new API();\n","import { clearSetFieldsFromRequest } from 'src/utilities';\nimport { RemoteType } from '.';\nimport { HubAPI } from './hub';\n\n// removes unchanged values and write only fields before updating\nexport function smartUpdate(remote: RemoteType, unmodifiedRemote: RemoteType) {\n  // Deletes any write only fields from the object that are market as is_set.\n  // This is to prevent accidentally clearing fields that weren't updated.\n\n  // TODO: clearing set fields from the response will be unnecesary if the API\n  // stops returning field: null on write only fields\n  const reducedData: RemoteType = clearSetFieldsFromRequest(\n    remote,\n    remote.write_only_fields,\n  ) as RemoteType;\n\n  // Pulp complains if auth_url gets sent with a request that doesn't include a\n  // valid token, even if the token exists in the database and isn't being changed.\n  // To solve this issue, simply delete auth_url from the request if it hasn't\n  // been updated by the user.\n  if (reducedData.auth_url === unmodifiedRemote.auth_url) {\n    delete reducedData['auth_url'];\n  }\n\n  for (const field of Object.keys(reducedData)) {\n    if (reducedData[field] === '') {\n      reducedData[field] = null;\n    }\n  }\n\n  return reducedData;\n}\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('remotes/');\n\n  // can't override the base class update method because this function takes a\n  // third parameter and update only takes 2\n  smartUpdate(distribution, remote: RemoteType, unmodifiedRemote: RemoteType) {\n    const reducedData = smartUpdate(remote, unmodifiedRemote);\n    return this.http.put(\n      `content/${distribution}/v3/sync/config/`,\n      reducedData,\n    );\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  sync(distribution) {\n    return this.http.post(`content/${distribution}/v3/sync/`, {});\n  }\n}\n\nexport const RemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = '';\n\n  get() {\n    return super.get('');\n  }\n}\n\nexport const ApplicationInfoAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('distributions/');\n}\n\nexport const DistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('my-distributions/');\n}\n\nexport const MyDistributionAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n  readme(name) {\n    return this.http.get(this.apiPath + name + '/_content/readme/');\n  }\n\n  saveReadme(name, readme) {\n    return this.http.put(this.apiPath + name + '/_content/readme/', readme);\n  }\n\n  images(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/images/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  image(name, digest) {\n    return this.http.get(`${this.apiPath}${name}/_content/images/${digest}/`);\n  }\n\n  tags(name, params) {\n    return this.http.get(this.apiPath + name + '/_content/tags/', {\n      params: this.mapPageToOffset(params),\n    });\n  }\n\n  deleteImage(name, manifest) {\n    return this.http.delete(\n      `${this.apiPath}${name}/_content/images/${manifest}/`,\n    );\n  }\n\n  deleteExecutionEnvironment(name) {\n    return this.http.delete(`${this.apiPath}${name}/`);\n  }\n}\n\nexport const ExecutionEnvironmentAPI = new API();\n","import { RemoteType } from '.';\nimport { HubAPI } from './hub';\nimport { smartUpdate } from './remotes';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/registries/');\n\n  // list(params?)\n  // create(data)\n  // get(name)\n  // delete(name)\n\n  smartUpdate(pk, newValue: RemoteType, oldValue: RemoteType) {\n    const reducedData = smartUpdate(newValue, oldValue);\n    return super.update(pk, reducedData);\n  }\n\n  update(_id, _obj) {\n    throw 'use smartUpdate()';\n  }\n\n  index(id) {\n    return this.http.post(this.apiPath + id + '/index/', {});\n  }\n\n  sync(id) {\n    return this.http.post(this.apiPath + id + '/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRegistryAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('execution-environments/remotes/');\n\n  // list(params?)\n  // create(data)\n  // get(pk)\n  // update(pk, data)\n\n  sync(name) {\n    const apiPath = 'v3/plugin/execution-environments/repositories/';\n    return this.http.post(apiPath + name + '/_content/sync/', {});\n  }\n}\n\nexport const ExecutionEnvironmentRemoteAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = 'v3/plugin/execution-environments/repositories/';\n\n  list(id, page) {\n    return super.list({ page: page }, this.apiPath + id + '/_content/history/');\n  }\n}\n\nexport const ActivitiesAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'repositories/container/container-push/';\n\n  tag(repositoryID: string, tag: string, digest: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/tag/`, {\n      digest: digest,\n      tag: tag,\n    });\n  }\n\n  untag(repositoryID: string, tag: string) {\n    return this.http.post(`${this.apiPath}${repositoryID}/untag/`, {\n      tag: tag,\n    });\n  }\n}\n\nexport const ContainerTagAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('feature-flags/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const FeatureFlagsAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'distributions/container/container/';\n\n  // patch(id, data)\n}\n\nexport const ContainerDistributionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'pulp_container/namespaces/';\n\n  listRoles(id, params?) {\n    return super.list(params, this.apiPath + id + '/list_roles/');\n  }\n\n  addRole(id, role) {\n    return super.create(role, this.apiPath + id + '/add_role/');\n  }\n\n  myPermissions(id, params?) {\n    return super.list(params, this.apiPath + id + '/my_permissions/');\n  }\n\n  removeRole(id, role) {\n    return super.create(role, this.apiPath + id + '/remove_role/');\n  }\n}\n\nexport const ExecutionEnvironmentNamespaceAPI = new API();\n","import { HubAPI } from './hub';\n\nexport class API extends HubAPI {\n  apiPath = this.getUIPath('controllers/');\n\n  // list(params?)\n}\n\nexport const ControllerAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = 'tasks/';\n  useOrdering = true;\n\n  // get(id)\n  // list(params)\n  // patch(id, data)\n}\n\nexport const TaskManagementAPI = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  apiPath = 'groups/';\n  useOrdering = true;\n\n  listRoles(groupId, params?) {\n    return super.list(params, `${this.apiPath}${groupId}/roles/`);\n  }\n\n  removeRole(groupId, roleId) {\n    return this.http.delete(`${this.apiPath}${groupId}/roles/${roleId}/`);\n  }\n\n  addRoleToGroup(groupId, role) {\n    return this.http.post(`${this.apiPath}${groupId}/roles/`, {\n      role: role.name,\n      // required field, can be empty\n      content_object: null,\n    });\n  }\n}\n\nexport const GroupRoleAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class API extends PulpAPI {\n  apiPath = '';\n\n  get(id: string, apiPath?: string) {\n    return this.http.get(this.getPath(apiPath) + id);\n  }\n}\n\nexport const GenericPulpAPI = new API();\n","import { HubAPI } from './hub';\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('settings/');\n\n  get() {\n    return this.http.get(this.apiPath);\n  }\n}\n\nexport const SettingsAPI = new API();\n","import { HubAPI } from './hub';\n\ninterface SignNamespace {\n  signing_service?: string;\n  distro_base_path?: string;\n  namespace: string;\n}\n\ninterface SignCollection extends SignNamespace {\n  collection?: string;\n}\n\ninterface SignVersion extends SignCollection {\n  version?: string;\n}\n\ntype SignProps = SignNamespace | SignCollection | SignVersion;\n\nclass API extends HubAPI {\n  apiPath = this.getUIPath('collection_signing/');\n\n  sign(data: SignProps) {\n    return this.http.post(this.apiPath, data);\n  }\n}\n\nexport const SignCollectionAPI = new API();\n","import { PulpAPI } from './pulp';\n\nexport class SigningServiceType {\n  name: string;\n  pubkey_fingerprint: string;\n  public_key: string;\n  pulp_created: string;\n  pulp_href: string;\n  script: string;\n}\n\nexport class API extends PulpAPI {\n  apiPath = 'signing-services/';\n\n  // list(params?)\n}\n\nexport const SigningServiceAPI = new API();\n","import { PulpAPI } from './pulp';\n\ninterface UploadProps {\n  file: File;\n  // Takes pulp_href for repository\n  repository: string;\n  // Takes pulp_href for collection\n  signed_collection: string;\n}\n\nclass API extends PulpAPI {\n  apiPath = 'content/ansible/collection_signatures/';\n\n  // Returns /api/automation-hub/pulp/api/v3/tasks/0be64cb4-3b7e-4a6b-b35d-c3b589923a90/\n  upload(data: UploadProps): Promise<{ data: { task: string } }> {\n    const formData = new FormData();\n    formData.append('file', data.file);\n    formData.append('repository', data.repository);\n    formData.append('signed_collection', data.signed_collection);\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n    return this.http.post(this.apiPath, formData, config);\n  }\n}\n\nexport const CertificateUploadAPI = new API();\n","import { PulpAPI } from './pulp';\nimport { Repository } from './response-types/repositories';\n\ninterface GetRepository {\n  name: string;\n}\n\ninterface ReturnRepository {\n  data: {\n    count: number;\n    next: string;\n    previous: string;\n    results: Repository[];\n  };\n}\n\nclass API extends PulpAPI {\n  apiPath = '/repositories/ansible/ansible/';\n\n  getRepository(data: GetRepository): Promise<ReturnRepository> {\n    return this.http.get(`${this.apiPath}?name=${data.name}`);\n  }\n}\n\nexport const Repositories = new API();\n","import { PulpAPI } from './pulp';\n\nclass API extends PulpAPI {\n  public getSigningService(serviceName: string) {\n    return this.http.get(`/signing-services/?name=${serviceName}`);\n  }\n\n  public sign(\n    containerId: string,\n    pulp_type: string,\n    signServicePath: string,\n    base_path: string,\n  ) {\n    const postObj = { manifest_signing_service: signServicePath };\n    if (pulp_type == 'container') {\n      postObj['future_base_path'] = base_path;\n    }\n\n    return this.http.post(\n      `/repositories/container/${pulp_type}/${containerId}/sign/`,\n      postObj,\n    );\n  }\n}\n\nexport const SignContainersAPI = new API();\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  results: { name: string; id: number | string }[];\n  loadResults: (filter: string) => void;\n  onSelect: (event, selection, isPlaceholder) => void;\n\n  selections?: { name: string; id: number | string }[];\n  multiple?: boolean;\n  placeholderText?: string;\n  onClear?: () => void;\n\n  isDisabled?: boolean;\n  endLink?: {\n    href: string;\n    name: string;\n  };\n  menuAppendTo?: 'parent' | 'inline';\n  toggleIcon?: React.ReactElement;\n  style?: React.CSSProperties;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class APISearchTypeAhead extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    let selected = null;\n    if (this.props.selections) {\n      selected = this.props.selections.map((group) => group.name);\n    }\n\n    const { isOpen } = this.state;\n    const variant = this.props.multiple\n      ? SelectVariant.typeaheadMulti\n      : SelectVariant.typeahead;\n\n    return (\n      <Select\n        menuAppendTo={this.props.menuAppendTo}\n        onClear={this.onClear}\n        onSelect={this.onSelect}\n        onToggle={this.onToggle}\n        variant={variant}\n        selections={selected}\n        isOpen={isOpen}\n        hasInlineFilter\n        onFilter={this.onFilter}\n        placeholderText={this.props.placeholderText}\n        isDisabled={this.props.isDisabled}\n        toggleIcon={this.props.toggleIcon}\n        style={this.props.style}\n        chipGroupProps={chipGroupProps()}\n      >\n        {this.getOptions()}\n      </Select>\n    );\n  }\n\n  private onClear = () => {\n    this.props.loadResults('');\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  };\n\n  private getOptions() {\n    const options = [];\n\n    for (const option of this.props.results) {\n      options.push(<SelectOption key={option.id} value={option.name} />);\n    }\n\n    if (options.length === 0) {\n      options.push(\n        <SelectOption\n          key={'not_found'}\n          value={t`Not found`}\n          isDisabled={true}\n        />,\n      );\n    }\n\n    return options;\n  }\n\n  private onFilter = (evt) => {\n    if (evt !== null) {\n      const textInput = evt.target.value;\n      this.props.loadResults(textInput);\n    }\n    return this.getOptions();\n  };\n\n  private onToggle = (isOpen) => {\n    this.setState({\n      isOpen,\n    });\n  };\n\n  private onSelect = (event, selection, isPlaceholder) => {\n    this.props.onSelect(event, selection, isPlaceholder);\n\n    if (!this.props.multiple) {\n      this.setState(\n        {\n          isOpen: false,\n        },\n        () => this.props.loadResults(''),\n      );\n    }\n  };\n}\n","import {\n  Alert,\n  AlertActionCloseButton,\n  AlertProps,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  /** List of alerts to display */\n  alerts: AlertType[];\n\n  /** Callback to close the alert at the given index */\n  closeAlert: (alertIndex) => void;\n}\n\nexport class AlertType {\n  id?: string;\n  variant: AlertProps['variant'];\n  title: string | JSX.Element;\n  description?: string | JSX.Element;\n}\n\nexport const AlertList = ({ alerts, closeAlert }: IProps) => (\n  <div\n    style={{\n      position: 'fixed',\n      right: '5px',\n      top: '80px',\n      zIndex: 300,\n      display: 'flex',\n      flexDirection: 'column',\n    }}\n    data-cy='AlertList'\n  >\n    {alerts.map((alert, i) => (\n      <Alert\n        style={{ marginBottom: '16px' }}\n        key={i}\n        title={alert.title}\n        variant={alert.variant}\n        actionClose={<AlertActionCloseButton onClose={() => closeAlert(i)} />}\n      >\n        {alert.description}\n      </Alert>\n    ))}\n  </div>\n);\n\nexport function closeAlert(alertIndex, { alerts, setAlerts }) {\n  const newList = [...alerts];\n  newList.splice(alertIndex, 1);\n  setAlerts(newList);\n}\n\nexport function closeAlertMixin(alertStateVariable) {\n  return function (alertIndex) {\n    closeAlert(alertIndex, {\n      alerts: this.state[alertStateVariable],\n      setAlerts: (newList) => this.setState({ [alertStateVariable]: newList }),\n    });\n  };\n}\n","import { t } from '@lingui/macro';\nimport { Button, Chip, ChipGroup } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper, chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  /** Sets the current page params to p */\n  updateParams: (p) => void;\n\n  /** Current page params */\n  params: object;\n\n  /** A list of params that shouldn't get displayed */\n  ignoredParams?: string[];\n\n  /**\n   * If k from param[k] is in nice names, use niceNames[k] instead of k\n   * when displaying the param field name\n   */\n  niceNames?: object;\n  niceValues?: object;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport const AppliedFilters = ({\n  className,\n  ignoredParams = [],\n  niceNames = {},\n  niceValues,\n  params,\n  style,\n  updateParams,\n}: IProps) => {\n  const filters = Object.keys(ParamHelper.getReduced(params, ignoredParams));\n  if (!filters.length) {\n    return null;\n  }\n\n  const renderGroup = (key) => {\n    const chips = Array.isArray(params[key]) ? params[key] : [params[key]];\n\n    const unsetFilter = (v) =>\n      updateParams({\n        ...ParamHelper.deleteParam(params, key, v),\n        page: 1,\n      });\n\n    return (\n      <div style={{ display: 'inline', marginRight: '8px' }} key={key}>\n        <ChipGroup categoryName={niceNames[key] || key} {...chipGroupProps()}>\n          {chips.map((v, i) => (\n            <Chip key={i} onClick={() => unsetFilter(v)}>\n              {niceValues?.[key]?.[v] || v}\n            </Chip>\n          ))}\n        </ChipGroup>\n      </div>\n    );\n  };\n\n  return (\n    <div className={className} style={style}>\n      {filters.map((key) => renderGroup(key))}\n      <Button\n        onClick={() =>\n          ParamHelper.clearAllFilters({ params, ignoredParams, updateParams })\n        }\n        variant='link'\n      >\n        {t`Clear all filters`}\n      </Button>\n    </div>\n  );\n};\n","import { Title } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { Constants } from 'src/constants';\nimport './header.scss';\n\ninterface IProps {\n  title: string;\n  logo?: React.ReactNode;\n  breadcrumbs?: React.ReactNode;\n  pageControls?: React.ReactNode;\n  children?: React.ReactNode;\n  className?: string;\n  contextSelector?: React.ReactNode;\n  versionControl?: React.ReactNode;\n  status?: React.ReactNode;\n}\n\nexport class BaseHeader extends React.Component<IProps> {\n  render() {\n    const {\n      title,\n      logo,\n      pageControls,\n      children,\n      breadcrumbs,\n      className,\n      contextSelector,\n      versionControl,\n      status,\n    } = this.props;\n\n    const showRepoSelector =\n      contextSelector && DEPLOYMENT_MODE !== Constants.INSIGHTS_DEPLOYMENT_MODE;\n\n    return (\n      <div className={cx('background', className)}>\n        {showRepoSelector && (\n          <div className='breadcrumb-container'>{contextSelector}</div>\n        )}\n        {breadcrumbs && (\n          <div className='breadcrumb-container'>{breadcrumbs}</div>\n        )}\n        {!breadcrumbs && !showRepoSelector && <div className='placeholder' />}\n\n        <div className='column-section'>\n          <div className='title-box'>\n            {logo}\n            <div>\n              <Title headingLevel='h1' size='2xl'>\n                {title}\n                {status}\n              </Title>\n            </div>\n          </div>\n          {pageControls ? (\n            <div className='header-right'>{pageControls}</div>\n          ) : null}\n        </div>\n        {versionControl ? <>{versionControl}</> : null}\n\n        {children ? (\n          <div className='header-bottom'>{children}</div>\n        ) : (\n          <div className='placeholder' />\n        )}\n      </div>\n    );\n  }\n}\n","import { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class BreadcrumbType {\n  name: string;\n  url?: string;\n}\n\ninterface IProps {\n  /** List of links to display in the breadcrumb */\n  links: BreadcrumbType[];\n}\n\nexport const Breadcrumbs = ({ links }: IProps) => (\n  <Breadcrumb>\n    {links.map((link, index) => (\n      <BreadcrumbItem key={index} isActive={index + 1 === links.length}>\n        {link.url ? <Link to={link.url}>{link.name}</Link> : link.name}\n      </BreadcrumbItem>\n    ))}\n  </Breadcrumb>\n);\n","import { ListIcon, ThLargeIcon } from '@patternfly/react-icons';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './switcher.scss';\n\ninterface IProps {\n  params: {\n    view_type?: string;\n  };\n  updateParams: (params) => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  className?: string;\n}\n\nexport const CardListSwitcher: React.FunctionComponent<IProps> = ({\n  params,\n  updateParams,\n  size = 'sm',\n  className,\n}) => {\n  let disp = params.view_type;\n\n  if (!disp) {\n    disp = 'card';\n  }\n\n  const iconClasses = ['icon', 'clickable'];\n\n  return (\n    <div className={className}>\n      <span data-cy='view_type_card'>\n        <ThLargeIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'card' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'card'))\n          }\n        />\n      </span>\n      <span data-cy='view_type_list'>\n        <ListIcon\n          size={size}\n          className={cx(iconClasses, { selected: disp === 'list' })}\n          onClick={() =>\n            updateParams(ParamHelper.setParam(params, 'view_type', 'list'))\n          }\n        />\n      </span>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Badge,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Text,\n  TextContent,\n  TextVariants,\n  Tooltip,\n} from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionListType } from 'src/api';\nimport { CollectionNumericLabel, Logo, SignatureBadge } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport { convertContentSummaryCounts } from 'src/utilities';\n\ninterface IProps extends CollectionListType {\n  className?: string;\n  displaySignatures: boolean;\n  footer?: React.ReactNode;\n  repo?: string;\n  menu?: React.ReactNode;\n}\n\nexport const CollectionCard = ({\n  name,\n  latest_version,\n  namespace,\n  className,\n  displaySignatures,\n  footer,\n  repo,\n  sign_state,\n  menu,\n}: IProps) => {\n  const MAX_DESCRIPTION_LENGTH = 60;\n\n  const company = namespace.company || namespace.name;\n  const contentSummary = convertContentSummaryCounts(latest_version.metadata);\n\n  return (\n    <Card className={cx('hub-c-card-collection-container ', className)}>\n      <CardHeader className='logo-row'>\n        <Logo\n          alt={t`${company} logo`}\n          fallbackToDefault\n          image={namespace.avatar_url}\n          size='40px'\n          unlockWidth\n          flexGrow\n        />\n        <TextContent>{getCertification(repo)}</TextContent>\n        {displaySignatures ? (\n          <SignatureBadge isCompact signState={sign_state} />\n        ) : null}\n        {menu}\n      </CardHeader>\n      <CardHeader>\n        <div className='name'>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: name,\n              namespace: namespace.name,\n              repo: repo,\n            })}\n          >\n            {name}\n          </Link>\n        </div>\n        <div className='author'>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>Provided by {company}</Trans>\n            </Text>\n          </TextContent>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <Tooltip content={<div>{latest_version.metadata.description}</div>}>\n          <div className='description'>\n            {getDescription(\n              latest_version.metadata.description,\n              MAX_DESCRIPTION_LENGTH,\n            )}\n          </div>\n        </Tooltip>\n      </CardBody>\n      <CardBody className='type-container'>\n        {Object.keys(contentSummary.contents).map((k) =>\n          renderTypeCount(k, contentSummary.contents[k]),\n        )}\n      </CardBody>\n      {footer && <CardFooter>{footer}</CardFooter>}\n    </Card>\n  );\n};\n\nfunction getCertification(repo) {\n  if (repo === Constants.CERTIFIED_REPO) {\n    return (\n      <Text component={TextVariants.small}>\n        <Badge isRead>{t`Certified`}</Badge>\n      </Text>\n    );\n  }\n\n  return null;\n}\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n\nfunction renderTypeCount(type, count) {\n  return (\n    <div key={type}>\n      <CollectionNumericLabel count={count} newline type={type} />\n    </div>\n  );\n}\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ContentSummaryType } from 'src/api';\nimport { EmptyStateCustom } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './collection-content-list.scss';\n\ninterface IProps {\n  contents: ContentSummaryType[];\n  collection: string;\n  namespace: string;\n  params: {\n    keywords?: string;\n    showing?: string;\n  };\n  updateParams: (p) => void;\n}\n\nexport const CollectionContentList = ({\n  contents,\n  collection,\n  namespace,\n  params,\n  updateParams,\n}: IProps) => {\n  const ignoredParams = ['keywords', 'showing'];\n  const context = useContext();\n\n  const toShow: ContentSummaryType[] = [];\n  const summary = { all: 0 };\n  const showing = params.showing || 'all';\n  const keywords = params.keywords || '';\n\n  for (const c of contents) {\n    summary[c.content_type] ||= 0;\n\n    const keywordMatch = c.name.match(keywords);\n    const typeMatch = showing === 'all' ? true : c.content_type === showing;\n\n    // count only items matching keyword\n    if (keywordMatch) {\n      summary[c.content_type]++;\n      summary['all']++;\n    }\n\n    // show only items matching keyword + type\n    if (keywordMatch && typeMatch) {\n      toShow.push(c);\n    }\n  }\n\n  return (\n    <div>\n      <div>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.keywords || ''}\n                onChange={(_e, val) =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', val))\n                }\n                onClear={() =>\n                  updateParams(ParamHelper.setParam(params, 'keywords', ''))\n                }\n                aria-label={t`find-content`}\n                placeholder={t`Find content`}\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n          <ToolbarGroup>\n            <ToolbarItem>{t`Showing:`}</ToolbarItem>\n            {Object.keys(summary).map((key) => (\n              <ToolbarItem\n                key={key}\n                className={cx({\n                  clickable: true,\n                  'hub-c-toolbar__item-selected-item': key === showing,\n                  'hub-c-toolbar__item-type-selector': true,\n                })}\n                onClick={() =>\n                  updateParams(ParamHelper.setParam(params, 'showing', key))\n                }\n              >\n                {key} ({summary[key]})\n              </ToolbarItem>\n            ))}\n          </ToolbarGroup>\n        </Toolbar>\n      </div>\n      <table className='hub-c-table-content pf-c-table pf-m-compact'>\n        <thead>\n          <tr>\n            <th>{t`Name`}</th>\n            <th>{t`Type`}</th>\n            <th>{t`Description`}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {toShow.map((content, i) => (\n            <tr key={i}>\n              <td>\n                <Link\n                  to={formatPath(\n                    Paths.collectionContentDocsByRepo,\n                    {\n                      collection: collection,\n                      namespace: namespace,\n                      type: content.content_type,\n                      name: content.name,\n                      repo: context.selectedRepo,\n                    },\n                    ParamHelper.getReduced(params, ignoredParams),\n                  )}\n                >\n                  {content.name}\n                </Link>\n              </td>\n              <td>{content.content_type}</td>\n              <td>{content.description}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {summary.all <= 0 &&\n        context.selectedRepo === 'community' &&\n        renderCommunityWarningMessage()}\n    </div>\n  );\n};\n\nfunction renderCommunityWarningMessage() {\n  return (\n    <EmptyStateCustom\n      title={t`Warning`}\n      description={t`Community collections do not have docs nor content counts, but all content gets synchronized`}\n      icon={ExclamationTriangleIcon}\n    />\n  );\n}\n","import { t } from '@lingui/macro';\nimport { Spinner } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { CollectionAPI, CollectionExcludesType } from 'src/api';\nimport { AlertType } from 'src/components';\nimport { errorMessage } from 'src/utilities';\n\ninterface IProps {\n  distributionPath: string;\n}\n\nexport const CollectionCount = ({ distributionPath }: IProps) => {\n  const [collectionCount, setCollectionCount] = useState(null);\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  const getCollectionCount = (repo) => {\n    const promises = [];\n    promises.push(\n      CollectionAPI.getPublishedCount(repo).then((count) => {\n        return count;\n      }),\n    );\n    promises.push(\n      CollectionAPI.getExcludesCount(repo).then(\n        (results: CollectionExcludesType) => {\n          const excludedCollections = results.collections;\n          const count = excludedCollections.length;\n          return count;\n        },\n      ),\n    );\n\n    Promise.all(promises)\n      .then((results) => {\n        const count = results[0] - results[1];\n        setCollectionCount(count);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setLoading(false);\n        const { status, statusText } = err.response;\n        addAlert(\n          t`Collection count for \"${distributionPath}\" could not be displayed.`,\n          'danger',\n          errorMessage(status, statusText),\n          setAlerts,\n          alerts,\n        );\n      });\n  };\n\n  useEffect(() => {\n    getCollectionCount(distributionPath);\n  }, []);\n\n  return !loading ? <>{collectionCount}</> : <Spinner size='sm' />;\n};\n\nfunction addAlert(title, variant, description, setAlerts, alerts) {\n  setAlerts([\n    ...alerts,\n    {\n      description,\n      title,\n      variant,\n    },\n  ]);\n}\n","import * as moment from 'moment';\nimport * as React from 'react';\nimport { Tooltip } from 'src/components';\n\ninterface IProps {\n  date: string;\n}\n\nexport class DateComponent extends React.Component<IProps> {\n  render() {\n    const { date } = this.props;\n\n    return (\n      date && (\n        <Tooltip content={moment(date).format('DD MMMM YYYY, HH:mm Z')}>\n          {moment(date).fromNow()}\n        </Tooltip>\n      )\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  version: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignSingleCertificateModal: React.FC<Props> = ({\n  name,\n  version,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => (\n  <Modal\n    variant={ModalVariant.medium}\n    title={t`Sign version ${version}`}\n    isOpen={isOpen}\n    onClose={onCancel}\n    actions={[\n      <Button\n        key='sign'\n        data-cy='modal-sign-button'\n        variant={ButtonVariant.primary}\n        onClick={onSubmit}\n      >\n        {t`Sign`}\n      </Button>,\n      <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n        {t`Cancel`}\n      </Button>,\n    ]}\n  >\n    <p>\n      <Trans>\n        You are about to sign <strong>version {version}</strong> under{' '}\n        <strong>{name}</strong>.\n      </Trans>\n    </p>\n  </Modal>\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  Form,\n  FormGroup,\n  FormSelect,\n  FormSelectOption,\n  Grid,\n  GridItem,\n  Modal,\n  ModalVariant,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  name: string;\n  isOpen: boolean;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const SignAllCertificatesModal: React.FC<Props> = ({\n  name,\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Sign all collections`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='sign-all'\n          data-cy='modal-sign-button'\n          variant={ButtonVariant.primary}\n          onClick={onSubmit}\n        >\n          {t`Sign all`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <p>\n            <Trans>\n              You are about to sign <strong>all versions</strong> under{' '}\n              <strong>{name}</strong>.\n            </Trans>\n          </p>\n        </GridItem>\n        <GridItem span={12}>\n          <Split hasGutter>\n            <SplitItem>\n              <Trans>Signed version(s)</Trans>\n            </SplitItem>\n            <SplitItem></SplitItem>\n            <SplitItem>\n              <Trans>Unsigned version(s)</Trans>\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <GridItem span={12}>\n          <Form>\n            <FormGroup\n              fieldId='service-selector'\n              label={t`Signing service selector:`}\n            >\n              <FormSelect value='ansible-default' id='service-selector'>\n                <FormSelectOption\n                  value='ansible-default'\n                  label='ansible-default'\n                />\n              </FormSelect>\n            </FormGroup>\n          </Form>\n        </GridItem>\n      </Grid>\n    </Modal>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport React, { FC } from 'react';\n\ninterface Props extends LabelProps {\n  signState: 'signed' | 'unsigned';\n}\n\nexport const SignatureBadge: FC<Props> = ({\n  signState = 'unsigned',\n  isCompact = false,\n  ...props\n}) => {\n  const text = () => {\n    switch (signState) {\n      case 'signed':\n        return t`Signed`;\n      case 'unsigned':\n        return t`Unsigned`;\n    }\n  };\n\n  return (\n    <Label\n      data-cy='signature-badge'\n      variant='outline'\n      className='hub-signature-badge'\n      color={signState === 'signed' ? 'green' : 'orange'}\n      icon={\n        signState === 'signed' ? (\n          <CheckCircleIcon />\n        ) : (\n          <ExclamationTriangleIcon />\n        )\n      }\n      isCompact={isCompact}\n      {...props}\n    >\n      {text()}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  FileUpload,\n  Modal,\n  ModalVariant,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface Props {\n  isOpen: boolean;\n  onSubmit: (file: File) => void;\n  onCancel: () => void;\n}\n\nexport const UploadSingCertificateModal: React.FC<Props> = ({\n  isOpen,\n  onSubmit,\n  onCancel,\n}) => {\n  const [filename, setFilename] = useState('');\n  const [path, setPath] = useState<File | null>(null);\n\n  const handleFileInputChange = (e, file) => {\n    setFilename(file.name);\n    setPath(file);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t`Upload signature`}\n      isOpen={isOpen}\n      onClose={onCancel}\n      actions={[\n        <Button\n          key='upload'\n          variant={ButtonVariant.primary}\n          isDisabled={!filename}\n          onClick={() => {\n            onSubmit(path);\n            setFilename('');\n            setPath(null);\n          }}\n        >\n          {t`Upload`}\n        </Button>,\n        <Button key='cancel' variant={ButtonVariant.link} onClick={onCancel}>\n          {t`Cancel`}\n        </Button>,\n      ]}\n    >\n      <p>{t`Please select a signature file to upload.`}</p>\n      <FileUpload\n        id='certificate-file'\n        filename={filename}\n        filenamePlaceholder={t`Drag and drop a file or upload one'`}\n        browseButtonText={t`Select file`}\n        onFileInputChange={handleFileInputChange}\n        onClearClick={() => setFilename('')}\n      />\n    </Modal>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  DropdownItem,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n  Select,\n  SelectOption,\n  SelectVariant,\n  Text,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport * as moment from 'moment';\nimport * as React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport {\n  CertificateUploadAPI,\n  CollectionAPI,\n  CollectionDetailType,\n  CollectionListType,\n  CollectionVersion,\n  MyNamespaceAPI,\n  Repositories,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AlertList,\n  AlertType,\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  DeleteCollectionModal,\n  ImportModal,\n  LinkTabs,\n  Logo,\n  Pagination,\n  RepoSelector,\n  SignAllCertificatesModal,\n  SignSingleCertificateModal,\n  StatefulDropdown,\n  UploadSingCertificateModal,\n  closeAlertMixin,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { DeleteCollectionUtils, errorMessage } from 'src/utilities';\nimport {\n  canSignNamespace,\n  parsePulpIDFromURL,\n  waitForTask,\n} from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent } from '../date-component/date-component';\nimport { SignatureBadge } from '../signing';\nimport './header.scss';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  params: {\n    version?: string;\n    latestVersion?: string;\n  };\n  updateParams: (params) => void;\n  breadcrumbs: BreadcrumbType[];\n  activeTab: string;\n  className?: string;\n  repo?: string;\n  reload: () => void;\n}\n\ninterface IState {\n  isOpenVersionsSelect: boolean;\n  isOpenVersionsModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenSignAllModal: boolean;\n  modalPagination: {\n    page: number;\n    pageSize: number;\n  };\n  deleteCollection: CollectionDetailType;\n  collectionVersion: string | null;\n  confirmDelete: boolean;\n  alerts: AlertType[];\n  redirect: string;\n  noDependencies: boolean;\n  isDeletionPending: boolean;\n  updateCollection: CollectionListType;\n  showImportModal: boolean;\n  uploadCertificateModalOpen: boolean;\n  versionToUploadCertificate: CollectionVersion;\n}\n\nexport class CollectionHeader extends React.Component<IProps, IState> {\n  ignoreParams = ['showing', 'keywords'];\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenVersionsSelect: false,\n      isOpenVersionsModal: false,\n      isOpenSignModal: false,\n      isOpenSignAllModal: false,\n      modalPagination: {\n        page: 1,\n        pageSize: Constants.DEFAULT_PAGINATION_OPTIONS[1],\n      },\n      deleteCollection: null,\n      collectionVersion: null,\n      confirmDelete: false,\n      alerts: [],\n      redirect: null,\n      noDependencies: false,\n      isDeletionPending: false,\n      updateCollection: null,\n      showImportModal: false,\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { collection } = this.props;\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) => this.setState({ noDependencies }))\n      .catch((alert) => this.addAlert(alert));\n  }\n\n  render() {\n    const {\n      collection,\n      params,\n      updateParams,\n      breadcrumbs,\n      activeTab,\n      className,\n    } = this.props;\n\n    const {\n      modalPagination,\n      isOpenVersionsModal,\n      isOpenVersionsSelect,\n      redirect,\n      noDependencies,\n      collectionVersion,\n      deleteCollection,\n      confirmDelete,\n      isDeletionPending,\n      showImportModal,\n      updateCollection,\n    } = this.state;\n\n    const numOfshownVersions = 10;\n\n    const all_versions = [...collection.all_versions];\n\n    const match = all_versions.find(\n      (x) => x.version === collection.latest_version.version,\n    );\n\n    if (!match) {\n      all_versions.push({\n        id: collection.latest_version.id,\n        version: collection.latest_version.version,\n        created: collection.latest_version.created_at,\n        sign_state: collection.latest_version.sign_state,\n      });\n    }\n\n    const urlKeys = [\n      { key: 'documentation', name: t`Docs site` },\n      { key: 'homepage', name: t`Website` },\n      { key: 'issues', name: t`Issue tracker` },\n      { key: 'repository', name: t`Repo` },\n    ];\n\n    const latestVersion = collection.latest_version.created_at;\n\n    const { display_signatures, can_upload_signatures } =\n      this.context.featureFlags;\n\n    const signedString = (v) => {\n      if (display_signatures && 'sign_state' in v) {\n        return v.sign_state === 'signed' ? t`(signed)` : t`(unsigned)`;\n      } else {\n        return '';\n      }\n    };\n\n    const isLatestVersion = (v) =>\n      `${moment(v.created).fromNow()} ${signedString(v)}\n      ${v.version === all_versions[0].version ? t`(latest)` : ''}`;\n\n    const { name: collectionName, namespace } = collection;\n    const company = namespace.company || namespace.name;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    const canSign = canSignNamespace(this.context, namespace);\n\n    const { hasPermission } = this.context;\n\n    const dropdownItems = [\n      DeleteCollectionUtils.deleteMenuOption({\n        canDeleteCollection: hasPermission('ansible.delete_collection'),\n        noDependencies,\n        onClick: () => this.openDeleteModalWithConfirm(),\n      }),\n      hasPermission('ansible.delete_collection') && (\n        <DropdownItem\n          data-cy='delete-version-dropdown'\n          key='delete-collection-version'\n          onClick={() =>\n            this.openDeleteModalWithConfirm(collection.latest_version.version)\n          }\n        >\n          {t`Delete version ${collection.latest_version.version}`}\n        </DropdownItem>\n      ),\n      canSign && !can_upload_signatures && (\n        <DropdownItem\n          key='sign-all'\n          data-cy='sign-collection-button'\n          onClick={() => this.setState({ isOpenSignAllModal: true })}\n        >\n          {t`Sign entire collection`}\n        </DropdownItem>\n      ),\n      canSign && (\n        <DropdownItem\n          key='sign-version'\n          onClick={() => {\n            if (can_upload_signatures) {\n              this.setState({\n                uploadCertificateModalOpen: true,\n                versionToUploadCertificate: collection.latest_version,\n              });\n            } else {\n              this.setState({ isOpenSignModal: true });\n            }\n          }}\n          data-cy='sign-version-button'\n        >\n          {t`Sign version ${collection.latest_version.version}`}\n        </DropdownItem>\n      ),\n      <DropdownItem onClick={() => this.deprecate(collection)} key='deprecate'>\n        {collection.deprecated ? t`Undeprecate` : t`Deprecate`}\n      </DropdownItem>,\n      <DropdownItem\n        key='upload-collection-version'\n        onClick={() => this.checkUploadPrivilleges(collection)}\n        data-cy='upload-collection-version-dropdown'\n      >\n        {t`Upload new version`}\n      </DropdownItem>,\n    ].filter(Boolean);\n\n    const issueUrl =\n      'https://access.redhat.com/support/cases/#/case/new/open-case/describe-issue/recommendations?caseCreate=true&product=Ansible%20Automation%20Hub&version=Online&summary=' +\n      encodeURIComponent(\n        `${namespace.name}-${collectionName}-${collection.latest_version.version}`,\n      );\n\n    return (\n      <React.Fragment>\n        {showImportModal && (\n          <ImportModal\n            isOpen={showImportModal}\n            onUploadSuccess={() =>\n              this.setState({\n                redirect: formatPath(\n                  Paths.myImports,\n                  {},\n                  {\n                    namespace: updateCollection.namespace.name,\n                  },\n                ),\n              })\n            }\n            // onCancel\n            setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n            collection={updateCollection}\n            namespace={updateCollection.namespace.name}\n          />\n        )}\n        {canSign && (\n          <>\n            <UploadSingCertificateModal\n              isOpen={this.state.uploadCertificateModalOpen}\n              onCancel={() => this.closeUploadCertificateModal()}\n              onSubmit={(d) => this.submitCertificate(d)}\n            />\n            <SignAllCertificatesModal\n              name={collectionName}\n              isOpen={this.state.isOpenSignAllModal}\n              onSubmit={this.signCollection}\n              onCancel={() => {\n                this.setState({ isOpenSignAllModal: false });\n              }}\n            />\n            <SignSingleCertificateModal\n              name={collectionName}\n              version={collection.latest_version.version}\n              isOpen={this.state.isOpenSignModal}\n              onSubmit={this.signVersion}\n              onCancel={() => this.setState({ isOpenSignModal: false })}\n            />\n          </>\n        )}\n        <Modal\n          isOpen={isOpenVersionsModal}\n          title={t`Collection versions`}\n          variant='small'\n          onClose={() => this.setState({ isOpenVersionsModal: false })}\n        >\n          <List isPlain>\n            <div className='versions-modal-header'>\n              <Text>{t`${collectionName}'s versions.`}</Text>\n              <Pagination\n                isTop\n                params={{\n                  page: modalPagination.page,\n                  page_size: modalPagination.pageSize,\n                }}\n                updateParams={this.updatePaginationParams}\n                count={all_versions.length}\n              />\n            </div>\n            {this.paginateVersions(all_versions).map((v, i) => (\n              <ListItem key={i}>\n                <Button\n                  variant='link'\n                  isInline\n                  onClick={() => {\n                    updateParams(\n                      ParamHelper.setParam(\n                        params,\n                        'version',\n                        v.version.toString(),\n                      ),\n                    );\n                    this.setState({ isOpenVersionsModal: false });\n                  }}\n                >\n                  v{v.version}\n                </Button>{' '}\n                {t`updated ${isLatestVersion(v)}`}\n              </ListItem>\n            ))}\n          </List>\n          <Pagination\n            params={{\n              page: modalPagination.page,\n              page_size: modalPagination.pageSize,\n            }}\n            updateParams={this.updatePaginationParams}\n            count={all_versions.length}\n          />\n        </Modal>\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          collectionVersion={collectionVersion}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () => {\n              collectionVersion\n                ? this.deleteCollectionVersion(collectionVersion)\n                : DeleteCollectionUtils.deleteCollection({\n                    collection: deleteCollection,\n                    setState: (state) => this.setState(state),\n                    load: null,\n                    redirect: formatPath(Paths.namespaceByRepo, {\n                      repo: this.context.selectedRepo,\n                      namespace: deleteCollection.namespace.name,\n                    }),\n                    selectedRepo: this.context.selectedRepo,\n                    addAlert: (alert) =>\n                      this.context.setAlerts([...this.state.alerts, alert]),\n                  });\n            })\n          }\n        />\n        <BaseHeader\n          className={className}\n          title={collection.name}\n          logo={\n            collection.namespace.avatar_url && (\n              <Logo\n                alt={t`${company} logo`}\n                className='image'\n                fallbackToDefault\n                image={collection.namespace.avatar_url}\n                size='40px'\n                unlockWidth\n              />\n            )\n          }\n          contextSelector={\n            <RepoSelector\n              path={Paths.searchByRepo}\n              selectedRepo={this.context.selectedRepo}\n              isDisabled\n            />\n          }\n          breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n          versionControl={\n            <div className='install-version-column'>\n              <span>{t`Version`}</span>\n              <div className='install-version-dropdown'>\n                <Select\n                  isOpen={isOpenVersionsSelect}\n                  onToggle={(isOpenVersionsSelect) =>\n                    this.setState({ isOpenVersionsSelect })\n                  }\n                  variant={SelectVariant.single}\n                  onSelect={() =>\n                    this.setState({ isOpenVersionsSelect: false })\n                  }\n                  selections={`v${collection.latest_version.version}`}\n                  aria-label={t`Select collection version`}\n                  loadingVariant={\n                    numOfshownVersions < all_versions.length\n                      ? {\n                          text: t`View more`,\n                          onClick: () =>\n                            this.setState({\n                              isOpenVersionsModal: true,\n                              isOpenVersionsSelect: false,\n                            }),\n                        }\n                      : null\n                  }\n                >\n                  {this.renderSelectVersions(\n                    all_versions,\n                    numOfshownVersions,\n                  ).map((v) => (\n                    <SelectOption\n                      key={v.version}\n                      value={`v${v.version}`}\n                      onClick={() =>\n                        updateParams(\n                          ParamHelper.setParam(\n                            params,\n                            'version',\n                            v.version.toString(),\n                          ),\n                        )\n                      }\n                    >\n                      <Trans>\n                        {v.version} updated {isLatestVersion(v)}\n                      </Trans>\n                    </SelectOption>\n                  ))}\n                </Select>\n              </div>\n              {latestVersion ? (\n                <span className='last-updated'>\n                  <Trans>\n                    Last updated <DateComponent date={latestVersion} />\n                  </Trans>\n                </span>\n              ) : null}\n              {display_signatures ? (\n                <SignatureBadge\n                  isCompact\n                  signState={collection.latest_version.sign_state}\n                />\n              ) : null}\n            </div>\n          }\n          pageControls={\n            <Flex>\n              {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? (\n                <FlexItem>\n                  <a href={issueUrl} target='_blank' rel='noreferrer'>\n                    {t`Create issue`}\n                  </a>{' '}\n                  <ExternalLinkAltIcon />\n                </FlexItem>\n              ) : null}\n              {dropdownItems.length > 0 ? (\n                <FlexItem data-cy='kebab-toggle'>\n                  <StatefulDropdown items={dropdownItems} />\n                </FlexItem>\n              ) : null}\n            </Flex>\n          }\n        >\n          {collection.deprecated && (\n            <Alert\n              variant='danger'\n              isInline\n              title={t`This collection has been deprecated.`}\n            />\n          )}\n          <AlertList\n            alerts={this.state.alerts}\n            closeAlert={(i) => this.closeAlert(i)}\n          />\n          <div className='hub-tab-link-container'>\n            <div className='tabs'>{this.renderTabs(activeTab)}</div>\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {urlKeys.map((link) => {\n                const url = collection.latest_version.metadata[link.key];\n                if (!url) {\n                  return null;\n                }\n\n                return (\n                  <div className='link' key={link.key}>\n                    <a href={url} target='_blank' rel='noreferrer'>\n                      {link.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </BaseHeader>\n      </React.Fragment>\n    );\n  }\n\n  private checkUploadPrivilleges(collection) {\n    const addAlert = () => {\n      this.setState({\n        alerts: [\n          ...this.state.alerts,\n          {\n            title: t`You don't have rights to do this operation.`,\n            variant: 'warning',\n          },\n        ],\n      });\n    };\n\n    MyNamespaceAPI.get(collection.namespace.name, {\n      include_related: 'my_permissions',\n    })\n      .then((value) => {\n        if (\n          value.data.related_fields.my_permissions.includes(\n            'galaxy.upload_to_namespace',\n          )\n        ) {\n          this.setState({\n            updateCollection: collection,\n            showImportModal: true,\n          });\n        } else {\n          addAlert();\n        }\n      })\n      .catch(() => {\n        addAlert();\n      });\n  }\n\n  private renderTabs(active) {\n    const { params, repo } = this.props;\n\n    const pathParams = {\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      repo: repo,\n    };\n    const reduced = ParamHelper.getReduced(params, this.ignoreParams);\n\n    const tabs = [\n      {\n        active: active === 'install',\n        title: t`Install`,\n        link: formatPath(Paths.collectionByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'documentation',\n        title: t`Documentation`,\n        link: formatPath(Paths.collectionDocsIndexByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'contents',\n        title: t`Contents`,\n        link: formatPath(\n          Paths.collectionContentListByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n      {\n        active: active === 'import-log',\n        title: t`Import log`,\n        link: formatPath(Paths.collectionImportLogByRepo, pathParams, reduced),\n      },\n      {\n        active: active === 'dependencies',\n        title: t`Dependencies`,\n        link: formatPath(\n          Paths.collectionDependenciesByRepo,\n          pathParams,\n          reduced,\n        ),\n      },\n    ];\n\n    return <LinkTabs tabs={tabs} />;\n  }\n\n  private renderSelectVersions(versions, count) {\n    return versions.slice(0, count);\n  }\n\n  private async submitCertificate(file: File) {\n    const version = this.state.versionToUploadCertificate;\n    const response = await Repositories.getRepository({\n      name: this.context.selectedRepo,\n    });\n    const signed_collection = `${PULP_API_BASE_PATH}content/ansible/collection_versions/${version.id}/`;\n\n    this.setState({\n      alerts: this.state.alerts.concat({\n        id: 'upload-certificate',\n        variant: 'info',\n        title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" is being uploaded.`,\n      }),\n    });\n\n    this.closeUploadCertificateModal();\n\n    CertificateUploadAPI.upload({\n      file,\n      repository: response.data.results[0].pulp_href,\n      signed_collection,\n    })\n      .then((result) => {\n        return waitForTask(parsePulpIDFromURL(result.data.task)).then(() => {\n          if (this.props.reload) {\n            this.props.reload();\n          }\n          this.setState({\n            alerts: this.state.alerts\n              .filter(({ id }) => id !== 'upload-certificate')\n              .concat({\n                variant: 'success',\n                title: t`Certificate for collection \"${version.namespace} ${version.name} v${version.version}\" has been successfully uploaded.`,\n              }),\n          });\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          alerts: this.state.alerts\n            .filter(({ id }) => id !== 'upload-certificate')\n            .concat({\n              variant: 'danger',\n              title: t`The certificate for \"${version.namespace} ${version.name} v${version.version}\" could not be saved.`,\n              description: error,\n            }),\n        });\n      });\n  }\n\n  private closeUploadCertificateModal() {\n    this.setState({\n      uploadCertificateModalOpen: false,\n      versionToUploadCertificate: undefined,\n    });\n  }\n\n  private paginateVersions(versions) {\n    const { modalPagination } = this.state;\n    return versions.slice(\n      modalPagination.pageSize * (modalPagination.page - 1),\n      modalPagination.pageSize * modalPagination.page,\n    );\n  }\n\n  private updatePaginationParams = ({ page, page_size }) => {\n    this.setState({\n      modalPagination: {\n        page: page,\n        pageSize: page_size,\n      },\n    });\n  };\n\n  private signCollection = () => {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all versions in the collection.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all versions in collection \"${this.props.collection.name}\"`,\n        },\n      ],\n      isOpenSignAllModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private signVersion = () => {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign the version.`,\n      description: t`API Error: ${status}`,\n    });\n\n    this.setState({\n      alerts: [\n        ...this.state.alerts,\n        {\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for collection \"${this.props.collection.name} v${this.props.collection.latest_version.version}\".`,\n        },\n      ],\n      isOpenSignModal: false,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      distro_base_path: this.context.selectedRepo,\n      namespace: this.props.collection.namespace.name,\n      collection: this.props.collection.name,\n      version: this.props.collection.latest_version.version,\n    })\n      .then((result) => {\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.props.updateParams({});\n          })\n          .catch((error) => {\n            this.setState({\n              alerts: [...this.state.alerts, errorAlert(error)],\n            });\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.setState({\n          alerts: [...this.state.alerts, errorAlert(error.response.status)],\n        });\n      });\n  };\n\n  private deprecate(collection) {\n    CollectionAPI.setDeprecation(\n      collection,\n      !collection.deprecated,\n      this.context.selectedRepo,\n    )\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        return waitForTask(taskId).then(() => {\n          const title = !collection.deprecated\n            ? t`The collection \"${collection.name}\" has been successfully deprecated.`\n            : t`The collection \"${collection.name}\" has been successfully undeprecated.`;\n          this.setState({\n            alerts: [\n              ...this.state.alerts,\n              {\n                title: title,\n                variant: 'success',\n              },\n            ],\n          });\n          if (this.props.reload) {\n            this.props.reload();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        this.setState({\n          collectionVersion: null,\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: !collection.deprecated\n                ? t`Collection \"${collection.name}\" could not be deprecated.`\n                : t`Collection \"${collection.name}\" could not be undeprecated.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  private deleteCollectionVersion = (collectionVersion) => {\n    const {\n      deleteCollection,\n      deleteCollection: { name },\n    } = this.state;\n    CollectionAPI.deleteCollectionVersion(\n      this.context.selectedRepo,\n      deleteCollection,\n    )\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        const name = deleteCollection.name;\n\n        waitForTask(taskId).then(() => {\n          if (deleteCollection.all_versions.length > 1) {\n            const topVersion = deleteCollection.all_versions.filter(\n              ({ version }) => version !== collectionVersion,\n            );\n            this.props.updateParams(\n              ParamHelper.setParam(\n                this.props.params,\n                'version',\n                topVersion[0].version,\n              ),\n            );\n\n            this.setState({\n              deleteCollection: null,\n              collectionVersion: null,\n              isDeletionPending: false,\n              alerts: [\n                ...this.state.alerts,\n                {\n                  variant: 'success',\n                  title: (\n                    <Trans>\n                      Collection &quot;{name} v{collectionVersion}&quot; has\n                      been successfully deleted.\n                    </Trans>\n                  ),\n                },\n              ],\n            });\n          } else {\n            // last version in collection => collection will be deleted => redirect\n            this.context.setAlerts([\n              ...this.context.alerts,\n              {\n                variant: 'success',\n                title: (\n                  <Trans>\n                    Collection &quot;{name} v{collectionVersion}&quot; has been\n                    successfully deleted.\n                  </Trans>\n                ),\n              },\n            ]);\n            this.setState({\n              redirect: formatPath(Paths.namespaceByRepo, {\n                repo: this.context.selectedRepo,\n                namespace: deleteCollection.namespace.name,\n              }),\n            });\n          }\n        });\n      })\n      .catch((err) => {\n        const {\n          data: { detail, dependent_collection_versions },\n          status,\n          statusText,\n        } = err.response;\n\n        if (status === 400) {\n          const dependencies = (\n            <>\n              <Trans>Dependent collections</Trans>\n              <List className='dependent-collections-alert-list'>\n                {dependent_collection_versions.map((d) => (\n                  <ListItem key={d}>{d}</ListItem>\n                ))}\n              </List>\n            </>\n          );\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: detail,\n                description: dependencies,\n              },\n            ],\n          });\n        } else {\n          this.setState({\n            deleteCollection: null,\n            collectionVersion: null,\n            isDeletionPending: false,\n            alerts: [\n              ...this.state.alerts,\n              {\n                variant: 'danger',\n                title: t`Collection \"${name} v${collectionVersion}\" could not be deleted.`,\n                description: errorMessage(status, statusText),\n              },\n            ],\n          });\n        }\n      });\n  };\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.setState({\n        alerts: [...this.state.alerts, { title: warning, variant: 'warning' }],\n      });\n    }\n    this.setState({ showImportModal: isOpen });\n  }\n\n  private openDeleteModalWithConfirm(version = null) {\n    this.setState({\n      deleteCollection: this.props.collection,\n      collectionVersion: version,\n      confirmDelete: false,\n    });\n  }\n\n  private closeModal = () => {\n    this.setState({ deleteCollection: null });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  CodeBlock,\n  CodeBlockCode,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport React, { useState } from 'react';\nimport { CollectionVersionDetail } from 'src/api/response-types/collection';\nimport { useContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  version: CollectionVersionDetail;\n}\n\nexport const DownloadSignatureGridItem = ({ version }: IProps) => {\n  const { display_signatures } = useContext().featureFlags;\n  const [show, setShow] = useState(false);\n\n  // No signature object or the signatures is empty\n  if (!display_signatures || version.metadata.signatures?.length < 1) {\n    return null;\n  }\n\n  return (\n    <>\n      <GridItem>\n        <Split hasGutter>\n          <SplitItem className='install-title'>{t`Signature`}</SplitItem>\n          <SplitItem>\n            <Button\n              style={{ padding: 0 }}\n              variant={ButtonVariant.link}\n              icon={<DownloadIcon />}\n              data-cy='toggle-signature-button'\n              onClick={() => {\n                setShow(!show);\n              }}\n            >\n              {show ? t`Hide the signature` : t`Show the signature`}\n            </Button>\n          </SplitItem>\n        </Split>\n      </GridItem>\n      <GridItem>\n        {show &&\n          version.metadata.signatures.map(({ signature }, idx) => (\n            <CodeBlock key={idx}>\n              <CodeBlockCode>{signature}</CodeBlockCode>\n            </CodeBlock>\n          ))}\n      </GridItem>\n    </>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  Grid,\n  GridItem,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionAPI, CollectionDetailType } from 'src/api';\nimport { ClipboardCopy, LoginLink, Tag } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { errorMessage } from 'src/utilities';\nimport './collection-info.scss';\nimport { DownloadSignatureGridItem } from './download-signature-grid-item';\n\ninterface IProps extends CollectionDetailType {\n  params: {\n    version?: string;\n  };\n  updateParams: (params) => void;\n  addAlert?: (variant, title, description?) => void;\n}\n\nexport const CollectionInfo = ({\n  name,\n  latest_version,\n  namespace,\n  params,\n  addAlert,\n}: IProps) => {\n  const downloadLinkRef = React.useRef<HTMLAnchorElement>(null);\n  const context = useContext();\n\n  let installCommand = `ansible-galaxy collection install ${namespace.name}.${name}`;\n\n  if (params.version) {\n    installCommand += `:${params.version}`;\n  }\n\n  return (\n    <div className='pf-c-content info-panel'>\n      <h1>{t`Install`}</h1>\n      <Grid hasGutter={true}>\n        <GridItem>{latest_version.metadata.description}</GridItem>\n        <GridItem>\n          {latest_version.metadata.tags.map((tag, i) => (\n            <Tag key={i}>{tag}</Tag>\n          ))}\n        </GridItem>\n\n        {latest_version?.metadata?.license?.length > 0 && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>{t`License`}</SplitItem>\n              <SplitItem isFilled>\n                {latest_version.metadata.license\n                  ? latest_version.metadata.license.join(', ')\n                  : ''}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n        <GridItem>\n          <Split hasGutter={true}>\n            <SplitItem className='install-title'>{t`Installation`}</SplitItem>\n            <SplitItem isFilled>\n              <ClipboardCopy isReadOnly>{installCommand}</ClipboardCopy>\n              <div>\n                <Trans>\n                  <b>Note:</b> Installing collections with ansible-galaxy is\n                  only supported in ansible 2.9+\n                </Trans>\n              </div>\n              {context.user.is_anonymous &&\n              !context.settings\n                .GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD ? (\n                <Alert\n                  className={'hub-collection-download-alert'}\n                  isInline\n                  variant='warning'\n                  title={\n                    <React.Fragment>\n                      {t`You have to be logged in to be able to download the tarball.`}{' '}\n                      <LoginLink />\n                    </React.Fragment>\n                  }\n                />\n              ) : (\n                <div>\n                  <a ref={downloadLinkRef} style={{ display: 'none' }}></a>\n                  <Button\n                    className='download-button'\n                    variant='link'\n                    data-cy='download-collection-tarball-button'\n                    icon={<DownloadIcon />}\n                    onClick={() =>\n                      download(\n                        context.selectedRepo,\n                        namespace,\n                        name,\n                        latest_version,\n                        downloadLinkRef,\n                        addAlert,\n                      )\n                    }\n                  >\n                    {t`Download tarball`}\n                  </Button>\n                </div>\n              )}\n            </SplitItem>\n          </Split>\n        </GridItem>\n        <DownloadSignatureGridItem version={latest_version} />\n        {latest_version.requires_ansible && (\n          <GridItem>\n            <Split hasGutter={true}>\n              <SplitItem className='install-title'>\n                {t`Requires Ansible`}\n              </SplitItem>\n              <SplitItem isFilled data-cy='ansible-requirement'>\n                {latest_version.requires_ansible}\n              </SplitItem>\n            </Split>\n          </GridItem>\n        )}\n\n        {latest_version.docs_blob.collection_readme ? (\n          <GridItem>\n            <div className='hub-readme-container'>\n              <div\n                className='pf-c-content'\n                dangerouslySetInnerHTML={{\n                  __html: latest_version.docs_blob.collection_readme.html,\n                }}\n              />\n              <div className='hub-fade-out'></div>\n            </div>\n            <Link\n              to={formatPath(\n                Paths.collectionDocsIndexByRepo,\n                {\n                  collection: name,\n                  namespace: namespace.name,\n                  repo: context.selectedRepo,\n                },\n                params,\n              )}\n            >\n              {t`Go to documentation`}\n            </Link>\n          </GridItem>\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nfunction download(\n  reponame,\n  namespace,\n  name,\n  latest_version,\n  downloadLinkRef,\n  addAlert,\n) {\n  CollectionAPI.getDownloadURL(\n    reponame,\n    namespace.name,\n    name,\n    latest_version.version,\n  )\n    .then((downloadURL: string) => {\n      // By getting a reference to a hidden <a> tag, setting the href and\n      // programmatically clicking it, we can hold off on making the api\n      // calls to get the download URL until it's actually needed. Clicking\n      // the <a> tag also gets around all the problems using a popup with\n      // window.open() causes.\n      downloadLinkRef.current.href = downloadURL;\n      downloadLinkRef.current.click();\n    })\n    .catch((e) => {\n      const { status, statusText } = e.response;\n      addAlert(\n        'danger',\n        t`Collection \"${name}\" could not be downloaded.`,\n        errorMessage(status, statusText),\n      );\n    });\n}\n","import { t } from '@lingui/macro';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { AppliedFilters, CompoundFilter } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport './collection-filter.scss';\n\ninterface IProps {\n  ignoredParams: string[];\n  params: {\n    keywords?: string;\n    page?: number;\n    page_size?: number;\n    tags?: string[];\n    view_type?: string;\n  };\n  updateParams: (p) => void;\n}\n\ninterface IState {\n  inputText: string;\n}\n\nexport class CollectionFilter extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputText: props.params.keywords || '',\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.params.keywords !== this.props.params['keywords']) {\n      this.setState({ inputText: this.props.params['keywords'] || '' });\n    }\n  }\n\n  render() {\n    const { ignoredParams, params, updateParams } = this.props;\n    const { display_signatures } = this.context.featureFlags;\n    const display_tags = ignoredParams.includes('tags') === false;\n\n    const filterConfig = [\n      {\n        id: 'keywords',\n        title: t`Keywords`,\n      },\n      display_tags && {\n        id: 'tags',\n        title: t`Tag`,\n        inputType: 'multiple' as const,\n        options: Constants.COLLECTION_FILTER_TAGS.map((tag) => ({\n          id: tag,\n          title: tag,\n        })),\n      },\n      display_signatures && {\n        id: 'sign_state',\n        title: t`Sign state`,\n        inputType: 'select' as const,\n        options: [\n          { id: 'signed', title: t`Signed` },\n          { id: 'unsigned', title: t`Unsigned` },\n        ],\n      },\n    ].filter(Boolean);\n\n    return (\n      <Toolbar>\n        <ToolbarContent>\n          <ToolbarGroup style={{ marginLeft: 0 }}>\n            <ToolbarItem>\n              <CompoundFilter\n                inputText={this.state.inputText}\n                onChange={(text) => this.setState({ inputText: text })}\n                updateParams={updateParams}\n                params={params}\n                filterConfig={filterConfig}\n              />\n              <ToolbarItem>\n                <AppliedFilters\n                  niceNames={{\n                    sign_state: t`sign state`,\n                    tags: t`tags`,\n                    keywords: t`keywords`,\n                  }}\n                  style={{ marginTop: '16px' }}\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                />\n              </ToolbarItem>\n            </ToolbarItem>\n          </ToolbarGroup>\n        </ToolbarContent>\n      </Toolbar>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { DataList } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { CollectionListType } from 'src/api';\nimport {\n  CollectionListItem,\n  EmptyStateFilter,\n  Pagination,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './list.scss';\n\ninterface IProps {\n  collections: CollectionListType[];\n  displaySignatures: boolean;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n  };\n  updateParams: (params) => void;\n  itemCount: number;\n  ignoredParams: string[];\n  showControls?: boolean;\n  repo?: string;\n  renderCollectionControls: (collection) => React.ReactNode;\n}\n\n// only used in namespace detail, collections uses individual items\nexport class CollectionList extends React.Component<IProps> {\n  render() {\n    const {\n      collections,\n      displaySignatures,\n      params,\n      updateParams,\n      ignoredParams,\n      itemCount,\n      showControls,\n      repo,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <DataList aria-label={t`List of Collections`}>\n          {collections.length > 0 ? (\n            collections.map((c) => (\n              <CollectionListItem\n                controls={\n                  showControls ? this.props.renderCollectionControls(c) : null\n                }\n                key={c.id}\n                {...c}\n                repo={repo}\n                displaySignatures={displaySignatures}\n              />\n            ))\n          ) : (\n            <EmptyStateFilter\n              clearAllFilters={() => {\n                ParamHelper.clearAllFilters({\n                  params,\n                  ignoredParams,\n                  updateParams,\n                });\n              }}\n            />\n          )}\n        </DataList>\n        <Pagination\n          params={params}\n          updateParams={(p) => updateParams(p)}\n          count={itemCount}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  LabelGroup,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionListType } from 'src/api';\nimport {\n  CollectionNumericLabel,\n  DateComponent,\n  DeprecatedTag,\n  Logo,\n  Tag,\n} from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { chipGroupProps, convertContentSummaryCounts } from 'src/utilities';\nimport { SignatureBadge } from '../signing';\nimport './list-item.scss';\n\ninterface IProps extends CollectionListType {\n  showNamespace?: boolean;\n  controls?: React.ReactNode;\n  displaySignatures: boolean;\n  repo?: string;\n}\n\nexport class CollectionListItem extends React.Component<IProps> {\n  render() {\n    const {\n      name,\n      latest_version,\n      namespace,\n      showNamespace,\n      controls,\n      deprecated,\n      displaySignatures,\n      repo,\n      sign_state,\n    } = this.props;\n\n    const cells = [];\n\n    const company = namespace.company || namespace.name;\n\n    if (showNamespace) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={namespace.avatar_url}\n            size='40px'\n            unlockWidth\n            width='97px'\n          />\n        </DataListCell>,\n      );\n    }\n\n    const contentSummary = convertContentSummaryCounts(latest_version.metadata);\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link\n            to={formatPath(Paths.collectionByRepo, {\n              collection: name,\n              namespace: namespace.name,\n              repo: repo,\n            })}\n            data-cy='CollectionList-name'\n          >\n            {name}\n          </Link>\n          {deprecated && <DeprecatedTag />}\n          {showNamespace ? (\n            <TextContent>\n              <Text component={TextVariants.small}>\n                <Trans>Provided by {company}</Trans>\n              </Text>\n            </TextContent>\n          ) : null}\n        </div>\n        <div className='hub-entry'>{latest_version.metadata.description}</div>\n        <div className='hub-entry pf-l-flex pf-m-wrap'>\n          {Object.keys(contentSummary.contents).map((type) => (\n            <div key={type}>\n              <CollectionNumericLabel\n                count={contentSummary.contents[type]}\n                type={type}\n              />\n            </div>\n          ))}\n        </div>\n        <div className='hub-entry pf-l-flex pf-m-wrap'>\n          <LabelGroup {...chipGroupProps()}>\n            {latest_version.metadata.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        {controls ? <div className='hub-entry'>{controls}</div> : null}\n        <div className='hub-right-col hub-entry'>\n          <Trans>\n            Updated <DateComponent date={latest_version.created_at} />\n          </Trans>\n        </div>\n        <div className='hub-entry'>v{latest_version.version}</div>\n        {displaySignatures ? (\n          <SignatureBadge className='hub-entry' signState={sign_state} />\n        ) : null}\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='CollectionListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, Modal, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\n\ninterface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  confirmAction?: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  confirmButtonTitle?: string;\n}\n\nexport class ConfirmModal extends React.Component<IProps> {\n  render() {\n    const {\n      cancelAction,\n      children,\n      confirmAction,\n      isDisabled,\n      title,\n      spinner,\n      confirmButtonTitle,\n    } = this.props;\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='confirm'\n            onClick={confirmAction}\n            variant='primary'\n            isDisabled={isDisabled}\n          >\n            {confirmButtonTitle ? confirmButtonTitle : t`Yes`}\n            {spinner && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button key='cancel' onClick={cancelAction} variant='link'>\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={cancelAction}\n        title={title}\n        titleIconVariant='warning'\n        variant='small'\n      >\n        {children}\n      </Modal>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { List, ListItem, ListVariant } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionDetailType, CollectionVersion } from 'src/api';\nimport { EmptyStateNoData, HelperText } from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\n\ninterface IProps {\n  collection: CollectionDetailType;\n  dependencies_repos: (CollectionVersion & {\n    path?: string;\n  })[];\n}\n\nexport const CollectionDependenciesList = ({\n  collection,\n  dependencies_repos,\n}: IProps) => {\n  const { dependencies } = collection.latest_version.metadata;\n\n  if (!Object.keys(dependencies).length) {\n    return (\n      <EmptyStateNoData\n        title={t`No dependencies`}\n        description={t`Collection does not have dependencies.`}\n      />\n    );\n  }\n\n  return (\n    <List variant={ListVariant.inline} className='hub-c-list-dependencies'>\n      {dependencies_repos.map((dependency, i) =>\n        listDep(dependency, i, dependencies),\n      )}\n    </List>\n  );\n};\n\nconst listDep = (dependency, i, dependencies) => {\n  const fqn = dependency.namespace + '.' + dependency.name;\n  const version_range = dependencies[fqn];\n\n  if (dependency.path) {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        <Link to={dependency.path}>{fqn}</Link>: {version_range}\n      </ListItem>\n    );\n  } else {\n    return (\n      <ListItem key={i} style={{ marginRight: '70px' }}>\n        {fqn}: {version_range}\n        <HelperText\n          content={t`No version of ${fqn} exists that matches ${version_range}.`}\n        />\n      </ListItem>\n    );\n  }\n};\n","import { t } from '@lingui/macro';\nimport {\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CollectionUsedByDependencies } from 'src/api';\nimport {\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  Sort,\n} from 'src/components';\nimport 'src/containers/collection-detail/collection-dependencies.scss';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  usedByDependencies: CollectionUsedByDependencies[];\n  usedByDependenciesLoading: boolean;\n  repo: string;\n  itemCount: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    collection?: string;\n    sort?: string;\n    version?: string;\n    name__icontains?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const CollectionUsedbyDependenciesList = ({\n  params,\n  usedByDependencies,\n  itemCount,\n  updateParams,\n  usedByDependenciesLoading,\n}: IProps) => {\n  const ignoredParams = ['page_size', 'page', 'sort', 'name__icontains'];\n\n  if (!itemCount && !filterIsSet(params, ['name__icontains'])) {\n    return (\n      <EmptyStateNoData\n        title={t`Not required for use by other collections`}\n        description={t`Collection is not being used by any collection.`}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div className='hub-toolbar'>\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem>\n              <SearchInput\n                value={params.name__icontains || ''}\n                onChange={(_e, val) =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', val),\n                  )\n                }\n                onClear={() =>\n                  updateParams(\n                    ParamHelper.setParam(params, 'name__icontains', ''),\n                  )\n                }\n                aria-label='filter-collection-name'\n                placeholder={t`Filter by name`}\n              />\n            </ToolbarItem>\n            <ToolbarItem>\n              <Sort\n                options={[\n                  { title: t`Collection`, id: 'collection', type: 'alpha' },\n                ]}\n                params={params}\n                updateParams={({ sort }) =>\n                  updateParams(ParamHelper.setParam(params, 'sort', sort))\n                }\n              />\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n        {!!itemCount && (\n          <Pagination\n            params={params}\n            updateParams={(p) => updateParams(p)}\n            count={itemCount}\n            isTop\n          />\n        )}\n      </div>\n\n      {usedByDependenciesLoading ? (\n        <LoadingPageSpinner />\n      ) : (\n        <>\n          {!itemCount ? (\n            <EmptyStateFilter />\n          ) : (\n            <>\n              <table className='hub-c-table-content pf-c-table pf-m-compact'>\n                <tbody>\n                  {usedByDependencies.map(\n                    ({ name, namespace, version, repository_list }, i) => (\n                      <tr key={i}>\n                        <td>\n                          <Link\n                            to={formatPath(\n                              Paths.collectionByRepo,\n                              {\n                                collection: name,\n                                namespace,\n                                repo: repository_list[0],\n                              },\n                              ParamHelper.getReduced(\n                                { version },\n                                ignoredParams,\n                              ),\n                            )}\n                          >\n                            {namespace + '.' + name} v{version}\n                          </Link>\n                        </td>\n                      </tr>\n                    ),\n                  )}\n                </tbody>\n              </table>\n              <Pagination\n                params={params}\n                updateParams={(params) => updateParams(params)}\n                count={itemCount}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  InputGroup,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { StatefulDropdown } from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\nclass FilterOption {\n  id: string;\n  title: string;\n  placeholder?: string;\n  inputType?: 'text-field' | 'select' | 'multiple';\n  options?: { id: string; title: string }[];\n}\n\ninterface IProps {\n  /** Configures the options that the filter displays */\n  filterConfig: FilterOption[];\n\n  /** Current page params */\n  // Type help: this shoud be something like: Record<string, strgin | SelectOptionObject | (string | SelectOptionObject)[]>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  params: any;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  inputText: string;\n\n  onChange: (inputText: string) => void;\n}\n\ninterface IState {\n  selectedFilter: FilterOption;\n  isExpanded: boolean;\n  isCreatable: boolean;\n  isOpen: boolean;\n  hasOnCreateOption: boolean;\n}\n\nexport class CompoundFilter extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFilter: props.filterConfig[0],\n      isExpanded: false,\n      isCreatable: false,\n      isOpen: false,\n      hasOnCreateOption: false,\n    };\n  }\n\n  render() {\n    const { filterConfig } = this.props;\n    const { selectedFilter } = this.state;\n\n    const filterOptions = filterConfig.map((v) => (\n      <DropdownItem\n        onClick={() => {\n          this.props.onChange('');\n          this.setState({ selectedFilter: v });\n        }}\n        key={v.id}\n      >\n        {v.title}\n      </DropdownItem>\n    ));\n\n    return (\n      <InputGroup data-cy='compound_filter'>\n        {filterConfig.length != 1 && (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              <span>\n                <FilterIcon />\n                {'   '}\n                {selectedFilter.title}\n              </span>\n            }\n            position='left'\n            isPlain={false}\n            items={filterOptions}\n          />\n        )}\n        {this.renderInput(selectedFilter)}\n        <Button\n          onClick={() => this.submitFilter()}\n          variant={ButtonVariant.control}\n          isDisabled={!this.props.inputText.trim().length}\n        >\n          <SearchIcon></SearchIcon>\n        </Button>\n      </InputGroup>\n    );\n  }\n\n  private renderInput(selectedFilter: FilterOption) {\n    switch (selectedFilter.inputType) {\n      case 'multiple':\n        return (\n          <Select\n            variant={SelectVariant.checkbox}\n            onToggle={this.onToggle}\n            onSelect={this.onSelectMultiple}\n            isOpen={this.state.isOpen}\n            placeholderText={t`Filter by ${selectedFilter.id.toLowerCase()}`}\n            selections={this.props.params[this.state.selectedFilter.id]}\n            isGrouped\n          >\n            {[\n              <SelectGroup\n                label={t`Filter by ${selectedFilter.id}`}\n                key={selectedFilter.id}\n              >\n                {selectedFilter.options.map((option) => (\n                  // patternfly does not allow for us to set a display name aside from the ID\n                  // which unfortunately means that multiple select will ignore the human readable\n                  // option.title\n                  <SelectOption key={option.id} value={option.id} />\n                ))}\n              </SelectGroup>,\n            ]}\n          </Select>\n        );\n      case 'select':\n        return (\n          <StatefulDropdown\n            toggleType='dropdown'\n            defaultText={\n              this.selectTitleById(this.props.inputText, selectedFilter) ||\n              selectedFilter.placeholder ||\n              selectedFilter.title\n            }\n            isPlain={false}\n            position='left'\n            items={selectedFilter.options.map((v) => (\n              <DropdownItem\n                onClick={() => {\n                  this.props.onChange(v.id);\n                  this.submitFilter(v.id);\n                }}\n                key={v.id}\n              >\n                {v.title}\n              </DropdownItem>\n            ))}\n          />\n        );\n      default:\n        return (\n          <TextInput\n            aria-label={selectedFilter.id}\n            placeholder={\n              selectedFilter.placeholder ||\n              t`Filter by ${selectedFilter.title.toLowerCase()}`\n            }\n            value={this.props.inputText}\n            onChange={(k) => this.props.onChange(k)}\n            onKeyPress={(e) => this.handleEnter(e)}\n          />\n        );\n    }\n  }\n\n  private handleEnter(e) {\n    // l10n: don't translate\n    if (e.key === 'Enter' && this.props.inputText.trim().length > 0) {\n      this.submitFilter();\n    }\n  }\n\n  private submitMultiple(newValues: string[]) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        newValues,\n      ),\n      page: 1,\n    });\n  }\n\n  private submitFilter(id = undefined) {\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.state.selectedFilter.id,\n        id ? id : this.props.inputText,\n      ),\n      page: 1,\n    });\n  }\n\n  private onToggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  private onSelectMultiple = (event) => {\n    let newParams = this.props.params[this.state.selectedFilter.id];\n    if (!newParams) {\n      newParams = [];\n    }\n\n    // TODO: Remove this replace after patternfly fixes the pf-random-id issue\n    const selectedID = event.currentTarget.id.replace(/pf-random-id-\\d+-/, '');\n    if (newParams.includes(selectedID)) {\n      const index = newParams.indexOf(selectedID);\n      if (index > -1) {\n        newParams.splice(index, 1);\n      }\n    } else {\n      newParams.push(selectedID);\n    }\n    this.submitMultiple(newParams);\n  };\n\n  private selectTitleById(inputText: string, selectedFilter: FilterOption) {\n    if (!inputText || !selectedFilter?.options) {\n      return inputText;\n    }\n\n    return selectedFilter.options.find((opt) => opt.id === inputText).title;\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, Modal, ModalProps, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IProps {\n  cancelAction: () => void;\n  children?: React.ReactNode;\n  deleteAction: () => void;\n  isDisabled?: boolean;\n  title: string;\n  spinner?: boolean;\n  'data-cy'?: string;\n  variant?: ModalProps['variant'];\n}\n\nexport class DeleteModal extends React.Component<IProps> {\n  static defaultProps = {\n    variant: 'small',\n  };\n\n  render() {\n    const {\n      cancelAction,\n      children,\n      deleteAction,\n      isDisabled,\n      title,\n      spinner,\n      variant,\n    } = this.props;\n\n    return (\n      <Modal\n        actions={[\n          <div data-cy='delete-button' key='delete'>\n            <Button\n              key='delete'\n              onClick={deleteAction}\n              variant='danger'\n              isDisabled={isDisabled}\n            >\n              {t`Delete`}\n              {spinner && <Spinner size='sm'></Spinner>}\n            </Button>\n          </div>,\n          <Button key='cancel' onClick={cancelAction} variant='link'>\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={true}\n        onClose={cancelAction}\n        title={title}\n        titleIconVariant='warning'\n        variant={variant}\n        data-cy='modal_checkbox'\n      >\n        {children}\n      </Modal>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { Checkbox, Text } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ExecutionEnvironmentAPI } from 'src/api';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { waitForTask } from 'src/utilities';\nimport { errorMessage } from 'src/utilities';\n\ninterface IState {\n  confirmDelete: boolean;\n  isDeletionPending: boolean;\n}\n\ninterface IProps {\n  closeAction: () => void;\n  selectedItem: string;\n  addAlert: (message, variant, description?) => void;\n  afterDelete: () => void;\n}\n\nexport class DeleteExecutionEnvironmentModal extends React.Component<\n  IProps,\n  IState\n> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirmDelete: false,\n      isDeletionPending: false,\n    };\n  }\n\n  render() {\n    const { selectedItem, closeAction } = this.props;\n    const { isDeletionPending, confirmDelete } = this.state;\n\n    return (\n      <DeleteModal\n        spinner={isDeletionPending}\n        title={t`Delete container?`}\n        cancelAction={() => closeAction()}\n        deleteAction={() => this.deleteContainer(selectedItem)}\n        isDisabled={!confirmDelete || isDeletionPending}\n      >\n        <Text className='delete-container-modal-message'>\n          <Trans>\n            Deleting <b>{selectedItem}</b> and its data will be lost.\n          </Trans>\n        </Text>\n        <Checkbox\n          isChecked={confirmDelete}\n          onChange={(value) => this.setState({ confirmDelete: value })}\n          label={t`I understand that this action cannot be undone.`}\n          id='delete_confirm'\n        />\n      </DeleteModal>\n    );\n  }\n\n  deleteContainer(selectedItem: string) {\n    const { addAlert, closeAction, afterDelete } = this.props;\n    this.setState({ isDeletionPending: true }, () =>\n      ExecutionEnvironmentAPI.deleteExecutionEnvironment(selectedItem)\n        .then((result) => {\n          const taskId = result.data.task.split('tasks/')[1].replace('/', '');\n          waitForTask(taskId).then(() => {\n            this.setState({\n              confirmDelete: false,\n              isDeletionPending: false,\n            });\n            closeAction();\n            addAlert(\n              <Trans>\n                Execution environment &quot;{selectedItem}&quot; has been\n                successfully deleted.\n              </Trans>,\n              'success',\n            );\n            afterDelete();\n          });\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState({\n            confirmDelete: false,\n            isDeletionPending: false,\n          });\n          addAlert(\n            t`Execution environment \"${selectedItem}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n          closeAction();\n        }),\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { Alert, List, ListItem, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { UserType } from 'src/api';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\n\ninterface IProps {\n  count?: number;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  name: string;\n  users?: UserType[];\n  canViewUsers?: boolean;\n}\n\nexport class DeleteGroupModal extends React.Component<IProps> {\n  render() {\n    const { cancelAction, count, deleteAction, name, users, canViewUsers } =\n      this.props;\n\n    return (\n      <DeleteModal\n        cancelAction={cancelAction}\n        deleteAction={deleteAction}\n        title={t`Delete group?`}\n      >\n        <Trans>\n          <b>{name}</b> will be permanently deleted.\n        </Trans>\n        <p>&nbsp;</p>\n        <div>\n          {users && count > 10 && (\n            <p>\n              <Trans>Deleting this group will affect {count} users.</Trans>\n            </p>\n          )}\n          {users && count > 0 && count <= 10 && (\n            <>\n              <p>\n                <Trans>\n                  These users will lose access to the group content:\n                </Trans>\n              </p>\n              <List>\n                {users.map((u) => (\n                  <ListItem key={u.username}>\n                    <b>{u.username}</b>\n                  </ListItem>\n                ))}\n              </List>\n            </>\n          )}\n\n          {canViewUsers ? (\n            <>\n              {users && !count && <p>{t`No users will be affected.`}</p>}\n              {!users && (\n                <p>\n                  <Trans>\n                    Checking for affected users... <Spinner size='sm' />\n                  </Trans>\n                </p>\n              )}\n            </>\n          ) : (\n            <Alert\n              title={t`This group can include users`}\n              variant='warning'\n              isInline\n            >\n              <Trans>You don&apos;t have permission to display users.</Trans>\n            </Alert>\n          )}\n        </div>\n      </DeleteModal>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport * as React from 'react';\nimport { UserAPI, UserType } from 'src/api';\nimport { DeleteModal } from 'src/components/delete-modal/delete-modal';\nimport { AppContext } from 'src/loaders/app-context';\nimport { mapErrorMessages } from 'src/utilities';\nimport { errorMessage } from 'src/utilities';\n\ninterface IState {\n  isWaitingForResponse: boolean;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  user?: UserType;\n  closeModal: (didDelete: boolean) => void;\n  addAlert: (message, variant, description?) => void;\n}\n\nexport class DeleteUserModal extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { isWaitingForResponse: false };\n  }\n\n  render() {\n    const { isOpen, user, closeModal } = this.props;\n    const { isWaitingForResponse } = this.state;\n    if (!user || !isOpen) {\n      return null;\n    }\n\n    return (\n      <DeleteModal\n        cancelAction={() => closeModal(false)}\n        deleteAction={() => this.deleteUser()}\n        isDisabled={isWaitingForResponse || this.isUserSelfOrAdmin(user)}\n        spinner={isWaitingForResponse}\n        title={t`Delete user?`}\n      >\n        {this.getActionDescription(user)}\n      </DeleteModal>\n    );\n  }\n\n  private getActionDescription(user: UserType) {\n    if (user.is_superuser) {\n      return t`Deleting super users is not allowed.`;\n    } else if (user.id === this.context.user.id) {\n      return t`Deleting yourself is not allowed.`;\n    }\n\n    return (\n      <Trans>\n        <b>{user.username}</b> will be permanently deleted.\n      </Trans>\n    );\n  }\n\n  private isUserSelfOrAdmin = (user: UserType): boolean => {\n    return user.is_superuser || user.id === this.context.user.id;\n  };\n\n  private deleteUser = () => {\n    this.setState({ isWaitingForResponse: true }, () =>\n      UserAPI.delete(this.props.user.id)\n        .then(() => this.waitForDeleteConfirm(this.props.user.id))\n        .catch((err) => {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            mapErrorMessages(err)['__nofield'],\n          );\n          this.props.closeModal(false);\n        })\n        .finally(() => this.setState({ isWaitingForResponse: false })),\n    );\n  };\n\n  // Wait for the user to actually get removed from the database before closing the\n  // modal\n  private waitForDeleteConfirm(user) {\n    UserAPI.get(user)\n      .then(async () => {\n        // wait half a second\n        await new Promise((r) => setTimeout(r, 500));\n        this.waitForDeleteConfirm(user);\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        if (err.response.status === 404) {\n          this.props.addAlert(\n            <Trans>\n              User &quot;{this.props.user.username}&quot; has been successfully\n              deleted.\n            </Trans>,\n            'success',\n          );\n          this.props.closeModal(true);\n        } else {\n          this.props.addAlert(\n            t`User \"${this.props.user.username}\" could not be deleted.`,\n            'danger',\n            errorMessage(status, statusText),\n          );\n        }\n\n        this.setState({ isWaitingForResponse: false });\n      });\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\n\nexport const DeprecatedTag = () => (\n  <div\n    style={{\n      display: 'inline-block',\n      margin: '4px',\n      backgroundColor: '#C9190B',\n      color: 'white',\n      fontSize: '14px',\n      paddingLeft: '5px',\n      paddingRight: '5px',\n      paddingBottom: '2px',\n      paddingTop: '2px',\n      borderRadius: '3px',\n    }}\n  >\n    {t`DEPRECATED`}\n  </div>\n);\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStatePrimary,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ComponentClass } from 'react';\nimport { ReactElement, ReactNode } from 'react';\n\ninterface IProps {\n  icon?: ComponentClass;\n  title: string;\n  description: ReactNode;\n  button?: ReactElement;\n  variant?: 'xs' | 'small' | 'large' | 'xl' | 'full';\n}\n\nexport class EmptyStateCustom extends React.Component<IProps> {\n  static defaultProps = {\n    variant: 'small',\n  };\n\n  render() {\n    return (\n      <EmptyState\n        variant={EmptyStateVariant[this.props.variant]}\n        data-cy='EmptyState'\n      >\n        <EmptyStateIcon icon={this.props.icon} />\n        <Title headingLevel='h4' size='lg'>\n          {this.props.title}\n        </Title>\n        <EmptyStateBody>{this.props.description}</EmptyStateBody>\n        {this.props.button && (\n          <EmptyStatePrimary>{this.props.button}</EmptyStatePrimary>\n        )}\n      </EmptyState>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  clearAllFilters?: () => void;\n}\n\nexport class EmptyStateFilter extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        title={t`No results found`}\n        description={t`No results match the filter criteria. Try changing your filter settings.`}\n        icon={SearchIcon}\n        button={\n          this.props.clearAllFilters ? (\n            <Button onClick={this.props.clearAllFilters} variant='link'>\n              {t`Clear all filters`}\n            </Button>\n          ) : null\n        }\n      />\n    );\n  }\n}\n","import { CubesIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport { EmptyStateCustom } from './empty-state-custom';\n\ninterface IProps {\n  button?: ReactElement;\n  title: string;\n  description: ReactNode;\n}\n\nexport class EmptyStateNoData extends React.Component<IProps> {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={this.props.button ? PlusCircleIcon : CubesIcon}\n        title={this.props.title}\n        description={this.props.description}\n        button={this.props.button}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { LockIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { LoginLink } from 'src/components';\nimport { EmptyStateCustom } from './empty-state-custom';\n\nexport class EmptyStateUnauthorized extends React.Component {\n  render() {\n    return (\n      <EmptyStateCustom\n        icon={LockIcon}\n        title={t`You do not have access to Automation Hub`}\n        description={\n          <>\n            {t`Contact your organization administrator for more information.`}\n            <br />\n            <br />\n            <LoginLink button />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { Tooltip } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ContainerRepositoryType } from 'src/api';\nimport { BaseHeader, Breadcrumbs, SignatureBadge, Tabs } from 'src/components';\nimport { Paths, formatEEPath, formatPath } from 'src/paths';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  id: string;\n  tab: string;\n  updateState: (any) => void;\n  container: ContainerRepositoryType;\n  pageControls?: React.ReactElement;\n  groupId?: number;\n  displaySignatures: boolean;\n}\n\nexport class ExecutionEnvironmentHeader extends React.Component<IProps> {\n  render() {\n    const { container, groupId, tab, displaySignatures } = this.props;\n\n    const tabs = [\n      { id: 'detail', name: t`Detail` },\n      { id: 'activity', name: t`Activity` },\n      { id: 'images', name: t`Images` },\n      { id: 'owners', name: t`Owners` },\n    ];\n\n    const last_sync_task = container.pulp.repository.remote?.last_sync_task;\n\n    return (\n      <BaseHeader\n        title={container.name}\n        breadcrumbs={\n          <Breadcrumbs\n            links={[\n              {\n                url: formatPath(Paths.executionEnvironments),\n                name: t`Execution Environments`,\n              },\n              {\n                name: container.name,\n                url:\n                  tab === 'owners'\n                    ? formatEEPath(Paths.executionEnvironmentDetail, {\n                        container: container.name,\n                      })\n                    : null,\n              },\n              tab === 'owners'\n                ? {\n                    name: t`Owners`,\n                    url: groupId\n                      ? formatEEPath(Paths.executionEnvironmentDetailOwners, {\n                          container: container.name,\n                        })\n                      : null,\n                  }\n                : null,\n              tab === 'owners' && groupId\n                ? { name: t`Group ${groupId}` }\n                : null,\n            ].filter(Boolean)}\n          />\n        }\n        pageControls={this.props.pageControls}\n      >\n        {displaySignatures &&\n          this.props.container.pulp.repository.sign_state && (\n            <SignatureBadge\n              isCompact\n              signState={\n                this.props.container.pulp.repository.sign_state == 'signed'\n                  ? 'signed'\n                  : 'unsigned'\n              }\n            />\n          )}\n        {last_sync_task && (\n          <p className='hub-m-truncated'>\n            <Trans>\n              Last updated from registry {lastSynced({ last_sync_task })}\n            </Trans>{' '}\n            {lastSyncStatus({ last_sync_task })}\n          </p>\n        )}\n        <div style={{ height: '10px' }}>&nbsp;</div>\n        <Tooltip content={container.description}>\n          <p data-cy='description' className={'hub-m-truncated'}>\n            {container.description}\n          </p>\n        </Tooltip>\n\n        <span />\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={{ tab }}\n              updateParams={({ tab }) =>\n                this.props.updateState({ redirect: tab })\n              }\n            />\n          </div>\n        </div>\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  onCancel?: () => void;\n  onSave?: (string) => void;\n  clearErrors?: () => void;\n  group?: { name: string };\n  errorMessage?: ErrorMessagesType;\n}\n\ninterface IState {\n  name: string;\n}\n\nexport class GroupModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:\n        !this.props.group || !this.props.group.name\n          ? ''\n          : this.props.group.name,\n    };\n  }\n\n  render() {\n    const { onCancel, onSave, clearErrors } = this.props;\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        onClose={() => {\n          onCancel();\n        }}\n        isOpen={true}\n        title={t`Create a group`}\n        actions={[\n          <div key='create' data-cy='create-group-button'>\n            <Button\n              isDisabled={\n                this.state.name.length === 0 ||\n                (this.props.group && this.state.name === this.props.group.name)\n              }\n              key='create'\n              variant='primary'\n              onClick={() => onSave(this.state.name)}\n            >\n              {!this.props.group ? t`Create` : t`Save`}\n            </Button>\n          </div>,\n          <Button key='cancel' variant='link' onClick={() => onCancel()}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onSave(this.state.name);\n          }}\n        >\n          <FormGroup\n            isRequired={true}\n            key='name'\n            fieldId='name'\n            label={t`Name`}\n            helperTextInvalid={\n              !this.props.errorMessage ? null : this.props.errorMessage.name\n            }\n            validated={this.toError(!this.props.errorMessage)}\n          >\n            <TextInput\n              id='group_name'\n              value={this.state.name}\n              onChange={(value) => {\n                this.setState({ name: value });\n                clearErrors();\n              }}\n              type='text'\n              validated={this.toError(!this.props.errorMessage)}\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    return validated ? 'default' : 'error';\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { RoleAPI } from 'src/api';\nimport { LoadingPageSpinner, PermissionCategories } from 'src/components';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface IProps {\n  name: string;\n}\n\nexport const GroupRolePermissions = ({ name }: IProps) => {\n  const [role, setRole] = useState(null);\n\n  useEffect(() => {\n    RoleAPI.list({ name }).then(({ data }) => {\n      const [selectedRole] = data.results;\n      setRole(selectedRole);\n    });\n  }, []);\n\n  if (!role) {\n    return <LoadingPageSpinner />;\n  }\n\n  return (\n    <>\n      <p>{translateLockedRolesDescription(role.name, role.description)}</p>\n      <PermissionCategories\n        permissions={role.permissions}\n        showCustom={true}\n        showEmpty={false}\n      />\n    </>\n  );\n};\n","import { t } from '@lingui/macro';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport './helper-text.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  content: React.ReactNode;\n  header?: React.ReactNode;\n}\n\nexport class HelperText extends React.Component<IProps> {\n  render() {\n    return (\n      <Popover\n        aria-label={t`popover example`}\n        position={PopoverPosition.top}\n        bodyContent={this.props.content}\n        headerContent={this.props.header}\n      >\n        <Button iconPosition={'left'} variant={'plain'} className={'helper'}>\n          <OutlinedQuestionCircleIcon />\n        </Button>\n      </Popover>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Spinner, Tooltip } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CollectionVersion,\n  ImportDetailType,\n  ImportListType,\n  PulpStatus,\n} from 'src/api';\nimport { StatusIndicator } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport './my-imports.scss';\n\ninterface IProps {\n  empty: boolean;\n  task: ImportDetailType;\n  followMessages: boolean;\n  selectedImport: ImportListType;\n  loading: boolean;\n  apiError?: string;\n\n  setFollowMessages: (follow: boolean) => void;\n  hideCollectionName?: boolean;\n  collectionVersion?: CollectionVersion;\n}\n\nexport class ImportConsole extends React.Component<IProps> {\n  lastImport: React.RefObject<HTMLDivElement>;\n  isLoading = false;\n\n  constructor(props) {\n    super(props);\n\n    this.lastImport = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.followLogs();\n  }\n\n  componentDidMount() {\n    this.followLogs();\n  }\n\n  render() {\n    const { selectedImport, task, apiError, loading } = this.props;\n\n    if (loading || apiError) {\n      return (\n        <div className='hub-import-console'>\n          {selectedImport ? this.renderTitle(selectedImport) : null}\n          <div className='loading message-list'>\n            {apiError ? <div className='message'>{apiError}</div> : <Spinner />}\n          </div>\n        </div>\n      );\n    }\n\n    this.isLoading =\n      selectedImport.state === PulpStatus.running ||\n      selectedImport.state === PulpStatus.waiting;\n\n    return (\n      <div\n        className='hub-import-console pf-c-content'\n        data-cy={'ImportConsole'}\n      >\n        {this.renderTitle(selectedImport)}\n        <div className='message-list'>\n          <div\n            className={cx({\n              'follow-active': this.props.followMessages,\n              'log-follow-button': true,\n            })}\n          >\n            <Tooltip\n              position='left'\n              content={this.isLoading ? t`Follow logs` : t`Scroll to end`}\n            >\n              <span\n                onClick={() => this.handleScrollClick()}\n                className='fa fa-arrow-circle-down clickable'\n              />\n            </Tooltip>\n          </div>\n\n          {task.messages.map((x, i) => {\n            return this.renderMessage(x, i);\n          })}\n\n          {task.messages.length === 0 ? (\n            <div className='message'>\n              <span className='error'>{t`No task messages available`}</span>\n            </div>\n          ) : null}\n\n          {task.state === PulpStatus.completed && (\n            <div className='message'>\n              <br />\n              <span className='success'>{t`Done`}</span>\n            </div>\n          )}\n\n          {task.state === PulpStatus.failed && (\n            <div className='message'>\n              <br />\n              <span className='failed'>{t`Failed`}</span>\n            </div>\n          )}\n        </div>\n        <div className='last-message' key={'last'} ref={this.lastImport} />\n      </div>\n    );\n  }\n\n  private renderMessage(item, i) {\n    return (\n      <div className='message' key={i}>\n        <span className={item.level.toLowerCase()}>{item.message}&nbsp;</span>\n      </div>\n    );\n  }\n\n  private renderTitle(selectedImport) {\n    const { task, hideCollectionName, collectionVersion, empty } = this.props;\n\n    if (empty) {\n      return;\n    }\n\n    let collectionHead = (\n      <>\n        {selectedImport.namespace}.{selectedImport.name}\n      </>\n    );\n    let approvalStatus = t`waiting for import to finish`;\n\n    if (collectionVersion) {\n      const rlist = collectionVersion.repository_list;\n      if (rlist.includes(Constants.NOTCERTIFIED)) {\n        approvalStatus = t`rejected`;\n      } else if (rlist.includes(Constants.NEEDSREVIEW)) {\n        approvalStatus = t`waiting for approval`;\n      } else if (rlist.includes(Constants.PUBLISHED)) {\n        approvalStatus = t`approved`;\n      } else {\n        approvalStatus = t`could not be determined yet`;\n      }\n\n      collectionHead = (\n        <Link\n          className='title'\n          to={formatPath(\n            Paths.collectionByRepo,\n            {\n              namespace: selectedImport.namespace,\n              collection: selectedImport.name,\n              repo: rlist[0],\n            },\n            {\n              version: selectedImport.version,\n            },\n          )}\n        >\n          {selectedImport.namespace}.{selectedImport.name}\n        </Link>\n      );\n    }\n\n    return (\n      <div>\n        {!hideCollectionName && (\n          <div className='title-container'>{collectionHead}</div>\n        )}\n\n        <div className='title-bar'>\n          <div>\n            <span className='data-title'>{t`Status:`}</span>{' '}\n            <StatusIndicator type='secondary' status={selectedImport.state} />\n          </div>\n          <div>\n            <span className='data-title'>{t`Approval status:`}</span>{' '}\n            {approvalStatus}\n          </div>\n          <div>\n            <span className='data-title'>{t`Version:`}</span>{' '}\n            {selectedImport.version}\n          </div>\n\n          {task && task.error ? (\n            <div>\n              <span className='data-title'>{t`Error message:`}</span>{' '}\n              {task.error.code}\n              <pre>\n                <code>{task.error.description}</code>\n              </pre>\n              <pre>\n                <code>{task.error.traceback}</code>\n              </pre>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  private handleScrollClick() {\n    if (this.isLoading) {\n      this.props.setFollowMessages(!this.props.followMessages);\n    } else {\n      this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  private followLogs() {\n    if (this.props.followMessages && this.lastImport.current) {\n      window.requestAnimationFrame(() => {\n        this.lastImport.current.scrollIntoView({ behavior: 'smooth' });\n\n        if (!this.isLoading) {\n          this.props.setFollowMessages(false);\n        }\n      });\n    }\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Pagination, Toolbar } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport * as React from 'react';\nimport {\n  ImportListType,\n  MyNamespaceAPI,\n  NamespaceType,\n  PulpStatus,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AppliedFilters,\n  CompoundFilter,\n  LoadingPageSpinner,\n} from 'src/components';\nimport { Constants } from 'src/constants';\nimport { errorMessage, filterIsSet } from 'src/utilities';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { DateComponent, EmptyStateFilter, EmptyStateNoData } from '..';\nimport './my-imports.scss';\n\ninterface IProps {\n  importList: ImportListType[];\n  selectedImport: ImportListType;\n  numberOfResults: number;\n  loading: boolean;\n  params: {\n    page_size?: number;\n    page?: number;\n    keyword?: string;\n    namespace?: string;\n  };\n\n  selectImport: (x) => void;\n  updateParams: (filters) => void;\n  addAlert: (alert) => void;\n}\n\ninterface IState {\n  kwField: string;\n  inputText: string;\n  namespaces: NamespaceType[];\n}\n\nexport class ImportList extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kwField: '',\n      inputText: '',\n      namespaces: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadNamespaces(this.props.params.namespace);\n  }\n\n  render() {\n    const {\n      selectImport,\n      importList,\n      selectedImport,\n      numberOfResults,\n      params,\n      updateParams,\n      loading,\n    } = this.props;\n\n    return (\n      <div className='import-list'>\n        {this.renderApiSearchAhead()}\n        <Toolbar>\n          <CompoundFilter\n            inputText={this.state.inputText}\n            onChange={(text) => this.setState({ inputText: text })}\n            updateParams={(p) => this.props.updateParams(p)}\n            params={params}\n            filterConfig={[\n              {\n                id: 'keywords',\n                title: t`Name`,\n              },\n              {\n                id: 'state',\n                title: t`Status`,\n                inputType: 'select',\n                options: [\n                  {\n                    id: 'completed',\n                    title: t`Completed`,\n                  },\n                  {\n                    id: 'failed',\n                    title: t`Failed`,\n                  },\n                  {\n                    id: 'running',\n                    title: t`Running`,\n                  },\n                  {\n                    id: 'waiting',\n                    title: t`Waiting`,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Toolbar>\n\n        <AppliedFilters\n          updateParams={(p) => {\n            this.props.updateParams(p);\n            this.setState({ inputText: '' });\n          }}\n          params={params}\n          ignoredParams={['page_size', 'page', 'sort', 'ordering', 'namespace']}\n          niceNames={{\n            keywords: t`Name`,\n            state: t`Status`,\n          }}\n        />\n\n        <div data-cy='import-list-data'>\n          {this.renderList(selectImport, importList, selectedImport, loading)}\n        </div>\n        {this.props.params.namespace && (\n          <Pagination\n            itemCount={numberOfResults}\n            perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n            page={params.page || 1}\n            onSetPage={(_, p) =>\n              updateParams(ParamHelper.setParam(params, 'page', p))\n            }\n            onPerPageSelect={(_, p) => {\n              updateParams({ ...params, page: 1, page_size: p });\n            }}\n            isCompact={true}\n          />\n        )}\n      </div>\n    );\n  }\n\n  private renderList(selectImport, importList, selectedImport, loading) {\n    if (!this.props.params.namespace) {\n      return (\n        <EmptyStateNoData title={t`No namespace selected.`} description={''} />\n      );\n    }\n\n    if (loading) {\n      return (\n        <div className='loading'>\n          <LoadingPageSpinner />\n        </div>\n      );\n    }\n\n    if (\n      importList.length === 0 &&\n      !filterIsSet(this.props.params, ['keywords', 'state'])\n    ) {\n      return (\n        <EmptyStateNoData\n          title={t`No imports`}\n          description={t`There have not been any imports on this namespace.`}\n        />\n      );\n    } else if (importList.length === 0) {\n      return <EmptyStateFilter />;\n    }\n\n    return (\n      <div>\n        {importList.map((item) => {\n          return (\n            <div\n              onClick={() => selectImport(item)}\n              key={item.id}\n              className={cx({\n                clickable: true,\n                'list-container': true,\n                'hub-c-toolbar__item-selected-item':\n                  item.type === selectedImport.type &&\n                  item.id === selectedImport.id,\n              })}\n              data-cy={`ImportList-row-${item.name}`}\n            >\n              <div className='left'>\n                <i className={this.getStatusClass(item.state)} />\n              </div>\n              <div className='right'>{this.renderDescription(item)}</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderDescription(item) {\n    return (\n      <div>\n        <div>\n          <span data-cy='item-name'>{item.name}</span>{' '}\n          {item.version ? 'v' + item.version : ''}\n        </div>\n        <div className='sub-text'>\n          Status: {item.state}{' '}\n          {item.finished_at ? <DateComponent date={item.finished_at} /> : null}\n        </div>\n      </div>\n    );\n  }\n\n  private getStatusClass(state) {\n    const statusClass = 'fa status-icon ';\n\n    switch (state) {\n      case PulpStatus.running:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.waiting:\n        return statusClass + 'fa-spin fa-spinner warning';\n      case PulpStatus.completed:\n        return statusClass + 'fa-circle success';\n      default:\n        return statusClass + 'fa-circle failed';\n    }\n  }\n\n  private loadNamespaces(namespace_filter) {\n    if (!namespace_filter) {\n      namespace_filter = '';\n    }\n    MyNamespaceAPI.list({ page_size: 10, keywords: namespace_filter })\n      .then((result) => {\n        this.setState({ namespaces: result.data.data });\n      })\n      .catch((e) =>\n        this.props.addAlert({\n          variant: 'danger',\n          title: t`Namespaces list could not be displayed.`,\n          description: errorMessage(e.status, e.statusText),\n        }),\n      );\n  }\n\n  private renderApiSearchAhead() {\n    return (\n      <div className='namespace-selector-wrapper'>\n        <div className='label'>{t`Namespace`}</div>\n        <div className='selector'>\n          <APISearchTypeAhead\n            loadResults={(name) => this.loadNamespaces(name)}\n            onSelect={(event, value) => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                value,\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            onClear={() => {\n              const params = ParamHelper.setParam(\n                this.props.params,\n                'namespace',\n                '',\n              );\n              params['page'] = 1;\n              this.props.updateParams(params);\n            }}\n            placeholderText={t`Select namespace`}\n            selections={[{ id: -1, name: this.props.params.namespace }]}\n            results={this.state.namespaces}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, Modal } from '@patternfly/react-core';\nimport { FolderOpenIcon, SpinnerIcon } from '@patternfly/react-icons';\nimport axios from 'axios';\nimport * as React from 'react';\nimport {\n  CollectionAPI,\n  CollectionListType,\n  CollectionUploadType,\n} from 'src/api';\nimport './import-modal.scss';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionListType;\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  uploadProgress: number;\n  uploadStatus: Status;\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: ReturnType<typeof CollectionAPI.getCancelToken>;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+-[0-9a-z_]+-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n    };\n  }\n  render() {\n    const { isOpen, collection } = this.props;\n\n    const { file, errors, uploadProgress, uploadStatus } = this.state;\n    return (\n      <Modal\n        variant='small'\n        title={\n          collection ? t`New version of ${collection.name}` : t`New collection`\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={!this.canUpload()}\n            data-cy={'confirm-upload'}\n          >\n            {t`Upload`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={(e) => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : t`Select file`}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className='file-error-messages'>\n              <i className='pficon-error-circle-o' /> {errors}\n            </span>\n          ) : null}\n        </div>\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors) {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin'></SpinnerIcon>;\n      default:\n        return <FolderOpenIcon></FolderOpenIcon>;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: t`Please select no more than one file.`,\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      this.setState({\n        errors: t`Invalid file format.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: t`Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: t`The collection you have selected doesn't appear to match ${collection.name}`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: t`The collection you have selected does not match this namespace.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  saveFile() {\n    this.setState({ uploadStatus: Status.uploading });\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      'inbound-' + this.props.namespace,\n      artifact,\n      (e) => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then((response) => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch((errors) => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (const err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  t`API error. Status code: ${err.status}`,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = t`API error. Status code: ${errors.response.status}`;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n        });\n      })\n      .finally(() => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = t`Collection upload canceled`;\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\n","import cx from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport interface IProps {\n  /** List of tabs */\n  tabs: {\n    active?: boolean;\n    link: string;\n    title: string;\n  }[];\n}\n\nconst renderTab = ({ link, title, active = false }) => (\n  <li\n    className={cx({\n      'pf-c-tabs__item': true,\n      'pf-m-current': active,\n    })}\n    key={title}\n  >\n    <Link to={link} className='pf-c-tabs__link'>\n      <span className='pf-c-tabs__item-text'>{title}</span>\n    </Link>\n  </li>\n);\n\n// We're not using the Tab react component because they don't support links.\nexport const LinkTabs = ({ tabs }: IProps) => (\n  <div className='pf-c-tabs'>\n    <ul className='pf-c-tabs__list'>{tabs.map((tab) => renderTab(tab))}</ul>\n  </div>\n);\n","import { Bullseye, Spinner } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport class LoadingPageSpinner extends React.Component {\n  render() {\n    return (\n      <Bullseye style={{ width: '100%', height: '100%' }}>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n}\n","import { Skeleton, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { LoadingPageSpinner, Main } from 'src/components';\n\nexport class LoadingPageWithHeader extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <section\n          className={\n            'pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light'\n          }\n        >\n          <Title headingLevel='h1'>\n            <Skeleton></Skeleton>\n          </Title>\n        </section>\n        <Main>\n          <section>\n            <LoadingPageSpinner></LoadingPageSpinner>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { CollectionCount } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { getRepoUrl } from 'src/utilities';\nimport { ClipboardCopy, DateComponent, EmptyStateNoData, SortTable } from '..';\n\ninterface IProps {\n  repositories: {\n    base_path: string;\n    name: string;\n    repository: {\n      content_count: number;\n      name: string;\n      pulp_last_updated: string;\n    };\n  }[];\n  updateParams: (p) => void;\n}\n\nexport class LocalRepositoryTable extends React.Component<IProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { repositories } = this.props;\n    if (repositories.length === 0) {\n      return (\n        <EmptyStateNoData\n          title={t`No local repositories yet`}\n          description={''}\n        />\n      );\n    }\n    return this.renderTable(repositories);\n  }\n\n  private renderTable(repositories) {\n    const params = { sort: 'repository' };\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Distribution name`,\n          type: 'none',\n          id: 'distribution',\n        },\n        {\n          title: t`Repository name`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Collection count`,\n          type: 'none',\n          id: 'content',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Distribution URL`,\n          type: 'none',\n          id: 'ansible_cli_url',\n        },\n        {\n          title: t`CLI configuration`,\n          type: 'none',\n          id: 'cli_config',\n        },\n      ],\n    };\n\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE) {\n      sortTableOptions.headers = sortTableOptions.headers.filter((object) => {\n        return object.id !== 'updated_at' && object.id !== 'cli_config';\n      });\n    }\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={(p) => console.log(p)}\n        />\n        <tbody>\n          {repositories.map((distribution) => this.renderRow(distribution))}\n        </tbody>\n      </table>\n    );\n  }\n\n  private renderRow(distribution) {\n    const cliConfig = [\n      '[galaxy]',\n      `server_list = ${distribution.repository.name}_repo`,\n      '',\n      `[galaxy_server.${distribution.repository.name}_repo]`,\n      `url=${getRepoUrl(distribution.base_path)}`,\n      'token=<put your token here>',\n    ];\n\n    return (\n      <tr key={distribution.name}>\n        <td>{distribution.name}</td>\n        <td>{distribution.repository.name}</td>\n        <td>\n          <CollectionCount distributionPath={distribution.base_path} />\n        </td>\n        {DEPLOYMENT_MODE ===\n        Constants.INSIGHTS_DEPLOYMENT_MODE ? null : distribution.repository\n            .pulp_last_updated ? (\n          <td>\n            <DateComponent date={distribution.repository.pulp_last_updated} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>\n          <ClipboardCopy isReadOnly>\n            {getRepoUrl(distribution.base_path)}\n          </ClipboardCopy>\n        </td>\n        {DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE ? null : (\n          <td>\n            <ClipboardCopy isCode isReadOnly variant={'expansion'}>\n              {cliConfig.join('\\n')}\n            </ClipboardCopy>\n          </td>\n        )}\n      </tr>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\n\ninterface IProps {\n  button?: boolean;\n  next?: string;\n}\n\nexport const LoginLink = ({ button, next }: IProps) => {\n  const { featureFlags } = useContext();\n  const className = button ? 'pf-c-button pf-m-primary' : '';\n\n  // NOTE: also update AuthHandler#render (src/loaders/standalone/routes.tsx) when changing this\n  if (featureFlags?.external_authentication && UI_EXTERNAL_LOGIN_URI) {\n    return <a className={className} href={UI_EXTERNAL_LOGIN_URI}>{t`Login`}</a>;\n  } else {\n    return (\n      <Link\n        className={className}\n        to={formatPath(Paths.login, {}, { next })}\n      >{t`Login`}</Link>\n    );\n  }\n};\n","import * as React from 'react';\n// had to declare *.svg in src/index.d.ts\nimport DefaultLogo from 'src/../static/images/default-logo.svg';\n\ninterface IProps {\n  // size should be css length measurment: '100px'\n  size: string;\n  width?: string;\n  image: string;\n  alt: string;\n  className?: string;\n  unlockWidth?: boolean;\n  fallbackToDefault?: boolean;\n  flexGrow?: boolean;\n}\n\ninterface IState {\n  failed: boolean;\n}\n\nexport class Logo extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { failed: false };\n  }\n\n  render() {\n    const {\n      alt,\n      className,\n      fallbackToDefault,\n      image,\n      size,\n      unlockWidth,\n      width,\n      flexGrow,\n    } = this.props;\n    const { failed } = this.state;\n\n    const style = {\n      height: size,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      width: width,\n    };\n\n    if (flexGrow) {\n      style['flexGrow'] = 1;\n    }\n\n    if (unlockWidth) {\n      style['minWidth'] = size;\n    } else {\n      style['width'] = size;\n    }\n\n    // use inline css so we can set size\n    return (\n      <div className={className} style={style}>\n        <img\n          style={{ objectFit: 'contain', maxHeight: size }}\n          src={failed ? DefaultLogo : image || DefaultLogo}\n          alt={alt}\n          onError={\n            fallbackToDefault\n              ? () => this.setState({ failed: true })\n              : () => null\n          }\n        />\n      </div>\n    );\n  }\n}\n","import cx from 'classnames';\nimport React from 'react';\n\ninterface IProps extends React.HTMLProps<HTMLElement> {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Main = ({ children, className, ...extra }: IProps) => (\n  <section\n    className={cx(\n      'pf-l-page__main-section',\n      'pf-c-page__main-section',\n      className,\n    )}\n    {...extra}\n  >\n    {children}\n  </section>\n);\n","import { t } from '@lingui/macro';\nimport { Form, FormGroup, TextArea } from '@patternfly/react-core';\nimport * as React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './markdown-editor.scss';\n\ninterface IProps {\n  text: string;\n  placeholder: string;\n  helperText: string;\n  updateText: (value) => void;\n  editing: boolean;\n}\n\nexport class MarkdownEditor extends React.Component<IProps> {\n  render() {\n    const { text, placeholder, updateText, helperText, editing } = this.props;\n\n    return (\n      <Form>\n        <div className='markdown-editor'>\n          {editing && (\n            <div className='column editor'>\n              <FormGroup fieldId='resources' helperText={helperText}>\n                <div id='markdown-title'>{t`Raw Markdown`}</div>\n                <TextArea\n                  aria-labelledby='markdown-title'\n                  id='resources'\n                  value={text}\n                  onChange={(value) => updateText(value)}\n                  placeholder={placeholder}\n                />\n              </FormGroup>\n            </div>\n          )}\n          <div className='column preview-container'>\n            {editing && t`Preview`}\n            <div className={editing ? 'pf-c-content preview' : 'pf-c-content'}>\n              <ReactMarkdown>{text || placeholder}</ReactMarkdown>\n            </div>\n          </div>\n        </div>\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Tooltip,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Logo } from 'src/components';\nimport './cards.scss';\n\n// Use snake case to match field types provided py python API so that the\n// spread operator can be used.\ninterface IProps {\n  avatar_url: string;\n  name: string;\n  company: string;\n  namespaceURL?: string;\n}\n\nexport const NamespaceCard = ({\n  avatar_url,\n  name,\n  company,\n  namespaceURL,\n}: IProps) => {\n  const MAX_DESCRIPTION_LENGTH = 26;\n  return (\n    <Card className='hub-c-card-ns-container'>\n      <CardHeader>\n        <CardHeaderMain>\n          <Logo\n            alt={t`${company} logo`}\n            fallbackToDefault\n            image={avatar_url}\n            size='40px'\n            unlockWidth\n          />\n        </CardHeaderMain>\n      </CardHeader>\n      <Tooltip content={company || name}>\n        <CardTitle>\n          {getDescription(company || name, MAX_DESCRIPTION_LENGTH)}\n        </CardTitle>\n      </Tooltip>\n      <Tooltip content={name}>\n        <CardBody>{getDescription(name, MAX_DESCRIPTION_LENGTH)}</CardBody>\n      </Tooltip>\n\n      {namespaceURL && (\n        <CardFooter>\n          <Link to={namespaceURL}>{t`View collections`}</Link>\n        </CardFooter>\n      )}\n    </Card>\n  );\n};\n\nfunction getDescription(d: string, MAX_DESCRIPTION_LENGTH) {\n  if (!d) {\n    return '';\n  }\n  if (d.length > MAX_DESCRIPTION_LENGTH) {\n    return d.slice(0, MAX_DESCRIPTION_LENGTH) + '...';\n  } else {\n    return d;\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Form,\n  FormGroup,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  ExternalLinkAltIcon,\n  PlusCircleIcon,\n  TrashIcon,\n} from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { NamespaceType } from 'src/api';\nimport { NamespaceCard } from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { ErrorMessagesType, validateURLHelper } from 'src/utilities';\nimport './namespace-form.scss';\n\ninterface IProps {\n  namespace: NamespaceType;\n  errorMessages: ErrorMessagesType;\n\n  updateNamespace: (namespace) => void;\n}\n\nexport class NamespaceForm extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { namespace, errorMessages } = this.props;\n\n    if (!namespace) {\n      return null;\n    }\n\n    return (\n      <Form>\n        <div className='hub-card-row'>\n          <div className='fields'>\n            <FormGroup fieldId='name' label={t`Name`} isRequired>\n              <TextInput\n                isRequired\n                isDisabled\n                id='name'\n                type='text'\n                value={namespace.name}\n              />\n            </FormGroup>\n\n            <br />\n\n            <FormGroup\n              fieldId='company'\n              label={t`Company name`}\n              helperTextInvalid={errorMessages['company']}\n              validated={this.toError(!('company' in errorMessages))}\n            >\n              <TextInput\n                validated={this.toError(!('company' in errorMessages))}\n                id='company'\n                type='text'\n                value={namespace.company}\n                onChange={(value, event) => this.updateField(value, event)}\n              />\n            </FormGroup>\n          </div>\n          <div className='card'>\n            <NamespaceCard {...namespace} />\n          </div>\n        </div>\n\n        <FormGroup fieldId='none' label={t`Namespace owners`}>\n          <Alert\n            isInline\n            variant='info'\n            title={\n              <Trans>\n                Moved to the{' '}\n                <Link\n                  target='_blank'\n                  to={formatPath(\n                    Paths.namespaceByRepo,\n                    {\n                      repo: this.context.selectedRepo,\n                      namespace: namespace.name,\n                    },\n                    { tab: 'owners' },\n                  )}\n                >\n                  Namespace owners\n                </Link>{' '}\n                <ExternalLinkAltIcon /> tab\n              </Trans>\n            }\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='avatar_url'\n          label={t`Logo URL`}\n          helperTextInvalid={errorMessages['avatar_url']}\n          validated={this.toError(!('avatar_url' in errorMessages))}\n        >\n          <TextInput\n            validated={this.toError(!('avatar_url' in errorMessages))}\n            id='avatar_url'\n            type='text'\n            value={namespace.avatar_url}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='description'\n          label={t`Description`}\n          helperTextInvalid={errorMessages['description']}\n          validated={this.toError(!('description' in errorMessages))}\n        >\n          <TextArea\n            validated={this.toError(!('description' in errorMessages))}\n            id='description'\n            type='text'\n            value={namespace.description}\n            onChange={(value, event) => this.updateField(value, event)}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId='links'\n          label={t`Useful links`}\n          helperTextInvalid={this.getLinksErrorText(errorMessages)}\n          validated={this.toError(\n            !('links__url' in errorMessages || 'links__name' in errorMessages),\n          )}\n        >\n          {namespace.links.map((link, index) =>\n            this.renderLinkGroup(link, index),\n          )}\n\n          {namespace.links.length === 0 && (\n            <PlusCircleIcon\n              className='clickable'\n              onClick={() => this.addLink()}\n              size='sm'\n            />\n          )}\n        </FormGroup>\n      </Form>\n    );\n  }\n\n  private getLinksErrorText(errorMessages): string {\n    const msg: string[] = [];\n    if ('links__name' in errorMessages) {\n      msg.push(t`Text: ${errorMessages['links__name']}`);\n    }\n    if ('links__url' in errorMessages) {\n      msg.push(t`URL: ${errorMessages['links__url']}`);\n    }\n\n    return msg.join(' ');\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private updateField(value, event) {\n    const update = { ...this.props.namespace };\n    update[event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private updateLink(index, value, event) {\n    const update = { ...this.props.namespace };\n    update.links[index][event.target.id] = value;\n    this.props.updateNamespace(update);\n  }\n\n  private removeLink(index) {\n    const update = { ...this.props.namespace };\n    update.links.splice(index, 1);\n    this.props.updateNamespace(update);\n  }\n\n  private addLink() {\n    const update = { ...this.props.namespace };\n    update.links.push({\n      name: '',\n      url: '',\n    });\n\n    this.props.updateNamespace(update);\n  }\n\n  public static validateName(link): {\n    validated: 'default' | 'error';\n    helperTextInvalid?: string;\n  } {\n    if (link.url) {\n      if (link.name) {\n        return { validated: 'default' };\n      } else {\n        return {\n          validated: 'error',\n          helperTextInvalid: t`Name must not be empty.`,\n        };\n      }\n    }\n\n    // if link url is empty, there is no need to insert name because the link data will be discarded\n    return { validated: 'default' };\n  }\n\n  public static validateUrl(link): ReturnType<typeof validateURLHelper> {\n    if (link.url) {\n      // only validate url if input is not blank, blank inputs are thrown away\n      return validateURLHelper(undefined, link.url);\n    }\n\n    if (link.name) {\n      return {\n        validated: 'error',\n        helperTextInvalid: t`URL must not be empty.`,\n      };\n    }\n\n    return { validated: 'default' };\n  }\n\n  private renderLinkGroup(link, index) {\n    const last = index === this.props.namespace.links.length - 1;\n    return (\n      <div className='useful-links' key={index}>\n        <div className='link-name'>\n          <FormGroup fieldId={'name'} {...NamespaceForm.validateName(link)}>\n            <TextInput\n              id='name'\n              type='text'\n              placeholder={t`Link text`}\n              value={link.name}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateName(link).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-url'>\n          <FormGroup fieldId={'link'} {...NamespaceForm.validateUrl(link)}>\n            <TextInput\n              id='url'\n              type='text'\n              placeholder={t`Link URL`}\n              value={link.url}\n              onChange={(value, event) => this.updateLink(index, value, event)}\n              validated={NamespaceForm.validateUrl(link.url).validated}\n            />\n          </FormGroup>\n        </div>\n        <div className='link-button'>\n          <div className='link-container'>\n            <TrashIcon\n              className='clickable'\n              onClick={() => this.removeLink(index)}\n              size='sm'\n            />\n          </div>\n\n          <div className='link-container'>\n            {last && (\n              <PlusCircleIcon\n                className='clickable'\n                onClick={() => this.addLink()}\n                size='sm'\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Modal,\n  ModalVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { NamespaceAPI } from 'src/api';\nimport { HelperText } from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  isOpen: boolean;\n  toggleModal: object;\n  onCreateSuccess: (result) => void;\n}\n\ninterface IState {\n  newNamespaceName: string;\n  newNamespaceNameValid: boolean;\n  errorMessages: ErrorMessagesType;\n}\n\nexport class NamespaceModal extends React.Component<IProps, IState> {\n  toggleModal;\n\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = this.props.toggleModal;\n    this.state = {\n      newNamespaceName: '',\n      newNamespaceNameValid: true,\n      errorMessages: {},\n    };\n  }\n\n  private newNamespaceNameIsValid() {\n    const error = this.state.errorMessages;\n    const name: string = this.state.newNamespaceName;\n\n    if (name == '') {\n      error['name'] = t`Please, provide the namespace name`;\n    } else if (!/^[a-zA-Z0-9_]+$/.test(name)) {\n      error['name'] = t`Name can only contain letters and numbers`;\n    } else if (name.length <= 2) {\n      error['name'] = t`Name must be longer than 2 characters`;\n    } else if (name.startsWith('_')) {\n      error['name'] = t`Name cannot begin with '_'`;\n    } else {\n      delete error['name'];\n    }\n\n    this.setState({\n      newNamespaceNameValid: !('name' in error),\n      errorMessages: error,\n    });\n  }\n\n  private handleSubmit = () => {\n    const data = {\n      name: this.state.newNamespaceName,\n      groups: [],\n    };\n    NamespaceAPI.create(data)\n      .then(() => {\n        this.toggleModal();\n        this.setState({\n          newNamespaceName: '',\n          errorMessages: {},\n        });\n        this.props.onCreateSuccess(data);\n      })\n      .catch((error) => {\n        const result = error.response;\n        const messages = this.state.errorMessages;\n        for (const e of result.data.errors) {\n          messages[e.source.parameter] = e.detail;\n        }\n        this.setState({\n          errorMessages: messages,\n          newNamespaceNameValid: !('name' in messages),\n        });\n      });\n  };\n\n  render() {\n    const { newNamespaceName, newNamespaceNameValid } = this.state;\n\n    return (\n      <Modal\n        variant={ModalVariant.medium}\n        title={t`Create a new namespace`}\n        isOpen={this.props.isOpen}\n        onClose={this.toggleModal}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={this.handleSubmit}\n            isDisabled={!newNamespaceName || !newNamespaceNameValid}\n          >\n            {t`Create`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={this.toggleModal}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.handleSubmit();\n          }}\n        >\n          <FormGroup\n            label={t`Name`}\n            isRequired\n            fieldId='name'\n            helperTextInvalid={this.state.errorMessages['name']}\n            validated={this.toError(this.state.newNamespaceNameValid)}\n            labelIcon={\n              <HelperText\n                content={t`Namespace names are limited to alphanumeric characters and underscores, must have a minimum length of 2 characters and cannot start with an ‘_’.`}\n                header={t`Namespace name`}\n              />\n            }\n          >\n            <InputGroup>\n              <TextInput\n                validated={this.toError(this.state.newNamespaceNameValid)}\n                isRequired\n                type='text'\n                id='newNamespaceName'\n                name='newNamespaceName'\n                value={newNamespaceName}\n                onChange={(value) => {\n                  this.setState({ newNamespaceName: value }, () => {\n                    this.newNamespaceNameIsValid();\n                  });\n                }}\n              />\n            </InputGroup>\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n}\n","import { plural } from '@lingui/macro';\nimport React from 'react';\n\ninterface IProps {\n  number: number;\n  newline?: boolean;\n  label: string;\n}\n\nfunction roundNumber(n: number): string {\n  if (n < 1000) {\n    // returns 1 to 999\n    return n.toString();\n  } else if (n < 10000) {\n    // returns 1K to 9.9K\n    return (Math.floor(n / 100) / 10).toString() + 'K';\n  } else if (n < 1000000) {\n    // returns 10K to 999K\n    return Math.floor(n / 1000).toString() + 'K';\n  } else if (n < 100000000) {\n    // returns 1M to 9.9M\n    return (Math.floor(n / 100000) / 10).toString() + 'M';\n  } else if (n < 1000000000) {\n    return Math.floor(n / 1000000).toString() + 'M';\n  }\n\n  // If larger than a billion, don't even bother.\n  return '1B+';\n}\n\nconst NumericLabel = ({ number, newline, label }: IProps) => {\n  let numberElem = <span key='number'>{roundNumber(number)} </span>;\n  let labelElem = (\n    <span key='label' className='hub-numeric-label-label'>\n      {label}\n    </span>\n  );\n\n  if (newline) {\n    numberElem = <div>{numberElem}</div>;\n    labelElem = <div>{labelElem}</div>;\n  }\n\n  return (\n    <div>\n      {numberElem}\n      {labelElem}\n    </div>\n  );\n};\n\ninterface ICNLProps {\n  count: number;\n  newline?: boolean;\n  type: string;\n}\n\nconst label = (count, type) =>\n  ({\n    module: plural(count, {\n      one: 'Module',\n      other: 'Modules',\n    }),\n    role: plural(count, {\n      one: 'Role',\n      other: 'Roles',\n    }),\n    plugin: plural(count, {\n      one: 'Plugin',\n      other: 'Plugins',\n    }),\n    dependency: plural(count, {\n      one: 'Dependency',\n      other: 'Dependencies',\n    }),\n  }[type] || type);\n\nexport const CollectionNumericLabel = ({ count, newline, type }: ICNLProps) => (\n  <NumericLabel number={count} newline={newline} label={label(count, type)} />\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  DropdownItem,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { GroupType, RoleType } from 'src/api';\nimport {\n  DeleteModal,\n  EmptyStateNoData,\n  ExpandableRow,\n  GroupRolePermissions,\n  ListItemActions,\n  LoadingPageSpinner,\n  PreviewRoles,\n  RoleListTable,\n  SelectGroup,\n  SelectRoles,\n  SortTable,\n  WizardModal,\n} from 'src/components';\nimport { ParamHelper } from 'src/utilities';\n\ninterface IProps {\n  group?: GroupType;\n  groups: GroupType[];\n  name: string;\n  pulpObjectType: string;\n  selectRolesMessage: string;\n  urlPrefix: string;\n  canEditOwners: boolean;\n  addGroup?: (group, roles) => void;\n  removeGroup?: (group) => void;\n  addRole?: (role, groups) => void;\n  removeRole?: (role, group) => void;\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  updateProps: (prop) => void;\n}\n\nexport class OwnersTab extends React.Component<IProps> {\n  render() {\n    const { groups, group, canEditOwners } = this.props;\n    const { showGroupRemoveModal, showGroupSelectWizard } = this.props;\n    const loading = !groups;\n    const noData = groups?.length === 0;\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: {},\n          })\n        }\n      >\n        {t`Select a group`}\n      </Button>\n    );\n\n    return loading ? (\n      <LoadingPageSpinner />\n    ) : (\n      <>\n        {showGroupRemoveModal ? this.renderGroupRemoveModal() : null}\n        {showGroupSelectWizard ? this.renderGroupSelectWizard() : null}\n\n        {noData ? (\n          <EmptyStateNoData\n            title={t`There are currently no owners assigned.`}\n            description={\n              canEditOwners\n                ? t`Please add an owner by using the button below.`\n                : ''\n            }\n            button={canEditOwners ? buttonAdd : null}\n          />\n        ) : group ? (\n          this.renderRoles({ group })\n        ) : (\n          this.renderGroups({ buttonAdd, groups })\n        )}\n      </>\n    );\n  }\n\n  private renderGroups({ buttonAdd, groups }) {\n    const { canEditOwners } = this.props;\n    const sortedGroups = sortBy(groups, 'name');\n\n    return (\n      <>\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <table\n          aria-label={t`Group list`}\n          className='hub-c-table-content pf-c-table'\n        >\n          <SortTable\n            options={{\n              headers: [\n                {\n                  title: t`Group`,\n                  type: 'none',\n                  id: 'name',\n                },\n                {\n                  title: '',\n                  type: 'none',\n                  id: 'kebab',\n                },\n              ],\n            }}\n            params={{}}\n            updateParams={() => null}\n          />\n          <tbody>\n            {sortedGroups.map((group, i) => this.renderGroupRow(group, i))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  private renderGroupRow(group, index: number) {\n    const { urlPrefix, canEditOwners } = this.props;\n\n    const dropdownItems = [\n      canEditOwners && (\n        <DropdownItem\n          key='remove'\n          onClick={() => {\n            this.props.updateProps({\n              showGroupRemoveModal: group,\n            });\n          }}\n        >\n          <Trans>Remove group</Trans>\n        </DropdownItem>\n      ),\n    ];\n\n    return (\n      <tr data-cy={`OwnersTab-row-${group.name}`} key={index}>\n        <td>\n          <Link\n            to={\n              urlPrefix +\n              '?' +\n              ParamHelper.getQueryString({\n                group: group?.id || group?.name,\n                tab: 'owners',\n              })\n            }\n          >\n            {group.name}\n          </Link>\n        </td>\n        <ListItemActions kebabItems={dropdownItems} />\n      </tr>\n    );\n  }\n\n  private renderRoles({ group }) {\n    const { canEditOwners } = this.props;\n    const { showRoleRemoveModal, showRoleSelectWizard } = this.props;\n    const roles = group?.object_roles;\n    const sortedRoles = sortBy(roles);\n\n    if (!group) {\n      return null;\n    }\n\n    const buttonAdd = (\n      <Button\n        onClick={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: {},\n          })\n        }\n      >\n        {t`Add roles`}\n      </Button>\n    );\n\n    return (\n      <>\n        {showRoleRemoveModal ? this.renderRoleRemoveModal(group) : null}\n        {showRoleSelectWizard ? this.renderRoleSelectWizard(group) : null}\n\n        {canEditOwners && (\n          <div>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>{buttonAdd}</ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n          </div>\n        )}\n\n        <RoleListTable\n          params={{}}\n          updateParams={() => null}\n          tableHeader={{\n            headers: [\n              {\n                title: '',\n                type: 'none',\n                id: 'expander',\n              },\n              {\n                title: t`Role`,\n                type: 'none',\n                id: 'role',\n              },\n              {\n                title: '',\n                type: 'none',\n                id: 'kebab',\n              },\n            ],\n          }}\n        >\n          {sortedRoles.map((role, i) => (\n            <ExpandableRow\n              key={i}\n              rowIndex={i}\n              expandableRowContent={<GroupRolePermissions name={role} />}\n              data-cy={`RoleListTable-ExpandableRow-row-${role}`}\n            >\n              <td>{role}</td>\n              <ListItemActions\n                kebabItems={[\n                  canEditOwners && (\n                    <DropdownItem\n                      key='remove-role'\n                      onClick={() =>\n                        this.props.updateProps({ showRoleRemoveModal: role })\n                      }\n                    >\n                      {t`Remove role`}\n                    </DropdownItem>\n                  ),\n                ]}\n              />\n            </ExpandableRow>\n          ))}\n        </RoleListTable>\n      </>\n    );\n  }\n\n  private renderGroupRemoveModal() {\n    const group = this.props.showGroupRemoveModal as GroupType;\n    const groupname = group.name;\n    const name = this.props.name;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showGroupRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeGroup(group)}\n        title={t`Remove group ${groupname}?`}\n      >\n        <Trans>\n          You are about to remove <b>{groupname}</b> from <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderRoleRemoveModal(group) {\n    const groupname = group.name;\n    const name = this.props.name;\n    const role = this.props.showRoleRemoveModal;\n\n    return (\n      <DeleteModal\n        cancelAction={() =>\n          this.props.updateProps({ showRoleRemoveModal: null })\n        }\n        deleteAction={() => this.props.removeRole(role, group)}\n        title={t`Remove role ${role}?`}\n      >\n        <Trans>\n          You are about to remove <b>{role}</b> from <b>{groupname}</b> for{' '}\n          <b>{name}</b>.\n          <br />\n          This will also remove all associated permissions.\n        </Trans>\n      </DeleteModal>\n    );\n  }\n\n  private renderGroupSelectWizard() {\n    const { groups, pulpObjectType, selectRolesMessage } = this.props;\n    const {\n      showGroupSelectWizard: { group, roles = [] },\n    } = this.props;\n\n    const hasGroup = !!group;\n    const hasRoles = !!roles?.length;\n\n    // if we enable edit, find group in groups, convert object_roles name to { role: name }\n    const assignedRoles = [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select a group`,\n        component: (\n          <SelectGroup\n            assignedGroups={groups}\n            selectedGroup={group}\n            updateGroup={(group) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasGroup,\n      },\n      {\n        id: 1,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({\n                showGroupSelectWizard: { group, roles },\n              })\n            }\n            message={selectRolesMessage}\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        canJumpTo: hasGroup,\n        enableNext: hasGroup && hasRoles,\n      },\n      {\n        id: 2,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasGroup && hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select a group`}\n        onClose={() =>\n          this.props.updateProps({\n            showGroupSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addGroup(group, roles)}\n      />\n    );\n  }\n\n  private renderRoleSelectWizard(group) {\n    const { pulpObjectType } = this.props;\n    const {\n      showRoleSelectWizard: { roles = [] },\n    } = this.props;\n\n    const hasRoles = !!roles?.length;\n\n    const assignedRoles =\n      group?.object_roles?.map((name) => ({ role: name })) || [];\n\n    const steps = [\n      {\n        id: 0,\n        name: t`Select role(s)`,\n        component: (\n          <SelectRoles\n            assignedRoles={assignedRoles}\n            selectedRoles={roles}\n            onRolesUpdate={(roles) =>\n              this.props.updateProps({ showRoleSelectWizard: { roles } })\n            }\n            pulpObjectType={pulpObjectType}\n          />\n        ),\n        backButtonText: t`Cancel`,\n        enableNext: hasRoles,\n      },\n      {\n        id: 1,\n        name: t`Preview`,\n        component: <PreviewRoles group={group} selectedRoles={roles} />,\n        nextButtonText: t`Add`,\n        canJumpTo: hasRoles,\n        isFinished: true,\n      },\n    ];\n\n    return (\n      <WizardModal\n        steps={steps}\n        title={t`Select role(s)`}\n        onClose={() =>\n          this.props.updateProps({\n            showRoleSelectWizard: null,\n          })\n        }\n        onSave={() => this.props.addRole(group, roles)}\n      />\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Pagination as PaginationPF,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\ninterface IProps {\n  /** Number of total items returned by the query */\n  count: number;\n\n  /** Current page params **/\n  params: {\n    page_size?: number;\n    page?: number;\n  };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Applies the correct styling for pagination at the top of the page*/\n  isTop?: boolean;\n\n  /** Applies styling to make pagination compact */\n  isCompact?: boolean;\n\n  /** Options for the number of items that can be displayed per page */\n  perPageOptions?: number[];\n}\n\n// AAP-3737 - support both \"1 - 2 of 3\" and \"3 的 1 - 2\"\nconst ToggleTemplate = ({\n  firstIndex = 0,\n  lastIndex = 0,\n  itemCount = 0,\n}: {\n  firstIndex?: number;\n  lastIndex?: number;\n  itemCount?: number;\n}) => (\n  <Trans>\n    <b>\n      {firstIndex} - {lastIndex}\n    </b>{' '}\n    of <b>{itemCount}</b>\n  </Trans>\n);\n\nexport const Pagination = ({\n  count,\n  params,\n  updateParams,\n  isTop,\n  perPageOptions,\n  isCompact,\n}: IProps) => {\n  const extraProps = {};\n  if (!isTop) {\n    extraProps['widgetId'] = 'pagination-options-menu-bottom';\n    extraProps['variant'] = PaginationVariant.bottom;\n  }\n\n  return (\n    <PaginationPF\n      itemCount={count}\n      perPage={params.page_size || Constants.DEFAULT_PAGE_SIZE}\n      page={params.page || 1}\n      onSetPage={(_, p) =>\n        updateParams(ParamHelper.setParam(params, 'page', p))\n      }\n      onPerPageSelect={(_, p) => {\n        updateParams({ ...params, page: 1, page_size: p });\n      }}\n      {...extraProps}\n      isCompact={isTop || isCompact}\n      perPageOptions={mapPerPageOptions(\n        perPageOptions || Constants.DEFAULT_PAGINATION_OPTIONS,\n      )}\n      titles={{\n        ofWord: t`of`,\n        perPageSuffix: t`per page`,\n        items: null,\n      }}\n      toggleTemplate={(props) => <ToggleTemplate {...props} />}\n    />\n  );\n};\n\nfunction mapPerPageOptions(options) {\n  return options.map((option) => ({\n    title: String(option),\n    value: option,\n  }));\n}\n","import { t } from '@lingui/macro';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { NamespaceType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Logo,\n  Tabs,\n  TabsType,\n} from 'src/components';\nimport './header.scss';\n\ninterface IProps {\n  namespace: NamespaceType;\n  tabs: TabsType[];\n  breadcrumbs: BreadcrumbType[];\n  params: { tab?: string };\n  updateParams: (p) => void;\n\n  pageControls?: React.ReactNode;\n  contextSelector?: React.ReactNode;\n  filters?: React.ReactNode;\n}\n\nexport class PartnerHeader extends React.Component<IProps> {\n  render() {\n    const {\n      breadcrumbs,\n      contextSelector,\n      filters,\n      namespace,\n      pageControls,\n      params,\n      tabs,\n      updateParams,\n    } = this.props;\n\n    const company = namespace.company || namespace.name;\n\n    return (\n      <BaseHeader\n        title={company}\n        logo={\n          namespace.avatar_url && (\n            <Logo\n              alt={t`${company} logo`}\n              className='image'\n              fallbackToDefault\n              image={namespace.avatar_url}\n              size='40px'\n              unlockWidth\n            />\n          )\n        }\n        breadcrumbs={<Breadcrumbs links={breadcrumbs} />}\n        pageControls={pageControls}\n        contextSelector={contextSelector}\n        className='header'\n      >\n        {namespace.description ? <div>{namespace.description}</div> : null}\n\n        <div className='hub-tab-link-container'>\n          <div className='tabs'>\n            <Tabs\n              tabs={tabs}\n              params={params}\n              updateParams={(p) => updateParams(p)}\n            />\n          </div>\n          {namespace.links.length > 0 ? (\n            <div className='links'>\n              <div>\n                <ExternalLinkAltIcon />\n              </div>\n              {namespace.links.map((x, i) => {\n                return (\n                  <div className='link' key={i}>\n                    <a href={x.url} target='blank'>\n                      {x.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n\n        {filters || null}\n      </BaseHeader>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ModelPermissionsType } from 'src/api';\nimport { PermissionChipSelector } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IProps {\n  permissions: string[];\n  setSelected?: (permissions) => void;\n  showCustom: boolean;\n  showEmpty: boolean;\n}\n\nfunction knownPermissionsAndCategories(\n  model_permissions: ModelPermissionsType,\n  allPermissions: string[] = Object.keys(model_permissions),\n): {\n  label: string;\n  allPermissions: string[];\n  availablePermissions?: string[];\n  selectedPermissions?: string[];\n}[] {\n  const categories = {};\n\n  Object.entries(model_permissions)\n    .filter(([k, _]) => allPermissions.includes(k))\n    .forEach(([permission, { ui_category }]) => {\n      categories[ui_category] ||= { label: ui_category, allPermissions: [] };\n      categories[ui_category].allPermissions.push(permission);\n    });\n\n  return Object.values(categories);\n}\n\nexport class PermissionCategories extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  render() {\n    const { permissions, setSelected, showCustom, showEmpty } = this.props;\n    const { featureFlags, user } = this.context;\n    const { model_permissions } = user;\n    const showUserManagement = !featureFlags.external_authentication;\n\n    // show user/group permissions by default\n    const userManagementFilter = (permission) =>\n      showUserManagement ||\n      !Constants.USER_GROUP_MGMT_PERMISSIONS.includes(permission);\n    const allPermissions =\n      Object.keys(model_permissions).filter(userManagementFilter);\n\n    const groups = knownPermissionsAndCategories(\n      model_permissions,\n      allPermissions,\n    );\n\n    const allGroups = showCustom\n      ? [\n          ...groups,\n          {\n            label: t`Custom permissions`,\n            allPermissions: permissions\n              .filter(userManagementFilter)\n              .filter((permission) => !allPermissions.includes(permission)),\n          },\n        ]\n      : groups;\n\n    const withActive = allGroups.map((group) => ({\n      ...group,\n      selectedPermissions: group.allPermissions.filter((permission) =>\n        permissions.includes(permission),\n      ),\n      availablePermissions: group.allPermissions.filter(\n        (permission) => !permissions.includes(permission),\n      ),\n    }));\n\n    const groupsToShow = showEmpty\n      ? withActive\n      : withActive.filter((group) => group.selectedPermissions.length);\n\n    return (\n      <React.Fragment>\n        {groupsToShow.length ? null : (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={'no-permissions'}\n            data-cy={'PermissionCategories-no-permissions'}\n          >\n            <FlexItem\n              style={{ minWidth: '200px' }}\n            >{t`No permissions`}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }}></FlexItem>\n          </Flex>\n        )}\n        {groupsToShow.map((group) => (\n          <Flex\n            style={{ marginTop: '16px' }}\n            alignItems={{ default: 'alignItemsCenter' }}\n            key={group.label}\n            data-cy={`PermissionCategories-${group.label}`}\n          >\n            <FlexItem style={{ minWidth: '200px' }}>{group.label}</FlexItem>\n            <FlexItem grow={{ default: 'grow' }}>\n              <PermissionChipSelector\n                availablePermissions={group.availablePermissions}\n                selectedPermissions={group.selectedPermissions}\n                isViewOnly={!setSelected}\n                onCategoryClear={() =>\n                  setSelected(\n                    permissions.filter(\n                      (permission) =>\n                        !group.allPermissions.includes(permission),\n                    ),\n                  )\n                }\n                onPermissionToggle={(permission) => {\n                  const newPerms = new Set(permissions);\n\n                  if (newPerms.has(permission)) {\n                    newPerms.delete(permission);\n                  } else {\n                    newPerms.add(permission);\n                  }\n\n                  setSelected(Array.from(newPerms));\n                }}\n              />\n            </FlexItem>\n          </Flex>\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Label,\n  LabelGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { AppContext } from 'src/loaders/app-context';\nimport { chipGroupProps } from 'src/utilities';\n\ninterface IProps {\n  availablePermissions?: string[];\n  selectedPermissions: string[];\n  isDisabled?: boolean;\n  isViewOnly?: boolean;\n  onCategoryClear?: () => void;\n  onPermissionToggle?: (permission: string) => void;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport class PermissionChipSelector extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    const { model_permissions } = this.context.user;\n    const {\n      availablePermissions,\n      isDisabled,\n      isViewOnly,\n      onCategoryClear,\n      onPermissionToggle,\n      selectedPermissions,\n    } = this.props;\n    const { isOpen } = this.state;\n\n    if (isViewOnly) {\n      const items = selectedPermissions.map((permission) => ({\n        label: model_permissions[permission]?.name || permission,\n        value: permission,\n      }));\n\n      return (\n        <LabelGroup {...chipGroupProps()}>\n          {items.length ? null : (\n            <Label key='placeholder'>{t`No permission`}</Label>\n          )}\n          {items.map((text) => (\n            <Label key={text.value} title={text.value}>\n              {text.label}\n            </Label>\n          ))}\n        </LabelGroup>\n      );\n    }\n\n    // { value: 'galaxy.foo', toString: () => \"View foo (translated)\" }\n    const selections = selectedPermissions.map((permission) => ({\n      value: permission,\n      toString: () => model_permissions[permission]?.name || permission,\n    }));\n\n    return (\n      <Select\n        menuAppendTo='inline'\n        variant={SelectVariant.typeaheadMulti}\n        chipGroupProps={chipGroupProps()}\n        typeAheadAriaLabel={t`Select permissions`}\n        onToggle={(isOpen) => this.setState({ isOpen })}\n        onSelect={(event, permission) =>\n          onPermissionToggle(permission['value'] || permission)\n        }\n        onClear={() => onCategoryClear()}\n        selections={selections}\n        isOpen={isOpen}\n        placeholderText={\n          !isDisabled && !isViewOnly\n            ? t`Select permissions`\n            : selectedPermissions.length === 0\n            ? t`No permission`\n            : ''\n        }\n        isDisabled={!!isDisabled}\n      >\n        {availablePermissions.length === 0\n          ? [\n              <SelectOption\n                isDisabled={true}\n                key={'not_found'}\n                value={t`Not found`}\n              />,\n            ]\n          : availablePermissions.map((permission) => (\n              <SelectOption key={permission} value={permission}>\n                {model_permissions[permission]?.name || permission}\n              </SelectOption>\n            ))}\n      </Select>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  ClipboardCopyButton,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Flex,\n  FlexItem,\n  List,\n  ListItem,\n  Modal,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, TagIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { ControllerAPI, ExecutionEnvironmentAPI } from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AlertType,\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  ShaLabel,\n  closeAlertMixin,\n} from 'src/components';\nimport { errorMessage, filterIsSet, getContainersURL } from 'src/utilities';\n\ninterface IProps {\n  image: string;\n  digest?: string;\n  isOpen: boolean;\n  onClose: () => void;\n  tag?: string;\n}\n\ninterface IState {\n  alerts: AlertType[];\n  controllers: string[];\n  controllerCount: number;\n  controllerParams: {\n    page: number;\n    page_size: number;\n    host__icontains?: string;\n  };\n  digest?: string;\n  digestByTag: { [key: string]: string };\n  loading: boolean;\n  tag?: string;\n  tagResults: { name: string; id: string }[];\n  tagSelection: { name: string; id: string }[];\n  tags: { tag: string; digest: string }[];\n  inputText: string;\n}\n\nconst initialState = {\n  alerts: [],\n  controllers: null,\n  controllerCount: 0,\n  controllerParams: { page: 1, page_size: 10 },\n  digest: null,\n  digestByTag: {},\n  loading: true,\n  tag: null,\n  tagResults: [],\n  tagSelection: [],\n  tags: [],\n  inputText: '',\n};\n\nexport class PublishToControllerModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { image, isOpen } = this.props;\n\n    if (isOpen !== prevProps.isOpen) {\n      if (isOpen) {\n        // load on open\n        this.fetchData(image);\n      } else {\n        // reset on close\n        this.setState(initialState);\n      }\n    }\n  }\n\n  fetchControllers() {\n    const { controllerParams: params } = this.state;\n    return ControllerAPI.list(params)\n      .then(({ data }) => {\n        const controllers = data.data.map((c) => c.host);\n        const controllerCount = data.meta.count;\n\n        this.setState({ controllers, controllerCount });\n\n        return controllers;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Controllers list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  fetchTags(image, name?) {\n    // filter tags by digest when provided from Images list\n    const { digest } = this.props;\n\n    return ExecutionEnvironmentAPI.tags(image, {\n      sort: '-created_at',\n      ...(digest ? { tagged_manifest__digest: digest } : {}),\n      ...(name ? { name__icontains: name } : {}),\n    })\n      .then(({ data }) => {\n        const tags = data.data.map(\n          ({ name: tag, tagged_manifest: { digest } }) => ({ digest, tag }),\n        );\n\n        const digestByTag = {};\n        tags.forEach(({ digest, tag }) => (digestByTag[tag] = digest));\n\n        const tagResults = tags.map(({ tag }) => ({ id: tag, name: tag }));\n\n        this.setState({\n          digestByTag,\n          tagResults,\n          tags,\n        });\n\n        return tags;\n      })\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          alerts: [\n            ...this.state.alerts,\n            {\n              variant: 'danger',\n              title: t`Tags could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          ],\n        });\n      });\n  }\n\n  fetchData(image) {\n    const controllers = this.fetchControllers();\n    const tags = this.fetchTags(image).then(() => {\n      // preselect tag if present\n      let { digest, tag } = this.props;\n      tag ||= this.state.tags[0]?.tag; // default to first tag unless in props (tags already filtered by digest if in props)\n      digest ||= this.state.digestByTag[tag]; // set digest by tag unless in props\n\n      this.setState({\n        digest,\n        tag,\n        tagSelection: tag ? [{ id: tag, name: tag }] : [],\n      });\n    });\n\n    Promise.all([controllers, tags]).then(() =>\n      this.setState({ loading: false }),\n    );\n  }\n\n  renderControllers() {\n    const { image, isOpen } = this.props;\n    const { controllers, digest, tag } = this.state;\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    if (!isOpen || !controllers) {\n      return null;\n    }\n\n    if (controllers.length === 0) {\n      // EmptyStateNoData already handled in render()\n      return <EmptyStateFilter />;\n    }\n\n    if (!digest && !tag) {\n      return t`No tag or digest selected.`;\n    }\n\n    const imageUrl = encodeURIComponent(\n      getContainersURL({\n        name: image,\n        tag,\n        digest,\n      }),\n    );\n\n    return (\n      <List isPlain isBordered>\n        {controllers.map((host) => {\n          const href = `${host}/#/execution_environments/add?image=${imageUrl}`;\n\n          return (\n            <ListItem style={{ paddingTop: '8px' }} key={host}>\n              <a href={href} target='_blank' rel='noreferrer'>\n                {host}\n              </a>{' '}\n              {unsafeLinksSupported && (\n                <small>\n                  <ExternalLinkAltIcon />\n                </small>\n              )}\n              {!unsafeLinksSupported && (\n                <ClipboardCopyButton\n                  variant={'plain'}\n                  id={href}\n                  textId={t`Copy to clipboard`}\n                  onClick={() => navigator.clipboard.writeText(href)}\n                >\n                  {t`Copy to clipboard`}\n                </ClipboardCopyButton>\n              )}\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n\n  render() {\n    const { image, isOpen, onClose } = this.props;\n    const {\n      alerts,\n      controllers,\n      controllerCount,\n      controllerParams,\n      loading,\n      digest,\n      digestByTag,\n      tagResults,\n      tagSelection,\n    } = this.state;\n\n    const docsLink =\n      'https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/2.1';\n\n    const noData =\n      controllers?.length === 0 &&\n      !filterIsSet(controllerParams, ['host__icontains']);\n\n    const notListedMessage = (\n      <>\n        {t`If the Controller is not listed in the table, check settings.py.`}{' '}\n        {docsLink && (\n          <>\n            <a href={docsLink} target='_blank' rel='noreferrer'>\n              {t`Learn more`}\n            </a>{' '}\n            <ExternalLinkAltIcon />\n          </>\n        )}\n      </>\n    );\n\n    const Spacer = () => <div style={{ paddingTop: '24px' }}></div>;\n    const unsafeLinksSupported = !Object.keys(window).includes('chrome');\n\n    return (\n      <Modal\n        variant='large'\n        title={t`Use in Controller`}\n        isOpen={isOpen}\n        onClose={onClose}\n        actions={[\n          <Button key='close' variant='primary' onClick={onClose}>\n            {t`Close`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        ></AlertList>\n        {loading && (\n          <div style={{ padding: '16px' }}>\n            <LoadingPageSpinner />\n          </div>\n        )}\n        {noData && !loading ? (\n          <EmptyStateNoData\n            title={t`No Controllers available`}\n            description={notListedMessage}\n          />\n        ) : null}\n\n        {isOpen && !loading && !noData && controllers && (\n          <>\n            <DescriptionList isHorizontal>\n              <DescriptionListGroup>\n                <DescriptionListTerm>\n                  {t`Execution Environment`}\n                </DescriptionListTerm>\n                <DescriptionListDescription>{image}</DescriptionListDescription>\n              </DescriptionListGroup>\n              <DescriptionListGroup>\n                <DescriptionListTerm>{t`Tag`}</DescriptionListTerm>\n                <DescriptionListDescription>\n                  <Flex>\n                    <FlexItem>\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.fetchTags(image, name)}\n                        onClear={() =>\n                          this.setState({ tag: null, tagSelection: [] })\n                        }\n                        onSelect={(event, value) => {\n                          const digest = digestByTag[value.toString()];\n                          this.setState({\n                            tag: digest && value.toString(),\n                            tagSelection: [{ id: value, name: value }],\n                            digest,\n                          });\n                        }}\n                        placeholderText={t`Select a tag`}\n                        results={tagResults}\n                        selections={tagSelection}\n                        toggleIcon={<TagIcon />}\n                      />\n                    </FlexItem>\n                    <FlexItem></FlexItem>\n                  </Flex>\n                </DescriptionListDescription>\n              </DescriptionListGroup>\n              {digest && (\n                <>\n                  <DescriptionListGroup>\n                    <DescriptionListTerm>{t`Digest`}</DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <ShaLabel grey long digest={digest} />\n                    </DescriptionListDescription>\n                  </DescriptionListGroup>\n                </>\n              )}\n            </DescriptionList>\n            <Spacer />\n            <Trans>\n              Click on the Controller URL that you want to use the above\n              execution environment in, and it will launch that\n              Controller&apos;s console. Log in (if necessary) and follow the\n              steps to complete the configuration.\n            </Trans>\n            <br />\n            {!unsafeLinksSupported && (\n              <Trans>\n                <b>Note:</b> The following links may be blocked by your browser.\n                Copy and paste the external link manually.\n              </Trans>\n            )}\n            <Spacer />\n\n            <Flex>\n              <FlexItem>\n                <CompoundFilter\n                  inputText={this.state.inputText}\n                  onChange={(text) => this.setState({ inputText: text })}\n                  updateParams={(controllerParams) => {\n                    this.setState({ controllerParams }, () =>\n                      this.fetchControllers(),\n                    );\n                  }}\n                  params={controllerParams}\n                  filterConfig={[\n                    {\n                      id: 'host__icontains',\n                      title: t`Controller name`,\n                    },\n                  ]}\n                />\n              </FlexItem>\n              <FlexItem grow={{ default: 'grow' }}></FlexItem>\n              <FlexItem>\n                <Pagination\n                  params={controllerParams}\n                  updateParams={(controllerParams) => {\n                    this.setState({ controllerParams }, () =>\n                      this.fetchControllers(),\n                    );\n                  }}\n                  count={controllerCount}\n                  isTop\n                />\n              </FlexItem>\n            </Flex>\n\n            <AppliedFilters\n              updateParams={(controllerParams) =>\n                this.setState({ controllerParams }, () =>\n                  this.fetchControllers(),\n                )\n              }\n              params={controllerParams}\n              ignoredParams={['page_size', 'page']}\n              niceNames={{\n                host__icontains: t`Controller name`,\n              }}\n            />\n\n            <Spacer />\n            {this.renderControllers()}\n            <Spacer />\n\n            <Pagination\n              params={controllerParams}\n              updateParams={(controllerParams) => {\n                this.setState({ controllerParams }, () =>\n                  this.fetchControllers(),\n                );\n              }}\n              count={controllerCount}\n              isTop\n            />\n            <Spacer />\n            <div>{notListedMessage}</div>\n          </>\n        )}\n      </Modal>\n    );\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import * as React from 'react';\nimport {\n  PluginContentType,\n  PluginDoc,\n  PluginOption,\n  ReturnedValue,\n} from 'src/api';\nimport './render-plugin-doc.scss';\n\n// Documentation for module doc string spec\n// https://docs.ansible.com/ansible/latest/dev_guide/developing_modules_documenting.html\n\ninterface IState {\n  renderError: boolean;\n}\n\ninterface IProps {\n  plugin: PluginContentType;\n\n  renderModuleLink: (moduleName: string) => React.ReactElement;\n  renderDocLink: (name: string, href: string) => React.ReactElement;\n  renderTableOfContentsLink: (\n    title: string,\n    section: string,\n  ) => React.ReactElement;\n  renderWarning: (text: string) => React.ReactElement;\n}\n\nexport class RenderPluginDoc extends React.Component<IProps, IState> {\n  // checks if I(), B(), M(), U(), L(), or C() exists. Returns type (ex: B)\n  // and value in parenthesis. Based off of formatters in ansible:\n  // https://github.com/ansible/ansible/blob/devel/hacking/build_library/build_ansible/jinja2/filters.py#L26\n  CUSTOM_FORMATTERS = /([IBMULC])\\(([^)]+)\\)/gm;\n  subOptionsMaxDepth: number;\n  returnContainMaxDepth: number;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      renderError: false,\n    };\n  }\n\n  componentDidCatch(error) {\n    console.log(error);\n    this.setState({ renderError: true });\n  }\n\n  render() {\n    const { plugin } = this.props;\n\n    if (!this.state.renderError) {\n      // componentDidCatch doesn't seem to be able to catch errors that\n      // are thrown outside of return(), so we'll wrap everything in a\n      // try just in case\n      let doc: PluginDoc;\n      let example: string;\n      let returnVals: ReturnedValue[];\n      let content;\n      try {\n        doc = this.parseDocString(plugin);\n        example = this.parseExamples(plugin);\n        returnVals = this.parseReturn(plugin);\n        content = {\n          synopsis: this.renderSynopsis(doc),\n          parameters: this.renderParameters(\n            doc.options,\n            plugin.content_type,\n            this.subOptionsMaxDepth,\n          ),\n          notes: this.renderNotes(doc),\n          examples: this.renderExample(example),\n          returnValues: this.renderReturnValues(\n            returnVals,\n            this.returnContainMaxDepth,\n          ),\n          shortDescription: this.renderShortDescription(doc),\n          deprecated: this.renderDeprecated(doc, plugin.content_name),\n          requirements: this.renderRequirements(doc),\n        };\n      } catch (err) {\n        console.log(err);\n        return this.renderError(plugin);\n      }\n\n      return (\n        <div>\n          <h1>\n            {plugin.content_type} &gt; {plugin.content_name}\n          </h1>\n          <br />\n          {content.shortDescription}\n          {content.deprecated}\n          {this.renderTableOfContents(content)}\n          {content.synopsis}\n          {content.requirements}\n          {content.parameters}\n          {content.notes}\n          {content.examples}\n          {content.returnValues}\n        </div>\n      );\n    } else {\n      return this.renderError(plugin);\n    }\n  }\n\n  private renderError(plugin) {\n    // There's a good chance that something about the plugin doc data will\n    // be malformed since it isn't validated. When that hapens, show an\n    // error instead of crashing the whole app\n    return (\n      <React.Fragment>\n        {this.props.renderWarning(\n          'Documentation Syntax Error: cannot parse plugin documention.',\n        )}\n        <br />\n        <div>\n          {plugin.content_type && plugin.content_name ? (\n            <h1>\n              {plugin.content_type} &gt; {plugin.content_name}\n            </h1>\n          ) : null}\n          <p>\n            The documentation object for this plugin seems to contain invalid\n            syntax that makes it impossible for Automation Hub to parse. You can\n            still look at the unformatted documentation object bellow if you\n            need to.\n          </p>\n\n          <h2>Unformatted Documentation</h2>\n\n          <pre className='plugin-raw'>{JSON.stringify(plugin, null, 2)}</pre>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private parseDocString(plugin: PluginContentType): PluginDoc {\n    // TODO: if the parser can't figure out what to do with the object\n    // passed to it, it should throw an error that can be displayed to the\n    // user with the piece of the documention that's broken.\n\n    // TODO: make the doc string match the desired output as closely as\n    // possible\n    if (!plugin.doc_strings) {\n      return { description: [], short_description: '' } as PluginDoc;\n    }\n\n    const doc: PluginDoc = { ...plugin.doc_strings.doc };\n\n    let maxDepth = 0;\n\n    const parseOptions = (options: PluginOption[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const op of options) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        op.description = this.ensureListofStrings(op.description);\n\n        if (typeof op.default === 'object') {\n          op.default = JSON.stringify(op.default);\n        }\n\n        // recursively parse sub options\n        if (op.suboptions) {\n          parseOptions(op.suboptions, depth + 1);\n        }\n      }\n    };\n\n    if (doc.options) {\n      parseOptions(doc.options, 0);\n    }\n\n    doc.description = this.ensureListofStrings(doc.description);\n    this.subOptionsMaxDepth = maxDepth;\n\n    return doc;\n  }\n\n  private parseExamples(plugin: PluginContentType): string {\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (typeof plugin.doc_strings.examples === 'string') {\n      // the examples always seem to have an annoying new line at the top\n      // so just replace it here if it exists.\n      return plugin.doc_strings.examples.replace('\\n', '');\n    } else {\n      return null;\n    }\n  }\n\n  private parseReturn(plugin: PluginContentType): ReturnedValue[] {\n    // TODO: make the return string match the desired output as closely as\n    // possible\n\n    if (!plugin.doc_strings) {\n      return null;\n    }\n\n    if (!plugin.doc_strings.return) {\n      return null;\n    }\n\n    let maxDepth = 0;\n\n    const parseReturnRecursive = (returnV: ReturnedValue[], depth) => {\n      if (depth > maxDepth) {\n        maxDepth = depth;\n      }\n      for (const ret of returnV) {\n        // Description is expected to be an array of strings. If its not,\n        // do what we can to make it one\n        ret.description = this.ensureListofStrings(ret.description);\n\n        // recursively parse sub options\n        if (ret.contains) {\n          parseReturnRecursive(ret.contains, depth + 1);\n        }\n      }\n    };\n\n    const returnValues = [...plugin.doc_strings.return];\n    parseReturnRecursive(returnValues, 0);\n    this.returnContainMaxDepth = maxDepth;\n\n    return returnValues;\n  }\n\n  // This functions similar to how string.replace() works, except it returns\n  // a react object instead of a string\n  private reactReplace(\n    text: string,\n    reg: RegExp,\n    replacement: (matches: string[]) => React.ReactNode,\n  ): React.ReactNode {\n    const fragments = [];\n\n    let match: string[];\n    let prevIndex = 0;\n    while ((match = reg.exec(text)) !== null) {\n      fragments.push(\n        text.substr(prevIndex, reg.lastIndex - prevIndex - match[0].length),\n      );\n      fragments.push(replacement(match));\n      prevIndex = reg.lastIndex;\n    }\n\n    if (fragments.length === 0) {\n      return <span>{text}</span>;\n    }\n\n    // append any text after the last match\n    if (prevIndex != text.length - 1) {\n      fragments.push(text.substring(prevIndex));\n    }\n\n    return (\n      <span>\n        {fragments.map((x, i) => (\n          <React.Fragment key={i}>{x}</React.Fragment>\n        ))}\n      </span>\n    );\n  }\n\n  private applyDocFormatters(text: string): React.ReactNode {\n    const { renderModuleLink, renderDocLink } = this.props;\n\n    const nstring = this.reactReplace(text, this.CUSTOM_FORMATTERS, (match) => {\n      const fullMatch = match[0];\n      const type = match[1];\n      const textMatch = match[2];\n\n      switch (type) {\n        case 'L': {\n          const url = textMatch.split(',');\n          return renderDocLink(url[0], url[1]);\n        }\n        case 'U':\n          return (\n            <a href={textMatch} target='_blank' rel='noreferrer'>\n              {textMatch}\n            </a>\n          );\n        case 'I':\n          return <i>{textMatch}</i>;\n        case 'C':\n          return <span className='inline-code'>{textMatch}</span>;\n        case 'M':\n          return renderModuleLink(textMatch);\n\n        case 'B':\n          return <b>{textMatch}</b>;\n\n        default:\n          return fullMatch;\n      }\n    });\n\n    return nstring;\n  }\n\n  private ensureListofStrings(v) {\n    if (typeof v === 'string') {\n      return [v];\n    } else if (!v) {\n      return [];\n    } else {\n      return v;\n    }\n  }\n\n  private renderDeprecated(doc: PluginDoc, pluginName: string) {\n    const isDeprecated = doc.deprecated || pluginName.startsWith('_');\n\n    if (!isDeprecated) {\n      return null;\n    }\n\n    const deprecated = doc.deprecated || {};\n\n    return (\n      <React.Fragment>\n        <h2>DEPRECATED</h2>\n        {deprecated.removed_in ? (\n          <div>\n            <b>Removed in version</b> {doc.deprecated.removed_in}\n          </div>\n        ) : null}\n\n        <div>\n          <b>Why: </b>\n          {deprecated.why ? doc.deprecated.why : 'No reason specified.'}\n        </div>\n\n        <div>\n          <b>Alternative: </b>\n          {deprecated.alternative\n            ? doc.deprecated.alternative\n            : 'No alternatives specified.'}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  private renderTableOfContents(content) {\n    // return this.props.renderTableOfContentsLink('Synopsis', 'synopsis');\n\n    return (\n      <ul>\n        {content['synopsis'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Synopsis', 'synopsis')}\n          </li>\n        )}\n        {content['parameters'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Parameters', 'parameters')}\n          </li>\n        )}\n        {content['notes'] !== null && (\n          <li>{this.props.renderTableOfContentsLink('Notes', 'notes')}</li>\n        )}\n        {content['examples'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink('Examples', 'examples')}\n          </li>\n        )}\n        {content['returnValues'] !== null && (\n          <li>\n            {this.props.renderTableOfContentsLink(\n              'Return Values',\n              'return-values',\n            )}\n          </li>\n        )}\n      </ul>\n    );\n  }\n\n  private renderShortDescription(doc: PluginDoc) {\n    return <div>{doc.short_description}</div>;\n  }\n\n  private renderSynopsis(doc: PluginDoc) {\n    return (\n      <React.Fragment>\n        <h2 id='synopsis'>Synopsis</h2>\n        <ul>\n          {doc.description.map((d, i) => (\n            <li key={i}>{this.applyDocFormatters(d)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameters(\n    parameters: PluginOption[],\n    content_type: string,\n    maxDepth: number,\n  ) {\n    if (!parameters) {\n      return null;\n    }\n\n    // render the entries first,\n    const paramEntries = this.renderParameterEntries(\n      parameters,\n      content_type,\n      0,\n      maxDepth,\n      '',\n    );\n\n    return (\n      <React.Fragment>\n        <h2 id='parameters'>Parameters</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Parameter</th>\n              <th>\n                Choices/\n                <span className='blue'>Defaults</span>\n              </th>\n              {content_type !== 'module' ? <th>Configuration</th> : null}\n              <th>Comments</th>\n            </tr>\n            {\n              // TODO: add support for sub options. Example:\n              //https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/network/fortios/fortios_dlp_fp_doc_source.py#L93}\n              // TODO: do we need to display version added?\n            }\n            {paramEntries}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderParameterEntries(\n    parameters: PluginOption[],\n    content_type: string,\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let output = [];\n    parameters.forEach((option) => {\n      const spacers = [];\n      const key = `${parent}-${option.name}`;\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} className='spacer' />);\n      }\n      output.push(\n        <tr key={key}>\n          {\n            // PARAMETER --------------------------------\n          }\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.suboptions ? 'parent' : ''}\n          >\n            <span className='option-name'>{option.name}</span>\n            <small>\n              {this.documentedType(option['type'])}\n              {option['elements'] ? (\n                <span>\n                  {' '}\n                  / elements ={this.documentedType(option['elements'])}\n                </span>\n              ) : null}\n              {option['required'] ? (\n                <span>\n                  {' '}\n                  / <span className='red'>required</span>\n                </span>\n              ) : null}\n            </small>\n          </td>\n          {\n            // CHOICES -------------------------------\n          }\n          <td>{this.renderChoices(option)}</td>\n          {\n            // CONFIGURATION (non module only) -------\n          }\n          {content_type !== 'module' ? (\n            <td>{this.renderPluginConfiguration(option)}</td>\n          ) : null}\n          {\n            // COMMENTS ------------------------------\n          }\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option['aliases'] ? (\n              <small>\n                <span className='green'>\n                  aliases: {option['aliases'].join(', ')}\n                </span>\n              </small>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      // recursively render sub options\n      if (option.suboptions) {\n        output = output.concat(\n          this.renderParameterEntries(\n            option.suboptions,\n            content_type,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n\n    return output;\n  }\n\n  private renderPluginConfiguration(option) {\n    return (\n      <React.Fragment>\n        {option['ini'] ? (\n          <div className='plugin-config'>\n            ini entries:\n            {option['ini'].map((v, i) => (\n              <p key={i}>\n                [{v.section}]<br />\n                {v.key} = {v.default ? v.default : 'VALUE'}\n              </p>\n            ))}\n          </div>\n        ) : null}\n\n        {option['env'] ? (\n          <div className='plugin-config'>\n            {option['env'].map((v, i) => (\n              <div key={i}>env: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n\n        {option['vars'] ? (\n          <div className='plugin-config'>\n            {option['vars'].map((v, i) => (\n              <div key={i}>var: {v.name}</div>\n            ))}\n          </div>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderChoices(option) {\n    let choices, defaul;\n\n    if (option['type'] === 'bool') {\n      choices = ['true', 'false'];\n      if (option['default'] === true) {\n        defaul = 'true';\n      } else if (option['default'] === false) {\n        defaul = 'false';\n      }\n    } else {\n      choices = option['choices'] || [];\n      defaul = option['default'];\n    }\n\n    return (\n      <React.Fragment>\n        {choices && Array.isArray(choices) && choices.length !== 0 ? (\n          <div>\n            <span className='option-name'>Choices: </span>\n            <ul>\n              {choices.map((c, i) => (\n                <li key={i}>\n                  {c === defaul ? (\n                    <span className='blue'>{c} &nbsp;&larr;</span>\n                  ) : (\n                    c\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n\n        {defaul && !choices.includes(defaul) ? (\n          <span>\n            <span className='option-name'>Default: </span>\n            <span className='blue'>{defaul}</span>\n          </span>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  private renderNotes(doc: PluginDoc) {\n    if (!doc.notes) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2 id='notes'>Notes</h2>\n        <ul>\n          {doc.notes.map((note, i) => (\n            <li key={i}>{this.applyDocFormatters(note)}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderRequirements(doc: PluginDoc) {\n    if (!doc.requirements) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <h2>Requirements</h2>\n        <ul>\n          {doc.requirements.map((req, i) => (\n            <li key={i}>{req}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  private renderExample(example: string) {\n    if (!example) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='examples'>Examples</h2>\n        <pre>{example}</pre>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValues(returnV: ReturnedValue[], maxDepth: number) {\n    if (!returnV) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <h2 id='return-values'>Return Values</h2>\n        <table className='options-table'>\n          <tbody>\n            <tr>\n              <th colSpan={maxDepth + 1}>Key</th>\n              <th>Returned</th>\n              <th>Description</th>\n            </tr>\n            {this.renderReturnValueEntries(returnV, 0, maxDepth, '')}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n\n  private renderReturnValueEntries(\n    returnValues: ReturnedValue[],\n    depth: number,\n    maxDepth: number,\n    parent: string,\n  ) {\n    let entries = [];\n\n    returnValues.forEach((option) => {\n      const spacers = [];\n      for (let x = 0; x < depth; x++) {\n        spacers.push(<td key={x} colSpan={1} className='spacer' />);\n      }\n      const key = `${parent}-${option.name}`;\n      entries.push(\n        <tr key={key}>\n          {spacers}\n          <td\n            colSpan={maxDepth + 1 - depth}\n            className={option.contains ? 'parent' : ''}\n          >\n            {option.name} <br /> ({option.type})\n          </td>\n          <td>{option.returned}</td>\n          <td>\n            {option.description.map((d, i) => (\n              <p key={i}>{this.applyDocFormatters(d)}</p>\n            ))}\n\n            {option.sample ? (\n              <div>\n                <br />\n                sample:\n                {typeof option.sample === 'string' ? (\n                  option.sample\n                ) : (\n                  <pre>{JSON.stringify(option.sample, null, 2)}</pre>\n                )}\n              </div>\n            ) : null}\n          </td>\n        </tr>,\n      );\n\n      if (option.contains) {\n        entries = entries.concat(\n          // recursively render values\n          this.renderReturnValueEntries(\n            option.contains,\n            depth + 1,\n            maxDepth,\n            key,\n          ),\n        );\n      }\n    });\n    return entries;\n  }\n\n  // https://github.com/ansible/ansible/blob/1b8aa798df6f6fa96ba5ea2a9dbf01b3f1de555c/hacking/build_library/build_ansible/jinja2/filters.py#L53\n  private documentedType(text) {\n    switch (text) {\n      case 'str':\n        return 'string';\n      case 'bool':\n        return 'boolean';\n      case 'int':\n        return 'integer';\n      case 'dict':\n        return 'dictionary';\n      case undefined:\n        return '-';\n      default:\n        return text;\n    }\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Button,\n  Checkbox,\n  ExpandableSection,\n  Flex,\n  FlexItem,\n  Form,\n  FormGroup,\n  Modal,\n  Switch,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  DownloadIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport * as FileSaver from 'file-saver';\nimport * as React from 'react';\nimport { RemoteType, WriteOnlyFieldType } from 'src/api';\nimport { FileUpload, HelperText, WriteOnlyField } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, isFieldSet, isWriteOnly } from 'src/utilities';\nimport { validateURLHelper } from 'src/utilities';\n\ninterface IProps {\n  allowEditName?: boolean;\n  closeModal: () => void;\n  errorMessages: ErrorMessagesType;\n  remote: RemoteType;\n  remoteType?: 'registry';\n  saveRemote: () => void;\n  showModal: boolean;\n  title?: string;\n  updateRemote: (remote) => void;\n}\n\ntype FormFilename = {\n  name: string;\n  original: boolean;\n};\n\ninterface IState {\n  filenames: {\n    requirements_file: FormFilename;\n    client_key: FormFilename;\n    client_cert: FormFilename;\n    ca_cert: FormFilename;\n  };\n}\n\nexport class RemoteForm extends React.Component<IProps, IState> {\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    const { requirements_file, client_key, client_cert, ca_cert } =\n      props.remote || {};\n\n    this.state = {\n      filenames: {\n        requirements_file: {\n          name: requirements_file ? 'requirements.yml' : '',\n          original: !!requirements_file,\n        },\n        client_key: {\n          name: client_key ? 'client_key' : '',\n          original: !!client_key,\n        },\n        client_cert: {\n          name: client_cert ? 'client_cert' : '',\n          original: !!client_cert,\n        },\n        ca_cert: {\n          name: ca_cert ? 'ca_cert' : '',\n          original: !!ca_cert,\n        },\n      },\n    };\n\n    // Shim in a default concurrency value to pass form validation (AAH-959)\n    if (\n      this.props.remoteType !== 'registry' &&\n      this.props.remote.download_concurrency === null\n    ) {\n      this.updateRemote(10, 'download_concurrency');\n    }\n  }\n\n  render() {\n    const { remote } = this.props;\n    if (!remote) {\n      return null;\n    }\n\n    const remoteType = this.props.remoteType || this.getRemoteType(remote.url);\n\n    let requiredFields = ['name', 'url'];\n    let disabledFields = this.props.allowEditName ? [] : ['name'];\n\n    if (remoteType === 'certified') {\n      requiredFields = requiredFields.concat(['auth_url']);\n      disabledFields = disabledFields.concat(['requirements_file']);\n    }\n\n    if (remoteType === 'community') {\n      requiredFields = requiredFields.concat(['requirements_file']);\n      disabledFields = disabledFields.concat(['auth_url', 'token']);\n    }\n\n    if (remoteType === 'registry') {\n      disabledFields = disabledFields.concat([\n        'auth_url',\n        'token',\n        'requirements_file',\n        'signed_only',\n      ]);\n    }\n\n    return (\n      <Modal\n        isOpen={this.props.showModal}\n        title={this.props.title || t`Edit remote`}\n        variant='small'\n        onClose={() => this.props.closeModal()}\n        actions={[\n          <Button\n            isDisabled={!this.isValid(requiredFields, remoteType)}\n            key='confirm'\n            variant='primary'\n            onClick={() => this.props.saveRemote()}\n          >\n            {t`Save`}\n          </Button>,\n          <Button\n            key='cancel'\n            variant='link'\n            onClick={() => this.props.closeModal()}\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        {this.renderForm(requiredFields, disabledFields)}\n      </Modal>\n    );\n  }\n\n  private renderForm(requiredFields, disabledFields) {\n    const { remote, errorMessages } = this.props;\n    const { filenames } = this.state;\n    const { collection_signing } = this.context.featureFlags;\n\n    const docsAnsibleLink = (\n      <a\n        target='_blank'\n        href='https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#install-multiple-collections-with-a-requirements-file'\n        rel='noreferrer'\n      >\n        requirements.yml\n      </a>\n    );\n\n    const filename = (field) =>\n      filenames[field].original ? t`(uploaded)` : filenames[field].name;\n    const fileOnChange = (field) => (value, name) => {\n      this.setState(\n        {\n          filenames: {\n            ...filenames,\n            [field]: {\n              name,\n              original: false,\n            },\n          },\n        },\n        () => this.updateRemote(value, field),\n      );\n    };\n\n    return (\n      <Form>\n        <FormGroup\n          fieldId={'name'}\n          label={t`Name`}\n          isRequired={requiredFields.includes('name')}\n          validated={this.toError(!('name' in errorMessages))}\n          helperTextInvalid={errorMessages['name']}\n        >\n          <TextInput\n            validated={this.toError(!('name' in errorMessages))}\n            isRequired={requiredFields.includes('name')}\n            isDisabled={disabledFields.includes('name')}\n            id='name'\n            type='text'\n            value={remote.name || ''}\n            onChange={(value) => this.updateRemote(value, 'name')}\n          />\n        </FormGroup>\n\n        <FormGroup\n          fieldId={'url'}\n          label={t`URL`}\n          labelIcon={\n            <HelperText content={t`The URL of an external content source.`} />\n          }\n          isRequired={requiredFields.includes('url')}\n          {...validateURLHelper(errorMessages['url'], remote.url)}\n          helperTextIcon={<ExclamationTriangleIcon />}\n          helperTextInvalidIcon={<ExclamationCircleIcon />}\n        >\n          <TextInput\n            validated={\n              validateURLHelper(errorMessages['url'], remote.url).validated\n            }\n            isRequired={requiredFields.includes('url')}\n            isDisabled={disabledFields.includes('url')}\n            id='url'\n            type='text'\n            value={remote.url || ''}\n            onChange={(value) => this.updateRemote(value, 'url')}\n          />\n        </FormGroup>\n\n        {!disabledFields.includes('signed_only') && collection_signing ? (\n          <FormGroup\n            fieldId={'signed_only'}\n            name={t`Signed only`}\n            label={t`Download only signed collections`}\n          >\n            <Switch\n              id='signed_only'\n              isChecked={remote.signed_only}\n              onChange={(value) => this.updateRemote(value, 'signed_only')}\n            />\n          </FormGroup>\n        ) : null}\n\n        {!disabledFields.includes('token') && (\n          <FormGroup\n            fieldId={'token'}\n            label={t`Token`}\n            labelIcon={\n              <HelperText\n                content={t`Token for authenticating to the server URL.`}\n              />\n            }\n            isRequired={requiredFields.includes('token')}\n            validated={this.toError(!('token' in errorMessages))}\n            helperTextInvalid={errorMessages['token']}\n          >\n            <WriteOnlyField\n              isValueSet={isFieldSet('token', remote.write_only_fields)}\n              onClear={() => this.updateIsSet('token', false)}\n            >\n              <TextInput\n                validated={this.toError(!('token' in errorMessages))}\n                isRequired={requiredFields.includes('token')}\n                type='password'\n                id='token'\n                value={remote.token || ''}\n                onChange={(value) => this.updateRemote(value, 'token')}\n              />\n            </WriteOnlyField>\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('auth_url') && (\n          <FormGroup\n            fieldId={'auth_url'}\n            label={t`SSO URL`}\n            labelIcon={<HelperText content={t`Single sign on URL.`} />}\n            isRequired={requiredFields.includes('auth_url')}\n            validated={this.toError(!('auth_url' in errorMessages))}\n            helperTextInvalid={errorMessages['auth_url']}\n          >\n            <TextInput\n              validated={this.toError(!('auth_url' in errorMessages))}\n              isRequired={requiredFields.includes('auth_url')}\n              id='ssoUrl'\n              type='text'\n              value={this.props.remote.auth_url || ''}\n              onChange={(value) => this.updateRemote(value, 'auth_url')}\n            />\n          </FormGroup>\n        )}\n\n        {!disabledFields.includes('requirements_file') && (\n          <FormGroup\n            fieldId={'yaml'}\n            label={t`YAML requirements`}\n            labelIcon={\n              <HelperText\n                content={\n                  <Trans>\n                    This uses the same {docsAnsibleLink} format as the\n                    ansible-galaxy CLI with the caveat that roles aren&apos;t\n                    supported and the source parameter is not supported.\n                  </Trans>\n                }\n              />\n            }\n            isRequired={requiredFields.includes('requirements_file')}\n            validated={this.toError(!('requirements_file' in errorMessages))}\n            helperTextInvalid={errorMessages['requirements_file']}\n          >\n            <Flex>\n              <FlexItem grow={{ default: 'grow' }}>\n                <FileUpload\n                  validated={this.toError(\n                    !('requirements_file' in errorMessages),\n                  )}\n                  isRequired={requiredFields.includes('requirements_file')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('requirements_file')}\n                  value={this.props.remote.requirements_file || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('requirements_file')}\n                />\n              </FlexItem>\n              <FlexItem>\n                <Button\n                  isDisabled={!this.props.remote.requirements_file}\n                  onClick={() => {\n                    FileSaver.saveAs(\n                      new Blob([this.props.remote.requirements_file], {\n                        type: 'text/plain;charset=utf-8',\n                      }),\n                      filenames.requirements_file.name,\n                    );\n                  }}\n                  variant='plain'\n                  aria-label={t`Download requirements file`}\n                >\n                  <DownloadIcon />\n                </Button>\n              </FlexItem>\n            </Flex>\n          </FormGroup>\n        )}\n\n        <FormGroup\n          data-cy='username'\n          fieldId={'username'}\n          label={t`Username`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The username to be used for authentication when syncing.`\n                  : t`The username to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('username')}\n          validated={this.toError(!('username' in errorMessages))}\n          helperTextInvalid={errorMessages['username']}\n        >\n          <WriteOnlyField\n            isValueSet={\n              isWriteOnly('username', remote.write_only_fields) &&\n              isFieldSet('username', remote.write_only_fields)\n            }\n            onClear={() => this.updateIsSet('username', false)}\n          >\n            <TextInput\n              validated={this.toError(!('username' in errorMessages))}\n              isRequired={requiredFields.includes('username')}\n              isDisabled={disabledFields.includes('username')}\n              id='username'\n              type='text'\n              value={remote.username || ''}\n              onChange={(value) => this.updateRemote(value, 'username')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <FormGroup\n          data-cy='password'\n          fieldId={'password'}\n          label={t`Password`}\n          labelIcon={\n            <HelperText\n              content={\n                disabledFields.includes('token')\n                  ? t`The password to be used for authentication when syncing.`\n                  : t`The password to be used for authentication when syncing. This is not required when using a token.`\n              }\n            />\n          }\n          isRequired={requiredFields.includes('password')}\n          validated={this.toError(!('password' in errorMessages))}\n          helperTextInvalid={errorMessages['password']}\n        >\n          <WriteOnlyField\n            isValueSet={isFieldSet('password', remote.write_only_fields)}\n            onClear={() => this.updateIsSet('password', false)}\n          >\n            <TextInput\n              validated={this.toError(!('password' in errorMessages))}\n              isRequired={requiredFields.includes('password')}\n              isDisabled={disabledFields.includes('password')}\n              id='password'\n              type='password'\n              value={remote.password || ''}\n              onChange={(value) => this.updateRemote(value, 'password')}\n            />\n          </WriteOnlyField>\n        </FormGroup>\n\n        <ExpandableSection\n          toggleTextExpanded={t`Hide advanced options`}\n          toggleTextCollapsed={t`Show advanced options`}\n        >\n          <div className='pf-c-form'>\n            <FormGroup\n              fieldId={'proxy_url'}\n              label={t`Proxy URL`}\n              isRequired={requiredFields.includes('proxy_url')}\n              validated={this.toError(!('proxy_url' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_url']}\n            >\n              <TextInput\n                validated={this.toError(!('proxy_url' in errorMessages))}\n                isRequired={requiredFields.includes('proxy_url')}\n                isDisabled={disabledFields.includes('proxy_url')}\n                id='proxy_url'\n                type='text'\n                value={remote.proxy_url || ''}\n                onChange={(value) => this.updateRemote(value, 'proxy_url')}\n              />\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_username'\n              fieldId={'proxy_username'}\n              label={t`Proxy username`}\n              isRequired={requiredFields.includes('proxy_username')}\n              validated={this.toError(!('proxy_username' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_username']}\n            >\n              <WriteOnlyField\n                isValueSet={\n                  isWriteOnly('proxy_username', remote.write_only_fields) &&\n                  isFieldSet('proxy_username', remote.write_only_fields)\n                }\n                onClear={() => this.updateIsSet('proxy_username', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_username' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_username')}\n                  isDisabled={disabledFields.includes('proxy_username')}\n                  id='proxy_username'\n                  type='text'\n                  value={remote.proxy_username || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_username')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              data-cy='proxy_password'\n              fieldId={'proxy_password'}\n              label={t`Proxy password`}\n              isRequired={requiredFields.includes('proxy_password')}\n              validated={this.toError(!('proxy_password' in errorMessages))}\n              helperTextInvalid={errorMessages['proxy_password']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet(\n                  'proxy_password',\n                  remote.write_only_fields,\n                )}\n                onClear={() => this.updateIsSet('proxy_password', false)}\n              >\n                <TextInput\n                  validated={this.toError(!('proxy_password' in errorMessages))}\n                  isRequired={requiredFields.includes('proxy_password')}\n                  isDisabled={disabledFields.includes('proxy_password')}\n                  id='proxy_password'\n                  type='password'\n                  value={remote.proxy_password || ''}\n                  onChange={(value) =>\n                    this.updateRemote(value, 'proxy_password')\n                  }\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'tls_validation'}\n              label={t`TLS validation`}\n              labelIcon={\n                <HelperText\n                  content={t`If selected, TLS peer validation must be performed.`}\n                />\n              }\n              isRequired={requiredFields.includes('tls_validation')}\n              validated={this.toError(!('tls_validation' in errorMessages))}\n              helperTextInvalid={errorMessages['tls_validation']}\n            >\n              <Checkbox\n                onChange={(value) => this.updateRemote(value, 'tls_validation')}\n                id='tls_validation'\n                isChecked={remote.tls_validation}\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_key'}\n              label={t`Client key`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded private key used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_key')}\n              validated={this.toError(!('client_key' in errorMessages))}\n              helperTextInvalid={errorMessages['client_key']}\n            >\n              <WriteOnlyField\n                isValueSet={isFieldSet('client_key', remote.write_only_fields)}\n                onClear={() => this.updateIsSet('client_key', false)}\n              >\n                <FileUpload\n                  data-cy='client_key'\n                  validated={this.toError(!('client_key' in errorMessages))}\n                  isRequired={requiredFields.includes('client_key')}\n                  id='yaml'\n                  type='text'\n                  filename={filename('client_key')}\n                  value={this.props.remote.client_key || ''}\n                  hideDefaultPreview\n                  onChange={fileOnChange('client_key')}\n                />\n              </WriteOnlyField>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'client_cert'}\n              label={t`Client certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('client_cert')}\n              validated={this.toError(!('client_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['client_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('client_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('client_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('client_cert')}\n                    value={this.props.remote.client_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('client_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='client_cert'\n                    isDisabled={!this.props.remote.client_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.client_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        filenames.client_cert.name,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={t`Download client certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'ca_cert'}\n              label={t`CA certificate`}\n              labelIcon={\n                <HelperText\n                  content={t`A PEM encoded client certificate used for authentication.`}\n                />\n              }\n              isRequired={requiredFields.includes('ca_cert')}\n              validated={this.toError(!('ca_cert' in errorMessages))}\n              helperTextInvalid={errorMessages['ca_cert']}\n            >\n              <Flex>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <FileUpload\n                    validated={this.toError(!('ca_cert' in errorMessages))}\n                    isRequired={requiredFields.includes('ca_cert')}\n                    id='yaml'\n                    type='text'\n                    filename={filename('ca_cert')}\n                    value={this.props.remote.ca_cert || ''}\n                    hideDefaultPreview\n                    onChange={fileOnChange('ca_cert')}\n                  />\n                </FlexItem>\n                <FlexItem>\n                  <Button\n                    data-cy='ca_cert'\n                    isDisabled={!this.props.remote.ca_cert}\n                    onClick={() => {\n                      FileSaver.saveAs(\n                        new Blob([this.props.remote.ca_cert], {\n                          type: 'text/plain;charset=utf-8',\n                        }),\n                        filenames.ca_cert.name,\n                      );\n                    }}\n                    variant='plain'\n                    aria-label={t`Download CA certification file`}\n                  >\n                    <DownloadIcon />\n                  </Button>\n                </FlexItem>\n              </Flex>\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'download_concurrency'}\n              label={t`Download concurrency`}\n              labelIcon={\n                <HelperText\n                  content={t`Total number of simultaneous connections.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.download_concurrency) ||\n                remote.download_concurrency > 0\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Number must be greater than 0`}\n            >\n              <TextInput\n                id='download_concurrency'\n                type='number'\n                value={remote.download_concurrency || ''}\n                validated={\n                  !this.isNumericSet(remote.download_concurrency) ||\n                  remote.download_concurrency > 0\n                    ? 'default'\n                    : 'error'\n                }\n                onChange={(value) =>\n                  this.updateRemote(value, 'download_concurrency')\n                }\n              />\n            </FormGroup>\n\n            <FormGroup\n              fieldId={'rate_limit'}\n              label={t`Rate Limit`}\n              labelIcon={\n                <HelperText\n                  content={t`Limits total download rate in requests per second.`}\n                />\n              }\n              validated={\n                !this.isNumericSet(remote.rate_limit) ||\n                Number.isInteger(remote.rate_limit)\n                  ? 'default'\n                  : 'error'\n              }\n              helperTextInvalid={t`Must be an integer.`}\n            >\n              <TextInput\n                id='rate_limit'\n                type='number'\n                value={remote.rate_limit || ''}\n                onChange={(value) => this.updateRemote(value, 'rate_limit')}\n              />\n            </FormGroup>\n          </div>\n        </ExpandableSection>\n        {errorMessages['__nofield'] ? (\n          <span\n            style={{\n              color: 'var(--pf-global--danger-color--200)',\n            }}\n          >\n            {errorMessages['__nofield']}\n          </span>\n        ) : null}\n      </Form>\n    );\n  }\n\n  private isValid(requiredFields, remoteType) {\n    const { remote } = this.props;\n\n    for (const field of requiredFields) {\n      if (!remote[field] || remote[field] === '') {\n        return false;\n      }\n    }\n\n    if (['community', 'certified', 'none'].includes(remoteType)) {\n      // only required in remotes, not registries\n      if (remote.download_concurrency < 1) {\n        return false;\n      }\n    }\n\n    if (validateURLHelper(null, remote.url).validated == 'error') {\n      return false;\n    }\n\n    return true;\n  }\n\n  private getRemoteType(url: string): 'community' | 'certified' | 'none' {\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'community';\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (url.includes(host)) {\n        return 'certified';\n      }\n    }\n\n    return 'none';\n  }\n\n  private updateIsSet(fieldName: string, value: boolean) {\n    const writeOnlyFields = this.props.remote.write_only_fields;\n    const newFields: WriteOnlyFieldType[] = [];\n\n    for (const field of writeOnlyFields) {\n      if (field.name === fieldName) {\n        field.is_set = value;\n      }\n\n      newFields.push(field);\n    }\n\n    const update = { ...this.props.remote };\n    update.write_only_fields = newFields;\n    update[fieldName] = null;\n\n    this.props.updateRemote(update);\n  }\n\n  private updateRemote(value, field) {\n    const numericFields = ['download_concurrency', 'rate_limit'];\n    if (numericFields.includes(field)) {\n      value = Number.isInteger(value)\n        ? value\n        : Number.isNaN(parseInt(value, 10))\n        ? null\n        : parseInt(value, 10);\n    }\n\n    const update = { ...this.props.remote };\n    update[field] = value;\n    this.props.updateRemote(update);\n  }\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  private isNumericSet(value) {\n    return value != null && value !== '';\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Button, DropdownItem, Tooltip } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { PulpStatus, RemoteType, UserType } from 'src/api';\nimport { DateComponent, ListItemActions, SortTable } from 'src/components';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { lastSyncStatus, lastSynced } from 'src/utilities';\n\ninterface IProps {\n  remotes: RemoteType[];\n  updateParams: (p) => void;\n  editRemote: (r: RemoteType) => void;\n  syncRemote: (distribution: string) => void;\n  user: UserType;\n  refreshRemotes: () => void;\n}\n\nexport class RemoteRepositoryTable extends React.Component<IProps> {\n  static contextType = AppContext;\n\n  polling: ReturnType<typeof setInterval>;\n  refreshOnStatuses = [PulpStatus.waiting, PulpStatus.running];\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.polling = setInterval(() => {\n      const { remotes } = this.props;\n      let refresh = false;\n      for (const remote of remotes) {\n        for (const repo of remote.repositories) {\n          if (repo.last_sync_task) {\n            if (this.refreshOnStatuses.includes(repo.last_sync_task.state)) {\n              refresh = true;\n              break;\n            }\n          }\n        }\n      }\n\n      if (refresh) {\n        this.props.refreshRemotes();\n      }\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.polling);\n  }\n\n  render() {\n    const { remotes } = this.props;\n    return this.renderTable(remotes);\n  }\n\n  private renderTable(remotes) {\n    const params = { sort: 'repository' };\n    const sortTableOptions = {\n      headers: [\n        {\n          title: t`Remote name`,\n          type: 'none',\n          id: 'remote',\n        },\n        {\n          title: t`Repositories`,\n          type: 'none',\n          id: 'repository',\n        },\n        {\n          title: t`Last updated`,\n          type: 'none',\n          id: 'updated_at',\n        },\n        {\n          title: t`Last synced`,\n          type: 'none',\n          id: 'last_sync_task.finished_at',\n        },\n        {\n          title: t`Sync status`,\n          type: 'none',\n          id: 'last_sync_task.error',\n        },\n        {\n          title: '',\n          type: 'none',\n          id: 'controls',\n        },\n      ],\n    };\n\n    return (\n      <table\n        aria-label={t`Collection versions`}\n        className='hub-c-table-content pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={() => null}\n        />\n        <tbody>{remotes.map((remote, i) => this.renderRow(remote, i))}</tbody>\n      </table>\n    );\n  }\n\n  private renderRow(remote, i) {\n    const { hasPermission } = this.context;\n    const buttons = remote.repositories.length\n      ? this.getConfigureOrSyncButton(remote)\n      : [\n          <Tooltip\n            content={t`There are no repos associated with this remote.`}\n            key='empty'\n          >\n            <Button variant='plain'>\n              <ExclamationCircleIcon />\n            </Button>\n          </Tooltip>,\n        ];\n    const dropdownItems = [\n      remote.repositories.length &&\n        hasPermission('ansible.change_collectionremote') && (\n          <DropdownItem\n            key='edit'\n            onClick={() => this.props.editRemote(remote)}\n          >\n            {t`Edit`}\n          </DropdownItem>\n        ),\n    ];\n    return (\n      <tr key={i}>\n        <td>{remote.name}</td>\n        <td>{remote.repositories.map((r) => r.name).join(', ')}</td>\n        {remote.updated_at ? (\n          <td>\n            <DateComponent date={remote.updated_at} />\n          </td>\n        ) : (\n          <td>{'---'}</td>\n        )}\n        <td>{lastSynced(remote) || '---'}</td>\n        <td>{lastSyncStatus(remote) || '---'}</td>\n        <ListItemActions kebabItems={dropdownItems} buttons={buttons} />\n      </tr>\n    );\n  }\n\n  private getConfigureOrSyncButton(remote: RemoteType) {\n    const { hasPermission } = this.context;\n    if (!hasPermission('ansible.change_collectionremote')) {\n      return null;\n    }\n    const configButton = [\n      <Button\n        key='config'\n        onClick={() => this.props.editRemote(remote)}\n        variant='secondary'\n      >\n        {t`Configure`}\n      </Button>,\n    ];\n\n    const syncButton = [\n      <Button\n        key='sync'\n        isDisabled={\n          remote.repositories.length === 0 ||\n          (remote.last_sync_task &&\n            ['running', 'waiting'].includes(remote.last_sync_task.state))\n        }\n        onClick={() =>\n          this.props.syncRemote(\n            remote.repositories[0].distributions[0].base_path,\n          )\n        }\n        variant='secondary'\n      >\n        {t`Sync`}\n      </Button>,\n    ];\n\n    let remoteType = 'none';\n\n    for (const host of Constants.UPSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'community';\n        break;\n      }\n    }\n\n    for (const host of Constants.DOWNSTREAM_HOSTS) {\n      if (remote.url.includes(host)) {\n        remoteType = 'certified';\n        break;\n      }\n    }\n\n    if (\n      remoteType === 'community' &&\n      remote.url &&\n      remote.name &&\n      remote.requirements_file\n    ) {\n      return syncButton;\n    }\n\n    if (\n      remoteType === 'certified' &&\n      remote.url &&\n      remote.name &&\n      remote.auth_url\n    ) {\n      return syncButton;\n    }\n\n    if (remoteType === 'none' && remote.url) {\n      return syncButton;\n    }\n\n    return configButton;\n  }\n}\n","import { i18n } from '@lingui/core';\nimport { t } from '@lingui/macro';\nimport {\n  Flex,\n  FlexItem,\n  InputGroup,\n  InputGroupText,\n  Select,\n  SelectOption,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Constants } from 'src/constants';\nimport { Paths, formatPath } from 'src/paths';\nimport './repo-selector.scss';\n\ninterface IProps {\n  selectedRepo: string;\n  // Path of the component that's using the component. This is required so that\n  // the url for the repo can be updated correctly.\n  path: Paths;\n  pathParams?: Record<string, string>;\n  isDisabled?: boolean;\n}\n\nexport const RepoSelector = ({\n  selectedRepo,\n  path,\n  pathParams,\n  isDisabled,\n}: IProps) => {\n  const [selectExpanded, setSelectExpanded] = useState<boolean>(false);\n  const navigate = useNavigate();\n\n  const getRepoName = (repoName) => {\n    const repo = Constants.REPOSITORYNAMES[repoName];\n    return repo ? i18n._(repo) : repoName;\n  };\n\n  const repoNames = Constants.REPOSITORYNAMES;\n\n  return (\n    <Flex>\n      <FlexItem>\n        <InputGroup>\n          <InputGroupText\n            style={{ paddingLeft: 0 }}\n            variant='plain'\n            className='hub-input-group-text-no-wrap'\n          >\n            {t`Filter by repository`}\n          </InputGroupText>\n          <Select\n            className='nav-select'\n            isDisabled={isDisabled}\n            isOpen={selectExpanded}\n            isPlain={false}\n            onSelect={(event: React.ChangeEvent<HTMLInputElement>) => {\n              const originalRepo = selectedRepo;\n              const newRepo = getRepoName(event.target.name);\n\n              setSelectExpanded(false);\n\n              if (newRepo !== originalRepo) {\n                const newPath = formatPath(path, {\n                  ...pathParams,\n                  repo: event.target.name,\n                });\n                navigate(newPath);\n              }\n            }}\n            onToggle={(isExpanded) => setSelectExpanded(isExpanded)}\n            selections={getRepoName(selectedRepo)}\n            variant='single'\n          >\n            {Object.keys(repoNames).map((option) => (\n              <SelectOption\n                name={option}\n                key={option}\n                value={i18n._(repoNames[option])}\n              />\n            ))}\n          </Select>\n        </InputGroup>\n      </FlexItem>\n    </Flex>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, TagIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  ContainerDistributionAPI,\n  ExecutionEnvironmentRegistryAPI,\n  ExecutionEnvironmentRemoteAPI,\n} from 'src/api';\nimport {\n  APISearchTypeAhead,\n  AlertList,\n  AlertType,\n  HelperText,\n  closeAlertMixin,\n} from 'src/components';\nimport { Paths, formatEEPath } from 'src/paths';\nimport {\n  ErrorMessagesType,\n  alertErrorsWithoutFields,\n  chipGroupProps,\n  errorMessage,\n  isFieldValid,\n  isFormValid,\n  mapErrorMessages,\n} from 'src/utilities';\n\ninterface IProps {\n  name: string;\n  namespace: string;\n  description: string;\n  onSave: (Promise, state?: IState) => void;\n  onCancel: () => void;\n  permissions: string[];\n  distributionPulpId: string;\n\n  // remote only\n  isNew?: boolean;\n  isRemote?: boolean;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registry?: string; // pk\n  upstreamName?: string;\n  remoteId?: string;\n  addAlert?: (variant, title, description?) => void;\n}\n\ninterface IState {\n  name: string;\n  description: string;\n  alerts: AlertType[];\n  addTagsInclude: string;\n  addTagsExclude: string;\n  excludeTags?: string[];\n  includeTags?: string[];\n  registries?: { id: string; name: string }[];\n  registrySelection?: { id: string; name: string }[];\n  upstreamName: string;\n  formErrors: ErrorMessagesType;\n}\n\nexport class RepositoryForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name || '',\n      description: this.props.description,\n\n      addTagsInclude: '',\n      addTagsExclude: '',\n      excludeTags: this.props.excludeTags,\n      includeTags: this.props.includeTags,\n      registries: null,\n      registrySelection: [],\n      upstreamName: this.props.upstreamName || '',\n      formErrors: {},\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isRemote) {\n      this.loadRegistries()\n        .then(() => {\n          // prefill registry if passed from props\n          if (this.props.registry) {\n            this.setState({\n              registrySelection: this.state.registries.filter(\n                ({ id }) => id === this.props.registry,\n              ),\n            });\n          }\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          const errorTitle = t`Registries list could not be displayed.`;\n          this.addAlert({\n            variant: 'danger',\n            title: errorTitle,\n            description: errorMessage(status, statusText),\n          });\n          this.setState({\n            formErrors: { ...this.state.formErrors, registries: errorTitle },\n          });\n        });\n    }\n  }\n\n  render() {\n    const { onSave, onCancel, namespace, isNew, isRemote } = this.props;\n    const {\n      name,\n      description,\n      upstreamName,\n      excludeTags,\n      includeTags,\n      registrySelection,\n      registries,\n      addTagsInclude,\n      addTagsExclude,\n      formErrors,\n    } = this.state;\n\n    return (\n      <Modal\n        variant='large'\n        onClose={onCancel}\n        isOpen={true}\n        title={\n          isNew ? t`Add execution environment` : t`Edit execution environment`\n        }\n        actions={[\n          <Button\n            key='save'\n            variant='primary'\n            isDisabled={!this.formIsValid()}\n            onClick={() => onSave(this.onSave(), this.state)}\n          >\n            {t`Save`}\n          </Button>,\n          <Button key='cancel' variant='link' onClick={onCancel}>\n            {t`Cancel`}\n          </Button>,\n        ]}\n      >\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={(i) => this.closeAlert(i)}\n        />\n        <Form>\n          {!isRemote ? (\n            <>\n              <FormGroup key='name' fieldId='name' label={t`Name`}>\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='namespace'\n                fieldId='namespace'\n                label={t`Container namespace`}\n              >\n                <TextInput\n                  id='namespace'\n                  value={namespace}\n                  isDisabled={true}\n                  type='text'\n                />\n              </FormGroup>\n            </>\n          ) : (\n            <>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                helperTextInvalid={this.state.formErrors['name']}\n                validated={isFieldValid(this.state.formErrors, 'name')}\n              >\n                <TextInput\n                  id='name'\n                  value={name}\n                  isDisabled={!isNew}\n                  onChange={(value) => {\n                    this.setState({ name: value });\n                    this.validateName(value);\n                  }}\n                  validated={isFieldValid(this.state.formErrors, 'name')}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='upstreamName'\n                fieldId='upstreamName'\n                label={t`Upstream name`}\n                isRequired={true}\n                labelIcon={\n                  <HelperText\n                    content={t`Use the namespace/name format for namespaced containers. Otherwise, use the library/name format.`}\n                  />\n                }\n              >\n                <TextInput\n                  id='upstreamName'\n                  value={upstreamName}\n                  onChange={(value) => this.setState({ upstreamName: value })}\n                />\n              </FormGroup>\n\n              <FormGroup\n                key='registry'\n                fieldId='registry'\n                label={t`Registry`}\n                className='hub-formgroup-registry'\n                isRequired={true}\n                helperTextInvalid={\n                  this.state.formErrors['registries'] ||\n                  this.state.formErrors['registry']\n                }\n                validated={isFieldValid(this.state.formErrors, [\n                  'registries',\n                  'registry',\n                ])}\n              >\n                {!formErrors?.registries && (\n                  <>\n                    {registries ? (\n                      <APISearchTypeAhead\n                        loadResults={(name) => this.loadRegistries(name)}\n                        onClear={() => this.setState({ registrySelection: [] })}\n                        onSelect={(event, value) =>\n                          this.setState({\n                            registrySelection: registries.filter(\n                              ({ name }) => name === value,\n                            ),\n                            formErrors: { ...formErrors, registry: null },\n                          })\n                        }\n                        placeholderText={t`Select a registry`}\n                        results={registries}\n                        selections={registrySelection}\n                      />\n                    ) : (\n                      <Spinner />\n                    )}\n                  </>\n                )}\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsInclude'\n                label={t`Add tag(s) to include`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsInclude'\n                    value={addTagsInclude}\n                    onChange={(val) => this.setState({ addTagsInclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsInclude, 'includeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsInclude, 'includeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently included tags`}\n              >\n                <LabelGroup\n                  {...chipGroupProps()}\n                  id='remove-tag'\n                  defaultIsOpen={true}\n                >\n                  {includeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'includeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='addTagsExclude'\n                label={t`Add tag(s) to exclude`}\n              >\n                <InputGroup>\n                  <TextInput\n                    type='text'\n                    id='addTagsExclude'\n                    value={addTagsExclude}\n                    onChange={(val) => this.setState({ addTagsExclude: val })}\n                    onKeyUp={(e) => {\n                      // l10n: don't translate\n                      if (e.key === 'Enter') {\n                        this.addTags(addTagsExclude, 'excludeTags');\n                      }\n                    }}\n                  />\n                  <Button\n                    variant='secondary'\n                    onClick={() => this.addTags(addTagsExclude, 'excludeTags')}\n                  >\n                    {t`Add`}\n                  </Button>\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                fieldId='currentTag'\n                label={t`Currently excluded tags`}\n              >\n                <LabelGroup\n                  {...chipGroupProps()}\n                  id='remove-tag'\n                  defaultIsOpen={true}\n                >\n                  {excludeTags.map((tag) => (\n                    <Label\n                      icon={<TagIcon />}\n                      onClose={() => this.removeTag(tag, 'excludeTags')}\n                      key={tag}\n                    >\n                      {tag}\n                    </Label>\n                  ))}\n                </LabelGroup>\n              </FormGroup>\n            </>\n          )}\n\n          <FormGroup\n            key='description'\n            fieldId='description'\n            label={t`Description`}\n          >\n            <TextArea\n              id='description'\n              value={description || ''}\n              isDisabled={\n                !this.props.permissions.includes(\n                  'container.namespace_change_containerdistribution',\n                )\n              }\n              onChange={(value) => this.setState({ description: value })}\n              type='text'\n              resizeOrientation={'vertical'}\n              autoResize={true}\n            />\n          </FormGroup>\n\n          <FormGroup fieldId='none' label={t`Groups with access`}>\n            <Alert\n              isInline\n              variant='info'\n              title={\n                isNew ? (\n                  <Trans>\n                    Moved to the <b>Owners</b> tab\n                  </Trans>\n                ) : (\n                  <Trans>\n                    Moved to the{' '}\n                    <Link\n                      target='_blank'\n                      to={formatEEPath(Paths.executionEnvironmentDetailOwners, {\n                        container: name,\n                      })}\n                    >\n                      Owners\n                    </Link>{' '}\n                    <ExternalLinkAltIcon /> tab\n                  </Trans>\n                )\n              }\n            />\n          </FormGroup>\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateName(name) {\n    const regex = /^([0-9A-Za-z._-]+\\/)?[0-9A-Za-z._-]+$/;\n    if (name === '' || regex.test(name)) {\n      this.setState({ formErrors: { ...this.state.formErrors, name: null } });\n      return;\n    } else {\n      const error = t`Container names can only contain alphanumeric characters, \".\", \"_\", \"-\" and a up to one \"/\".`;\n      this.setState({ formErrors: { ...this.state.formErrors, name: error } });\n    }\n  }\n\n  private formIsValid() {\n    const { name, upstreamName, registrySelection } = this.state;\n    if (!this.props.isRemote) {\n      // no validation for local\n      return true;\n    }\n\n    if (!isFormValid(this.state.formErrors)) {\n      return false;\n    }\n\n    // validation for non empty fields\n    return name && upstreamName && registrySelection.length;\n  }\n\n  private loadRegistries(name?) {\n    return ExecutionEnvironmentRegistryAPI.list({\n      ...(name ? { name__icontains: name } : {}),\n    }).then(({ data }) => {\n      const registries = data.data.map(({ id, name }) => ({ id, name }));\n      this.setState({ registries });\n      return registries;\n    });\n  }\n\n  private addTags(tags, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    tags.split(/\\s+|\\s*,\\s*/).forEach((tag) => current.add(tag));\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      [key === 'includeTags' ? 'addTagsInclude' : 'addTagsExclude']: '',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private removeTag(tag, key: 'includeTags' | 'excludeTags') {\n    const current = new Set(this.state[key]);\n    current.delete(tag);\n\n    this.setState({\n      [key]: Array.from(current.values()),\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any);\n  }\n\n  private onSave() {\n    const {\n      description: originalDescription,\n      distributionPulpId,\n      isNew,\n      isRemote,\n      name: originalName,\n      remoteId,\n    } = this.props;\n    const {\n      description,\n      excludeTags: exclude_tags,\n      includeTags: include_tags,\n      name,\n      registrySelection: [{ id: registry } = { id: null }],\n      upstreamName: upstream_name,\n    } = this.state;\n\n    let promise = null;\n    if (isRemote && isNew) {\n      promise = ExecutionEnvironmentRemoteAPI.create({\n        name,\n        upstream_name,\n        registry,\n        include_tags,\n        exclude_tags,\n      });\n    } else {\n      promise = Promise.all([\n        // remote edit - upstream, tags, registry\n        isRemote &&\n          !isNew &&\n          ExecutionEnvironmentRemoteAPI.update(remoteId, {\n            name: originalName, // readonly but required\n            upstream_name,\n            registry,\n            include_tags,\n            exclude_tags,\n          }),\n        // remote edit or local edit - description, if changed\n        description !== originalDescription &&\n          ContainerDistributionAPI.patch(distributionPulpId, { description }),\n      ]);\n    }\n\n    return promise.catch((e) => {\n      this.setState({ formErrors: mapErrorMessages(e) });\n      alertErrorsWithoutFields(\n        this.state.formErrors,\n        ['name', 'registry', 'registries'],\n        (alert) => this.addAlert(alert),\n        t`Error when saving registry.`,\n        (state) => this.setState({ formErrors: state }),\n      );\n      return Promise.reject(new Error(e));\n    });\n  }\n\n  private addAlert(alert) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Button,\n  Divider,\n  Form,\n  FormGroup,\n  InputGroup,\n  Spinner,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { PermissionCategories } from 'src/components';\n\ninterface IState {\n  permissions: string[];\n}\n\ninterface IProps {\n  nameDisabled?: boolean;\n  name: string;\n  description: string;\n  onNameChange?: (value: string) => void;\n  nameValidated?: 'default' | 'warning' | 'success' | 'error';\n  nameHelperText?: string;\n  descriptionValidated: 'default' | 'warning' | 'success' | 'error';\n  descriptionHelperText: string;\n  onDescriptionChange: (value: string) => void;\n  saveRole: (permissions: string[]) => void;\n  cancelRole: () => void;\n  isSavingDisabled: boolean;\n  saving: boolean;\n  originalPermissions?: string[];\n}\n\nexport class RoleForm extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permissions: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.originalPermissions) {\n      this.setState({ permissions: this.props.originalPermissions });\n    }\n  }\n\n  render() {\n    const { permissions } = this.state;\n    const {\n      name,\n      onNameChange,\n      nameValidated,\n      nameHelperText,\n      description,\n      descriptionValidated,\n      descriptionHelperText,\n      onDescriptionChange,\n      saveRole,\n      cancelRole,\n      nameDisabled,\n      isSavingDisabled,\n      saving,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <Form>\n          <div>\n            <div style={{ paddingBottom: '8px' }}>\n              <Title headingLevel='h2'>{t`Details`}</Title>\n            </div>\n\n            <div style={{ display: 'flex', gap: '10px' }}>\n              <FormGroup\n                isRequired={true}\n                key='name'\n                fieldId='name'\n                label={t`Name`}\n                style={{ width: '50%', float: 'left' }}\n                helperTextInvalid={nameHelperText}\n                validated={nameValidated}\n              >\n                <InputGroup>\n                  <TextInput\n                    id='role_name'\n                    isDisabled={nameDisabled}\n                    value={name}\n                    onChange={onNameChange}\n                    type='text'\n                    validated={nameValidated}\n                    placeholder={t`Role name`}\n                  />\n                </InputGroup>\n              </FormGroup>\n\n              <FormGroup\n                isRequired={true}\n                style={{ width: '50%' }}\n                key='description'\n                fieldId='description'\n                label={t`Description`}\n                helperTextInvalid={descriptionHelperText}\n                validated={descriptionValidated}\n              >\n                <TextInput\n                  id='role_description'\n                  value={description}\n                  onChange={onDescriptionChange}\n                  type='text'\n                  validated={descriptionValidated}\n                  placeholder={t`Add a role description here`}\n                />\n              </FormGroup>\n            </div>\n          </div>\n          <div>\n            <br />\n            <Divider />\n            <br />\n            <Title headingLevel='h2'>\n              <Trans>Permissions</Trans>\n            </Title>\n\n            <PermissionCategories\n              permissions={permissions}\n              setSelected={(permissions) => this.setState({ permissions })}\n              showCustom={false}\n              showEmpty={true}\n            />\n          </div>\n\n          <ActionGroup>\n            <Button\n              variant='primary'\n              isDisabled={isSavingDisabled}\n              onClick={() => saveRole(permissions)}\n            >\n              {t`Save`}\n            </Button>\n\n            <Button\n              variant='secondary'\n              onClick={cancelRole}\n            >{t`Cancel`}</Button>\n            {saving ? <Spinner></Spinner> : null}\n          </ActionGroup>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport React from 'react';\nimport { NamespaceType } from 'src/api';\nimport { MarkdownEditor } from '..';\nimport './namespace-form.scss';\n\nconst placeholder = `## Custom resources\n\nYou can use this page to add any resources which you think might help your \\\nusers automate all the things.\n\nConsider using it for:\n\n- Links to blog posts\n- Training resources\n- Documentation\n- Cat gifs? If that's your thing :)\n`;\n\ninterface IProps {\n  namespace: NamespaceType;\n\n  updateNamespace: (data) => void;\n}\n\nexport const ResourcesForm = ({ namespace, updateNamespace }: IProps) => (\n  <MarkdownEditor\n    text={namespace.resources}\n    placeholder={placeholder}\n    helperText={t`You can can customize the Resources tab on your profile by entering custom markdown here.`}\n    updateText={(resources) => updateNamespace({ ...namespace, resources })}\n    editing={true}\n  />\n);\n","import { Trans, t } from '@lingui/macro';\nimport {\n  Alert,\n  AlertActionLink,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  Label,\n  LabelGroup,\n  Modal,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TagIcon } from '@patternfly/react-icons';\nimport * as React from 'react';\nimport {\n  ContainerManifestType,\n  ContainerRepositoryType,\n  ContainerTagAPI,\n  ExecutionEnvironmentAPI,\n  PulpStatus,\n  TaskAPI,\n} from 'src/api';\nimport { AlertType } from 'src/components';\nimport { chipGroupProps, parsePulpIDFromURL } from 'src/utilities';\n\ninterface IState {\n  tagsToAdd: string[];\n  tagsToRemove: string[];\n  isSaving: boolean;\n  tagInForm: string;\n  verifyingTag: boolean;\n  tagToVerify: string;\n  pendingTasks: number;\n  tagInFormError: string;\n}\n\ninterface IProps {\n  isOpen: boolean;\n  closeModal: () => void;\n  containerManifest: ContainerManifestType;\n  reloadManifests: () => void;\n  repositoryName: string;\n  onAlert: (alert: AlertType) => void;\n  containerRepository: ContainerRepositoryType;\n}\n\ninterface ITaskUrls {\n  tag: string;\n  task: string;\n}\n\nconst VALID_TAG_REGEX = /^[A-Za-z0-9][A-Za-z0-9._-]*$/;\n\nexport class TagManifestModal extends React.Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSaving: false,\n      tagsToAdd: [],\n      tagsToRemove: [],\n      tagInForm: '',\n      verifyingTag: false,\n      tagToVerify: '',\n      tagInFormError: undefined,\n      pendingTasks: 0,\n    };\n  }\n\n  componentDidUpdate(prevProps: IProps) {\n    // if the containtainer manifest changes, reset the state\n\n    if (this.props.containerManifest !== prevProps.containerManifest) {\n      // Don't reset pending tasks and isSaving. This will prevent the user from\n      // editing another image while one is already being updated\n      this.setState({\n        tagsToAdd: [],\n        tagsToRemove: [],\n        tagInForm: '',\n        verifyingTag: false,\n        tagToVerify: '',\n        tagInFormError: undefined,\n      });\n    }\n  }\n\n  render() {\n    const { closeModal, isOpen, containerManifest } = this.props;\n\n    const {\n      tagInForm,\n      isSaving,\n      tagToVerify,\n      verifyingTag,\n      tagsToAdd,\n      tagsToRemove,\n      pendingTasks,\n      tagInFormError,\n    } = this.state;\n    if (!containerManifest) {\n      return null;\n    }\n\n    return (\n      <Modal\n        actions={[\n          <Button\n            key='save'\n            onClick={() => this.saveTags()}\n            isDisabled={\n              isSaving || (tagsToAdd.length <= 0 && tagsToRemove.length <= 0)\n            }\n          >\n            {t`Save`}\n            {isSaving && <Spinner size='sm'></Spinner>}\n          </Button>,\n          <Button\n            isDisabled={isSaving}\n            key='cancel'\n            onClick={() => closeModal()}\n            variant='link'\n          >\n            {t`Cancel`}\n          </Button>,\n        ]}\n        isOpen={isOpen}\n        onClose={() => closeModal()}\n        title={t`Manage tags`}\n        variant='small'\n      >\n        {/*\n        The Form component will reload the page when it's \"submitted\" which causes the page\n        to reload when the user hits \"enter\" or clicks \"Show Less\" on the LabelGroup\n        */}\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <FormGroup\n            validated={tagInFormError ? 'error' : 'default'}\n            helperTextInvalid={tagInFormError}\n            fieldId='add-new-tag'\n            label={t`Add new tag`}\n          >\n            <InputGroup>\n              <TextInput\n                validated={tagInFormError ? 'error' : 'default'}\n                type='text'\n                id='add-new-tag'\n                value={tagInForm}\n                onChange={(val) => this.setState({ tagInForm: val })}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n                onKeyUp={(e) => {\n                  // l10n: don't translate\n                  if (e.key === 'Enter') {\n                    this.verifyAndAddTag();\n                  }\n                }}\n              />\n              <Button\n                aria-label={t`Add new tag to image`}\n                variant='secondary'\n                onClick={this.verifyAndAddTag}\n                isDisabled={!!tagToVerify || verifyingTag || isSaving}\n              >\n                {t`Add`} {verifyingTag && <Spinner size='sm'></Spinner>}\n              </Button>\n            </InputGroup>\n          </FormGroup>\n          {tagToVerify && (\n            <Alert\n              variant='warning'\n              isInline\n              title={t`This tag already exists on another image. Do you want to move it to this image?`}\n              actionLinks={\n                <>\n                  <AlertActionLink\n                    onClick={() =>\n                      this.setState({ tagToVerify: '', tagInForm: '' }, () =>\n                        this.addTag(tagToVerify),\n                      )\n                    }\n                  >\n                    {t`Yes`}\n                  </AlertActionLink>\n                  <AlertActionLink\n                    onClick={() => this.setState({ tagToVerify: '' })}\n                  >\n                    {t`No`}\n                  </AlertActionLink>\n                </>\n              }\n            />\n          )}\n\n          <FormGroup fieldId='remove-tag' label={t`Current tags`}>\n            <LabelGroup\n              {...chipGroupProps()}\n              id='remove-tag'\n              defaultIsOpen={true}\n            >\n              {this.getCurrentTags().map((tag) => (\n                <Label\n                  disabled={isSaving}\n                  icon={<TagIcon />}\n                  onClose={isSaving ? undefined : () => this.removeTag(tag)}\n                  key={tag}\n                >\n                  {tag}\n                </Label>\n              ))}\n            </LabelGroup>\n          </FormGroup>\n          {pendingTasks > 0 && (\n            <Alert\n              isInline\n              variant='info'\n              title={\n                <Trans>Waiting for {pendingTasks} task(s) to finish.</Trans>\n              }\n            >\n              <Trans>\n                It&apos;s safe to close this window. These tasks will finish in\n                the background.\n              </Trans>\n            </Alert>\n          )}\n        </Form>\n      </Modal>\n    );\n  }\n\n  private validateTagName(tag) {\n    return tag.match(VALID_TAG_REGEX);\n  }\n\n  private handleFailedTag = (tag, error, operation) => {\n    let msg = undefined;\n\n    if (error.response.data['tag']) {\n      msg = error.response.data.tag.join(' ');\n    }\n\n    if (error.response.data['detail']) {\n      msg = error.response.data['detail'];\n    }\n\n    this.props.onAlert({\n      variant: 'danger',\n      title: t`Failed to ${operation} tag \"${tag}\".`,\n      description: msg,\n    });\n  };\n\n  private saveTags() {\n    const { containerManifest } = this.props;\n\n    this.setState({ isSaving: true }, () => {\n      const repository: ContainerRepositoryType =\n        this.props.containerRepository;\n\n      const promises = [];\n\n      for (const tag of this.state.tagsToRemove) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.untag(\n            repository.pulp.repository.id,\n            tag,\n          ).catch((e) => this.handleFailedTag(tag, e, 'remove')),\n        });\n      }\n\n      for (const tag of this.state.tagsToAdd) {\n        promises.push({\n          tag: tag,\n          promise: ContainerTagAPI.tag(\n            repository.pulp.repository.id,\n            tag,\n            containerManifest.digest,\n          ).catch((e) => this.handleFailedTag(tag, e, 'add')),\n        });\n      }\n\n      if (promises.length > 0) {\n        Promise.all(promises.map((p) => p.promise)).then((results) => {\n          const tasks: ITaskUrls[] = [];\n          for (const r in results) {\n            if (results[r]) {\n              tasks.push({\n                tag: promises[r].tag,\n                task: parsePulpIDFromURL(results[r].data.task),\n              });\n            }\n          }\n\n          this.waitForTasks(tasks);\n        });\n      } else {\n        this.setState({ isSaving: false });\n      }\n    });\n  }\n\n  // FIXME merge with waitForTask from utilities\n  private waitForTasks(taskUrls: ITaskUrls[]) {\n    const pending = new Set(taskUrls.map((i) => i.task));\n\n    const queryTasks = () => {\n      const promises = [];\n      for (const task of Array.from(pending)) {\n        promises.push(TaskAPI.get(task as string));\n      }\n\n      Promise.all(promises).then(async (results) => {\n        for (const r of results) {\n          const status = r.data.state;\n          if (\n            status === PulpStatus.completed ||\n            status === PulpStatus.skipped ||\n            status === PulpStatus.failed ||\n            status === PulpStatus.canceled\n          ) {\n            pending.delete(r.data.pulp_id);\n\n            if (\n              status === PulpStatus.skipped ||\n              status === PulpStatus.failed ||\n              status === PulpStatus.canceled\n            ) {\n              const tag = taskUrls.find((e) => e.task === r.data.pulp_id);\n              this.props.onAlert({\n                variant: 'danger',\n                title: t`Task to change tag \"${tag.tag}\" could not be completed.`,\n                description: t`Reason: task ${r.data.state}`,\n              });\n            }\n          }\n        }\n        if (pending.size > 0) {\n          // wait 5 seconds and then refresn\n          this.setState({ pendingTasks: pending.size });\n          await new Promise((r) => setTimeout(r, 5000));\n          queryTasks();\n        } else {\n          this.setState({ isSaving: false, pendingTasks: 0 }, () =>\n            this.props.reloadManifests(),\n          );\n        }\n      });\n    };\n\n    this.setState({ pendingTasks: pending.size }, queryTasks);\n  }\n\n  private verifyAndAddTag = () => {\n    // copy tag to prevent it from changing in the form during verification\n    const tag = `${this.state.tagInForm}`;\n\n    this.setState({ verifyingTag: true }, () => this.verifyTag(tag));\n  };\n\n  private verifyTag(tag: string) {\n    if (!this.validateTagName(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`A tag may contain lowercase and uppercase ASCII alphabetic characters, digits, underscores, periods, and dashes. A tag must not start with a period, underscore, or a dash.`,\n      });\n    } else if (this.getCurrentTags().includes(tag)) {\n      this.setState({\n        verifyingTag: false,\n        tagInFormError: t`This tag is already selected for this image. You cannot add it twice.`,\n      });\n    } else {\n      this.setState({ tagInFormError: undefined }, () => {\n        ExecutionEnvironmentAPI.image(this.props.repositoryName, tag)\n          .then(() => {\n            this.setState({ tagToVerify: tag, verifyingTag: false });\n          })\n          .catch(() => {\n            this.setState({ tagInForm: '', verifyingTag: false }, () =>\n              this.addTag(tag),\n            );\n          });\n      });\n    }\n  }\n\n  private addTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.add(tag);\n    toRemove.delete(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private removeTag(tag: string) {\n    const toAdd = new Set(this.state.tagsToAdd);\n    const toRemove = new Set(this.state.tagsToRemove);\n\n    toAdd.delete(tag);\n    toRemove.add(tag);\n\n    this.setState({\n      tagsToAdd: Array.from(toAdd),\n      tagsToRemove: Array.from(toRemove),\n    });\n  }\n\n  private getCurrentTags() {\n    const tags = new Set([\n      ...this.props.containerManifest.tags,\n      ...this.state.tagsToAdd,\n    ]);\n\n    for (const tag of this.state.tagsToRemove) {\n      tags.delete(tag);\n    }\n\n    return Array.from(tags.values());\n  }\n}\n","import { Label, Tooltip } from '@patternfly/react-core';\nimport React from 'react';\nimport { truncateSha } from 'src/utilities';\n\ninterface IProps {\n  digest: string;\n  grey?: boolean;\n  long?: boolean;\n}\n\nexport const ShaLabel = ({ digest, grey, long }: IProps) => (\n  <Tooltip content={digest}>\n    <Label color={grey ? 'grey' : 'blue'}>\n      {long ? digest : truncateSha(digest)}\n    </Label>\n  </Tooltip>\n);\n","import * as React from 'react';\nimport SmallLogoImage from 'src/../static/images/logo_small.svg';\n\ninterface IProps {\n  alt: string;\n}\n\nexport class SmallLogo extends React.Component<IProps> {\n  render() {\n    return (\n      <img\n        style={{ height: '35px' }}\n        src={SmallLogoImage}\n        alt={this.props.alt}\n      />\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport {\n  SortAlphaDownIcon,\n  SortAlphaUpIcon,\n  SortAmountDownIcon,\n  SortAmountUpIcon,\n} from '@patternfly/react-icons';\nimport * as React from 'react';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport './sort.scss';\n\nclass SortFieldType {\n  id: string;\n  title: string;\n  type: 'numeric' | 'alpha';\n}\n\ninterface IProps {\n  /** List of sort options that the user can pick from */\n  options: SortFieldType[];\n\n  /** Current page params */\n  params: object;\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Specify the name of the parameter that contains sort information */\n  sortParamName?: string;\n}\n\ninterface IState {\n  isExpanded: boolean;\n}\n\nexport class Sort extends React.Component<IProps, IState> {\n  options: { id: string; title: string }[];\n  static defaultProps = {\n    sortParamName: 'sort',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n    };\n  }\n\n  private onToggle(isExpanded) {\n    this.setState({\n      isExpanded,\n    });\n  }\n\n  private onSelect(name) {\n    let isDescending = this.getIsDescending(this.props.params);\n\n    const option = this.props.options.find((i) => i.title === name);\n\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    if (option.type === 'alpha') {\n      isDescending = !isDescending;\n    }\n    const desc = isDescending ? '-' : '';\n\n    this.setState({ isExpanded: false }, () =>\n      this.props.updateParams({\n        ...ParamHelper.setParam(\n          this.props.params,\n          this.props.sortParamName,\n          desc + option.id,\n        ),\n        page: 1,\n      }),\n    );\n  }\n\n  private setDescending() {\n    const field = this.getSelected(this.props.params);\n    const descending = !this.getIsDescending(this.props.params);\n\n    this.props.updateParams({\n      ...ParamHelper.setParam(\n        this.props.params,\n        this.props.sortParamName,\n        (descending ? '-' : '') + field.id,\n      ),\n      page: 1,\n    });\n  }\n\n  private getIsDescending(params) {\n    const sort = params[this.props.sortParamName];\n\n    // The ?sort= url param is not always guaranteed to be set. If it's\n    // not set, return the default\n    if (!sort) {\n      return true;\n    }\n    return sort.startsWith('-');\n  }\n\n  private getSelected(params) {\n    let sort = params[this.props.sortParamName];\n    const def = this.props.options[0];\n\n    if (!sort) {\n      return def;\n    }\n\n    if (sort.startsWith('-')) {\n      sort = sort.substring(1, sort.length);\n    }\n\n    const option = this.props.options.find((x) => x.id === sort);\n\n    return option ? option : def;\n  }\n\n  render() {\n    const { options, params } = this.props;\n    const { isExpanded } = this.state;\n\n    const selectedOption = this.getSelected(params);\n\n    let IconDesc;\n    let IconAsc;\n\n    if (selectedOption.type === 'alpha') {\n      IconAsc = SortAlphaDownIcon;\n      IconDesc = SortAlphaUpIcon;\n    } else {\n      IconDesc = SortAmountDownIcon;\n      IconAsc = SortAmountUpIcon;\n    }\n\n    return (\n      <div className='hub-sort-wrapper'>\n        {options.length > 1 ? (\n          <Select\n            variant={SelectVariant.single}\n            aria-label={t`Sort results`}\n            onToggle={(e) => this.onToggle(e)}\n            onSelect={(_, name) => this.onSelect(name)}\n            selections={selectedOption.title}\n            isOpen={isExpanded}\n          >\n            {options.map((option) => (\n              <SelectOption key={option.id} value={option.title} />\n            ))}\n          </Select>\n        ) : null}\n\n        {this.getIsDescending(params) ? (\n          <IconDesc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        ) : (\n          <IconAsc\n            className='clickable asc-button'\n            size='md'\n            onClick={() => this.setDescending()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import {\n  ArrowsAltVIcon,\n  LongArrowAltDownIcon,\n  LongArrowAltUpIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities';\nimport './sort-table.scss';\n\ninterface IProps {\n  options: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n      className?: string;\n    }[];\n  };\n  params: {\n    sort?: string;\n  };\n  updateParams: (params) => void;\n}\n\nexport const SortTable = ({ options, params, updateParams }: IProps) => {\n  function sort(id, isMinus) {\n    // Alphabetical sorting is inverted in Django, so flip it here to make\n    // things match up with the UI.\n    isMinus = !isMinus;\n    updateParams({\n      ...ParamHelper.setParam(params, 'sort', (isMinus ? '-' : '') + id),\n      page: 1,\n    });\n  }\n\n  function getIcon(type, id) {\n    if (type == 'none') {\n      return;\n    }\n\n    let Icon;\n    let isMinus = false;\n\n    const activeIcon = !!params.sort && id == params.sort.replace('-', '');\n    if (activeIcon) {\n      isMinus = params.sort.includes('-');\n      let up = isMinus;\n      if (type == 'alpha') {\n        up = !up;\n      }\n      Icon = up ? LongArrowAltDownIcon : LongArrowAltUpIcon;\n    } else {\n      Icon = ArrowsAltVIcon;\n    }\n\n    return (\n      <Icon\n        data-cy={'sort_' + id}\n        size='sm'\n        onClick={() => sort(id, isMinus)}\n        className={'clickable ' + (activeIcon ? 'active' : 'inactive')}\n      />\n    );\n  }\n\n  const getHeaderItem = (item) => (\n    <th key={item.id} className={item?.className}>\n      {item.title} {getIcon(item.type, item.id)}\n    </th>\n  );\n\n  return (\n    <thead>\n      <tr className='hub-SortTable-headers' data-cy='SortTable-headers'>\n        {options.headers.map((element) => getHeaderItem(element))}\n      </tr>\n    </thead>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Dropdown,\n  DropdownPosition,\n  DropdownToggle,\n  KebabToggle,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\n\ninterface IProps {\n  /** List of patternfly DropdownItem components */\n  items: React.ReactNode[];\n\n  /** Callback fired when the user selects an item */\n  onSelect?: (event) => void;\n\n  /** If not specified, dropdown button will be a kebab. icon simply removes the dropdown indicator */\n  toggleType?: 'dropdown' | 'icon' | 'kebab';\n\n  /** Text to display on the component when it's not expanded*/\n  defaultText?: React.ReactNode;\n\n  /** Specifies if the dropdown should be aligned to the left or the right of the toggle button*/\n  position?: 'left' | 'right';\n\n  /** Toggles between plain and normal patternfly styling */\n  isPlain?: boolean;\n\n  ariaLabel?: string;\n}\n\nexport const StatefulDropdown = ({\n  items,\n  onSelect: onSelectProp,\n  toggleType = 'kebab',\n  position,\n  defaultText,\n  isPlain = true,\n  ariaLabel,\n}: IProps) => {\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>(undefined);\n  const onToggle = (open) => setOpen(open);\n\n  return (\n    <Dropdown\n      onSelect={(e) =>\n        onSelect(e, { isOpen, onSelectProp, setOpen, setSelected })\n      }\n      toggle={renderToggle({ toggleType, defaultText, onToggle, selected })}\n      isOpen={isOpen}\n      isPlain={isPlain}\n      dropdownItems={items}\n      position={position || DropdownPosition.right}\n      autoFocus={false}\n      aria-label={ariaLabel}\n    />\n  );\n};\n\nfunction renderToggle({ toggleType, defaultText, onToggle, selected }) {\n  switch (toggleType) {\n    case 'dropdown':\n      return (\n        <DropdownToggle onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'icon':\n      return (\n        <DropdownToggle toggleIndicator={null} onToggle={onToggle}>\n          {selected ? selected : defaultText || t`Dropdown`}\n        </DropdownToggle>\n      );\n    case 'kebab':\n      return <KebabToggle onToggle={onToggle} />;\n  }\n}\n\nfunction onSelect(event, { isOpen, onSelectProp, setOpen, setSelected }) {\n  setOpen(!isOpen);\n  setSelected(event.currentTarget.value);\n\n  if (onSelectProp) {\n    onSelectProp(event);\n  }\n}\n","import { t } from '@lingui/macro';\nimport { Label, LabelProps } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationIcon,\n  OutlinedClockIcon,\n  SyncAltIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\nimport { PulpStatus } from 'src/api';\n\ninterface IProps {\n  status: PulpStatus;\n  type?: 'primary' | 'secondary';\n  className?: string;\n}\n\ninterface LabelPropType {\n  color: LabelProps['color'];\n  icon: React.ReactElement;\n  text: string;\n}\n\nconst typeToVariantMap: Record<string, LabelProps['variant']> = {\n  primary: 'outline',\n  secondary: 'filled',\n};\n\nconst statusToProps = (status): LabelPropType => {\n  switch (status) {\n    case PulpStatus.waiting:\n      return {\n        color: 'blue',\n        text: t`Pending`,\n        icon: <OutlinedClockIcon />,\n      };\n\n    // TODO: what does skipped mean in pulp\n    case PulpStatus.skipped:\n    case PulpStatus.canceled:\n      return {\n        color: 'orange',\n        text: t`Canceled`,\n        icon: <ExclamationIcon />,\n      };\n\n    case PulpStatus.running:\n      return { color: 'blue', text: t`Running`, icon: <SyncAltIcon /> };\n\n    case PulpStatus.completed:\n      return {\n        color: 'green',\n        text: t`Completed`,\n        icon: <CheckCircleIcon />,\n      };\n\n    case PulpStatus.failed:\n      return {\n        color: 'red',\n        text: t`Failed`,\n        icon: <ExclamationCircleIcon />,\n      };\n  }\n  return null;\n};\n\nexport const StatusIndicator = ({\n  status,\n  type = 'primary',\n  className,\n}: IProps) => {\n  const labelProps = statusToProps(status);\n  if (!labelProps) {\n    return <>---</>;\n  }\n\n  return (\n    <Label\n      variant={typeToVariantMap[type]}\n      color={labelProps.color}\n      icon={labelProps.icon}\n      className={className}\n    >\n      {labelProps.text}\n    </Label>\n  );\n};\n","import { t } from '@lingui/macro';\nimport {\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  SearchInput,\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { capitalize } from 'lodash';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DocsBlobType } from 'src/api';\nimport { useContext } from 'src/loaders/app-context';\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, sanitizeDocsUrls } from 'src/utilities';\n\nclass DocsEntry {\n  display: string;\n  name: string;\n  type: string;\n  url?: string;\n}\n\nclass Table {\n  documentation: DocsEntry[];\n  modules: DocsEntry[];\n  roles: DocsEntry[];\n  plugins: DocsEntry[];\n  playbooks: DocsEntry[];\n}\n\ninterface IProps {\n  docs_blob: DocsBlobType;\n  namespace: string;\n  collection: string;\n  params: { keywords?: string };\n  selectedName?: string;\n  selectedType?: string;\n  className?: string;\n  updateParams: (p) => void;\n  searchBarRef?: React.Ref<HTMLInputElement>;\n}\n\nexport const TableOfContents = (props: IProps) => {\n  const [docsBlob, setDocsBlob] = useState<DocsBlobType>(null);\n  const [table, setTable] = useState<Table>(null);\n  const context = useContext();\n\n  const collapsedCategories = [];\n  const { className, docs_blob, updateParams, params } = props;\n\n  if (!table || docsBlob !== docs_blob) {\n    setTable(parseLinks(docs_blob, props, context));\n    setDocsBlob(docs_blob);\n  }\n\n  return (\n    <div className={className}>\n      <Toolbar>\n        <ToolbarGroup>\n          <ToolbarItem>\n            <SearchInput\n              ref={props.searchBarRef}\n              value={params.keywords}\n              onChange={(_e, val) =>\n                updateParams(ParamHelper.setParam(params, 'keywords', val))\n              }\n              onClear={() =>\n                updateParams(ParamHelper.setParam(params, 'keywords', ''))\n              }\n              aria-label={t`find-content`}\n              placeholder={t`Find content`}\n            />\n          </ToolbarItem>\n        </ToolbarGroup>\n      </Toolbar>\n      <Nav theme='light'>\n        <NavList>\n          {table != null &&\n            Object.keys(table).map((key) =>\n              table[key].length === 0\n                ? null\n                : renderLinks(\n                    table[key],\n                    key,\n                    props.params.keywords || '',\n                    collapsedCategories,\n                    props,\n                  ),\n            )}\n        </NavList>\n      </Nav>\n    </div>\n  );\n};\n\nfunction parseLinks(docs_blob: DocsBlobType, props, context): Table {\n  const { namespace, collection } = props;\n\n  const baseUrlParams = {\n    namespace: namespace,\n    collection: collection,\n    repo: context.selectedRepo,\n  };\n\n  const table = {\n    documentation: [] as DocsEntry[],\n    modules: [] as DocsEntry[],\n    roles: [] as DocsEntry[],\n    plugins: [] as DocsEntry[],\n    playbooks: [] as DocsEntry[],\n  };\n\n  table.documentation.push({\n    display: t`Readme`,\n    url: formatPath(Paths.collectionDocsIndexByRepo, baseUrlParams),\n    type: 'docs',\n    name: 'readme',\n  });\n\n  if (docs_blob.documentation_files) {\n    for (const file of docs_blob.documentation_files) {\n      const url = sanitizeDocsUrls(file.name);\n      table.documentation.push({\n        display: my_capitalize(file.name.split('.')[0].split('_').join(' ')),\n        url: formatPath(Paths.collectionDocsPageByRepo, {\n          ...baseUrlParams,\n          page: url,\n        }),\n        // selected: selectedType === 'docs' && selectedName === url,\n        type: 'docs',\n        name: url,\n      });\n    }\n  }\n\n  if (docs_blob.contents) {\n    for (const content of docs_blob.contents) {\n      switch (content.content_type) {\n        case 'role':\n          table.roles.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'module':\n          table.modules.push(getContentEntry(content, baseUrlParams));\n          break;\n        case 'playbook':\n          table.playbooks.push(getContentEntry(content, baseUrlParams));\n          break;\n        default:\n          table.plugins.push(getContentEntry(content, baseUrlParams));\n          break;\n      }\n    }\n  }\n\n  // Sort docs\n  for (const k of Object.keys(table)) {\n    table[k].sort((a, b) => {\n      // Make sure that anything starting with _ goes to the bottom\n      // of the list\n      if (a.display.startsWith('_') && !b.display.startsWith('_')) {\n        return 1;\n      }\n      if (!a.display.startsWith('_') && b.display.startsWith('_')) {\n        return -1;\n      }\n      return a.display > b.display ? 1 : -1;\n    });\n  }\n\n  return table;\n}\n\nfunction renderLinks(\n  links: DocsEntry[],\n  title,\n  filterString: string,\n  collapsedCategories,\n  props,\n) {\n  const isExpanded = !collapsedCategories.includes(title);\n  const filteredLinks = links.filter((link) =>\n    link.display.toLowerCase().includes(filterString.toLowerCase()),\n  );\n  return (\n    <NavExpandable\n      key={title}\n      title={capitalize(`${title} (${filteredLinks.length})`)}\n      isExpanded={isExpanded}\n      isActive={getSelectedCategory(props) === title}\n    >\n      {filteredLinks.map((link: DocsEntry, index) => (\n        <NavItem key={index} isActive={isSelected(link, props)}>\n          <Link\n            style={{\n              textOverflow: 'ellipses',\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n            }}\n            to={\n              link.url +\n              (Object.keys(props.params).length != 0\n                ? '?' + ParamHelper.getQueryString(props.params)\n                : '')\n            }\n          >\n            <span\n              style={{\n                textOverflow: 'ellipsis',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                display: 'block',\n              }}\n            >\n              {link.display}\n            </span>\n          </Link>\n        </NavItem>\n      ))}\n    </NavExpandable>\n  );\n}\n\nfunction isSelected(entry: DocsEntry, props): boolean {\n  // the readme's url is always docs/, so load it when the name is null\n  if (!props.selectedName && entry.name === 'readme') {\n    return true;\n  }\n\n  return (\n    // selected name and type are the values found for type and name\n    // in the page url\n    props.selectedName === entry.name && props.selectedType === entry.type\n  );\n}\n\nfunction getSelectedCategory(props): string {\n  const { selectedType } = props;\n  if (!selectedType || selectedType === 'docs') {\n    return 'documentation';\n  }\n\n  if (selectedType === 'role') {\n    return 'roles';\n  }\n\n  if (selectedType === 'module') {\n    return 'modules';\n  }\n\n  return 'plugins';\n}\n\nfunction my_capitalize(s: string) {\n  return s.slice(0, 1).toUpperCase() + s.slice(1);\n}\n\nfunction getContentEntry(content, base): DocsEntry {\n  return {\n    display: content.content_name,\n    url: formatPath(Paths.collectionContentDocsByRepo, {\n      ...base,\n      type: content.content_type,\n      name: content.content_name,\n    }),\n    name: content.content_name,\n    type: content.content_type,\n  };\n}\n","import { Tabs as PFTabs, Tab, TabTitleText } from '@patternfly/react-core';\nimport React from 'react';\nimport { ParamHelper } from 'src/utilities/param-helper';\n\nexport class TabsType {\n  id: string;\n  name: string;\n}\n\ninterface IProps {\n  /** List of names for tabs */\n  tabs: TabsType[];\n  /** Current page params */\n  params: { tab?: string };\n\n  /** Sets the current page params to p */\n  updateParams: (params) => void;\n\n  /** Disables tab controls */\n  isDisabled?: boolean;\n  disabledTitle?: string;\n}\n\n// FIXME: use LinkTabs, switch from ?tab to routes, rename to Tabs\nexport const Tabs = ({\n  tabs,\n  params,\n  updateParams,\n  isDisabled,\n  disabledTitle,\n}: IProps) => (\n  <PFTabs\n    activeKey={getActiveTab({ params, tabs })}\n    onSelect={(_, key) =>\n      !isDisabled &&\n      updateParams(\n        ParamHelper.setParam(params, 'tab', tabs[key].id.toLowerCase()),\n      )\n    }\n  >\n    {tabs.map((tab, i) => (\n      <Tab\n        key={i}\n        eventKey={i}\n        title={\n          <TabTitleText title={isDisabled ? disabledTitle : null}>\n            {tab.name}\n          </TabTitleText>\n        }\n        className={isDisabled ? 'disabled' : null}\n      />\n    ))}\n  </PFTabs>\n);\n\nfunction getActiveTab({ params, tabs }) {\n  if (params.tab) {\n    const i = tabs.findIndex(\n      (x) => x.id.toLowerCase() === params.tab.toLowerCase(),\n    );\n\n    // If tab is not found, default to the first tab.\n    if (i === -1) {\n      return 0;\n    } else {\n      return i;\n    }\n  } else {\n    return 0;\n  }\n}\n","import { Label } from '@patternfly/react-core';\nimport React from 'react';\nimport './tag.scss';\n\ninterface IProps {\n  /** Value to display in the tag */\n  children: string;\n}\n\nexport const Tag = ({ children }: IProps) => (\n  <Label className='hub-c-label-tag' readOnly data-cy='tag'>\n    {children}\n  </Label>\n);\n","import { Tooltip as PFTooltip } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  children: React.ReactNode;\n  content: string;\n}\n\nexport const Tooltip = ({ content, children }: IProps) => (\n  <PFTooltip content={content}>\n    <span>{children}</span>\n  </PFTooltip>\n);\n","import React from 'react';\n\ninterface IProps extends React.HTMLAttributes<HTMLDivElement> {\n  text: string;\n}\n\nconst HTMLComment = ({ text, ...props }: IProps) => (\n  <div {...props} dangerouslySetInnerHTML={{ __html: `<!-- ${text} -->` }} />\n);\n\nexport const UIVersion = () => (\n  <HTMLComment\n    className='hub-ui-version'\n    text={`ansible-hub-ui ${UI_COMMIT_HASH}`}\n  />\n);\n","import {\n  Form,\n  FormGroup,\n  TextInput,\n  TextInputTypes,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  errorMessages: ErrorMessagesType;\n  formFields: {\n    formGroupLabelIcon?: React.ReactElement;\n    id: string;\n    placeholder?: string;\n    title: string;\n    type?: TextInputTypes;\n  }[];\n  formPrefix?: React.ReactNode;\n  formSuffix?: React.ReactNode;\n  isReadonly: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: { [key: string]: any };\n  requiredFields: string[];\n  updateField: (value, event) => void;\n  onSave: () => void;\n}\n\nexport class DataForm extends React.Component<IProps> {\n  render() {\n    const {\n      errorMessages,\n      formFields,\n      formPrefix,\n      formSuffix,\n      isReadonly,\n      model,\n      requiredFields,\n      updateField,\n    } = this.props;\n\n    const fields = formFields.map((field) => {\n      if (!field) {\n        return null;\n      }\n\n      const validated = field.id in errorMessages ? 'error' : 'default';\n\n      return (\n        <FormGroup\n          fieldId={field.id}\n          helperTextInvalid={errorMessages[field.id]}\n          isRequired={!isReadonly && requiredFields.includes(field.id)}\n          key={field.id}\n          label={field.title}\n          labelIcon={!isReadonly && field.formGroupLabelIcon}\n          validated={isReadonly ? 'default' : validated}\n          data-cy={`DataForm-field-${field.id}`}\n        >\n          {isReadonly ? (\n            model[field.id]\n          ) : (\n            <TextInput\n              id={field.id}\n              onChange={updateField}\n              placeholder={field.placeholder}\n              type={field.type || 'text'}\n              validated={validated}\n              value={model[field.id]}\n            />\n          )}\n        </FormGroup>\n      );\n    });\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.onSave();\n        }}\n      >\n        {formPrefix}\n        {fields}\n        {formSuffix}\n      </Form>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  ActionGroup,\n  Alert,\n  Button,\n  FormGroup,\n  Label,\n  Switch,\n  TextInput,\n  TextInputTypes,\n  Tooltip,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { GroupAPI, UserType } from 'src/api';\nimport { APISearchTypeAhead, AlertType, HelperText } from 'src/components';\nimport { DataForm } from 'src/components/shared/data-form';\nimport { AppContext } from 'src/loaders/app-context';\nimport { ErrorMessagesType, errorMessage } from 'src/utilities';\n\ninterface IProps {\n  /** User to edit */\n  user: UserType;\n\n  /** Updates the current user object with the new user object */\n  updateUser: (user: UserType, errorMesssages: object) => void;\n\n  /** List of errors from the API */\n  errorMessages: ErrorMessagesType;\n\n  /** Disables the form */\n  isReadonly?: boolean;\n\n  /** Saves the current user */\n  saveUser?: () => void;\n\n  /** Action to take when the user presses the cancel button */\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\ninterface IState {\n  passwordConfirm: string;\n  searchGroups: { name: string; id: number }[];\n  formErrors: {\n    groups: AlertType;\n  };\n}\n\nexport class UserForm extends React.Component<IProps, IState> {\n  public static defaultProps = {\n    isReadonly: false,\n  };\n  static contextType = AppContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passwordConfirm: '',\n      searchGroups: [],\n      formErrors: {\n        groups: null,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.loadGroups('');\n  }\n\n  render() {\n    const {\n      user,\n      errorMessages,\n      isReadonly,\n      saveUser,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n    const { passwordConfirm, formErrors } = this.state;\n    const minLength = this.context.settings.GALAXY_MINIMUM_PASSWORD_LENGTH || 9; // actually counts codepoints, close enough\n\n    const formFields = [\n      { id: 'username', title: t`Username` },\n      { id: 'first_name', title: t`First name` },\n      { id: 'last_name', title: t`Last name` },\n      { id: 'email', title: t`Email` },\n      !isReadonly && {\n        id: 'password',\n        title: t`Password`,\n        type: TextInputTypes.password,\n        placeholder: isNewUser ? '' : '••••••••••••••••••••••',\n        formGroupLabelIcon: (\n          <HelperText\n            content={t`Create a password using at least ${minLength} characters, including special characters , ex <!@$%>. Avoid using common names or expressions.`}\n          />\n        ),\n      },\n    ];\n    const requiredFields = ['username', ...(isNewUser ? ['password'] : [])];\n\n    const passwordConfirmGroup = () => (\n      <FormGroup\n        fieldId='password-confirm'\n        helperTextInvalid={t`Passwords do not match`}\n        isRequired={isNewUser || !!user.password}\n        key='confirm-group'\n        label={t`Password confirmation`}\n        validated={this.toError(\n          this.isPassSame(user.password, passwordConfirm),\n        )}\n      >\n        <TextInput\n          placeholder={isNewUser ? '' : '••••••••••••••••••••••'}\n          validated={this.toError(\n            this.isPassSame(user.password, passwordConfirm),\n          )}\n          isDisabled={isReadonly}\n          id='password-confirm'\n          value={passwordConfirm}\n          onChange={(value) => {\n            this.setState({ passwordConfirm: value });\n          }}\n          type='password'\n        />\n      </FormGroup>\n    );\n\n    const readonlyAuth = () => (\n      <FormGroup\n        fieldId='auth_provider'\n        key='readonlyAuth'\n        label={t`Authentication provider`}\n      >\n        {user.auth_provider.map((provider) => (\n          <Label key={provider}>{provider}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const readonlyGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        key='readonlyGroups'\n        label={t`Groups`}\n        data-cy='UserForm-readonly-groups'\n      >\n        {user.groups.map((group) => (\n          <Label key={group.name}>{group.name}</Label>\n        ))}\n      </FormGroup>\n    );\n\n    const editGroups = () => (\n      <FormGroup\n        fieldId='groups'\n        helperTextInvalid={errorMessages['groups']}\n        key='editGroups'\n        label={t`Groups`}\n        validated={this.toError(!('groups' in errorMessages))}\n      >\n        {formErrors.groups ? (\n          <Alert title={formErrors.groups.title} variant='danger' isInline>\n            {formErrors.groups.description}\n          </Alert>\n        ) : (\n          <APISearchTypeAhead\n            results={this.state.searchGroups}\n            loadResults={this.loadGroups}\n            onSelect={this.onSelectGroup}\n            placeholderText={t`Select groups`}\n            selections={user.groups}\n            multiple={true}\n            onClear={this.clearGroups}\n            isDisabled={isReadonly}\n          />\n        )}\n      </FormGroup>\n    );\n\n    const superuserLabel = (\n      <FormGroup\n        validated={this.toError(!('is_superuser' in errorMessages))}\n        fieldId='is_superuser'\n        key='superuserLabel'\n        label={t`User type`}\n        helperTextInvalid={errorMessages['is_superuser']}\n        helperText={this.getSuperUserHelperText(user)}\n      >\n        <Tooltip\n          content={t`Super users have all system permissions regardless of what groups they are in.`}\n        >\n          <Switch\n            isDisabled={\n              !this.context.user.is_superuser ||\n              isReadonly ||\n              this.context.user.id === user.id\n            }\n            label={t`Super user`}\n            labelOff={t`Not a super user`}\n            isChecked={user.is_superuser}\n            onChange={() =>\n              this.updateUserFieldByName(!user.is_superuser, 'is_superuser')\n            }\n          ></Switch>\n        </Tooltip>\n      </FormGroup>\n    );\n\n    const formButtons = () => (\n      <ActionGroup key='actions'>\n        <Button\n          type='submit'\n          isDisabled={\n            !this.isPassValid(user.password, passwordConfirm) ||\n            !this.requiredFilled(user)\n          }\n        >\n          {t`Save`}\n        </Button>\n        <Button key='cancel' onClick={() => onCancel()} variant='link'>\n          {t`Cancel`}\n        </Button>\n      </ActionGroup>\n    );\n\n    const formSuffix = [\n      !isReadonly && passwordConfirmGroup(),\n      isMe || isReadonly ? readonlyGroups() : editGroups(),\n      isMe && isReadonly && readonlyAuth(),\n      superuserLabel,\n      !isReadonly && formButtons(),\n    ];\n\n    return (\n      <DataForm\n        errorMessages={errorMessages}\n        formFields={formFields}\n        formSuffix={<>{formSuffix}</>}\n        isReadonly={isReadonly}\n        model={user}\n        requiredFields={requiredFields}\n        updateField={(v, e) => this.updateField(v, e)}\n        onSave={() => saveUser()}\n      />\n    );\n  }\n\n  private getSuperUserHelperText(user) {\n    if (!this.context.user.is_superuser) {\n      return t`Requires super user permissions to edit.`;\n    }\n    if (this.context.user.id === user.id) {\n      return t`Super users can't disable themselves.`;\n    }\n\n    return null;\n  }\n\n  private clearGroups = () => {\n    const newUser = { ...this.props.user };\n    newUser.groups = [];\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private onSelectGroup = (event, selection) => {\n    const { user } = this.props;\n\n    const newUser = { ...user };\n\n    const i = user.groups.findIndex((g) => g.name === selection);\n    if (i === -1) {\n      const addedGroup = this.state.searchGroups.find(\n        (g) => g.name === selection,\n      );\n      user.groups.push(addedGroup);\n    } else {\n      user.groups.splice(i, 1);\n    }\n\n    this.props.updateUser(newUser, this.props.errorMessages);\n  };\n\n  private loadGroups = (name) => {\n    GroupAPI.list({ name__contains: name, page_size: 5 })\n      .then((result) => this.setState({ searchGroups: result.data.data }))\n      .catch((e) => {\n        const { status, statusText } = e.response;\n        this.setState({\n          formErrors: {\n            ...this.state.formErrors,\n            groups: {\n              variant: 'danger',\n              title: t`Groups list could not be displayed.`,\n              description: errorMessage(status, statusText),\n            },\n          },\n        });\n      });\n  };\n\n  private toError(validated: boolean) {\n    if (validated) {\n      return 'default';\n    } else {\n      return 'error';\n    }\n  }\n\n  // confirm is empty, or matches password\n  private isPassSame(pass, confirm) {\n    return !confirm || pass === confirm;\n  }\n\n  // both passwords missing, or both match\n  private isPassValid(pass, confirm) {\n    return !(pass || confirm) || pass === confirm;\n  }\n\n  private requiredFilled(user) {\n    if (this.props.isNewUser) {\n      return !!user.password && !!user.username;\n    } else {\n      return !!user.username;\n    }\n  }\n\n  private updateUserFieldByName(value, field) {\n    const errorMessages = { ...this.props.errorMessages };\n\n    const update = { ...this.props.user };\n    update[field] = value;\n    if (field in errorMessages) {\n      delete errorMessages[field];\n    }\n    this.props.updateUser(update, errorMessages);\n  }\n\n  private updateField = (value, event) => {\n    this.updateUserFieldByName(value, event.target.id);\n  };\n}\n","import * as React from 'react';\nimport { UserType } from 'src/api';\nimport {\n  BaseHeader,\n  BreadcrumbType,\n  Breadcrumbs,\n  Main,\n  UserForm,\n} from 'src/components';\nimport { ErrorMessagesType } from 'src/utilities';\n\ninterface IProps {\n  title: string;\n  user: UserType;\n  breadcrumbs: BreadcrumbType[];\n  errorMessages: ErrorMessagesType;\n  isReadonly?: boolean;\n\n  updateUser: (user: UserType, errorMessages: ErrorMessagesType) => void;\n  saveUser?: () => void;\n  extraControls?: React.ReactNode;\n  onCancel?: () => void;\n  isNewUser?: boolean;\n  isMe?: boolean;\n}\n\nexport class UserFormPage extends React.Component<IProps> {\n  public static defaultProps = {\n    extraControls: null,\n  };\n  render() {\n    const {\n      user,\n      breadcrumbs,\n      title,\n      updateUser,\n      errorMessages,\n      saveUser,\n      isReadonly,\n      extraControls,\n      onCancel,\n      isNewUser,\n      isMe,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <BaseHeader\n          breadcrumbs={<Breadcrumbs links={breadcrumbs}></Breadcrumbs>}\n          pageControls={extraControls}\n          title={title}\n        ></BaseHeader>\n        <Main>\n          <section className='body'>\n            <UserForm\n              isMe={isMe}\n              isReadonly={isReadonly}\n              user={user}\n              updateUser={updateUser}\n              errorMessages={errorMessages}\n              saveUser={saveUser}\n              onCancel={onCancel}\n              isNewUser={isNewUser}\n            ></UserForm>\n          </section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  ExpandableRowContent,\n  TableComposable,\n  Tbody,\n  Td,\n  Tr,\n} from '@patternfly/react-table';\nimport React, { useState } from 'react';\nimport { SortTable } from 'src/components';\n\ninterface Props {\n  params?: object;\n  updateParams?: (params) => void;\n  isCompact?: boolean;\n  tableHeader?: {\n    headers: {\n      title: string;\n      type: string;\n      id: string;\n    }[];\n  };\n  isStickyHeader?: boolean;\n}\n\nexport const RoleListTable: React.FC<Props> = ({\n  children,\n  params,\n  updateParams,\n  isCompact,\n  tableHeader,\n  isStickyHeader = false,\n}) => {\n  const defaultTableHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'role',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n      {\n        title: t`Editable`,\n        type: 'none',\n        id: 'locked',\n      },\n      {\n        title: '',\n        type: 'none',\n        id: 'kebab',\n      },\n    ],\n  };\n\n  return (\n    <TableComposable\n      aria-label='role-list-table'\n      data-cy='RoleListTable'\n      variant={isCompact ? 'compact' : undefined}\n      isStickyHeader={isStickyHeader}\n    >\n      <SortTable\n        options={tableHeader ?? defaultTableHeader}\n        params={params}\n        updateParams={updateParams}\n      />\n      {children}\n    </TableComposable>\n  );\n};\n\nexport const ExpandableRow: React.FC<{\n  rowIndex: number;\n  expandableRowContent?: React.ReactNode;\n  colSpan?: number;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, expandableRowContent, colSpan, ...props }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <Tbody isExpanded={isExpanded}>\n      <Tr data-cy={props['data-cy']}>\n        <Td\n          expand={{\n            onToggle: () => setIsExpanded(!isExpanded),\n            isExpanded,\n            rowIndex,\n          }}\n        />\n        {children}\n      </Tr>\n      {expandableRowContent && (\n        <Tr isExpanded={isExpanded}>\n          <Td colSpan={colSpan ?? 4}>\n            {isExpanded && (\n              <ExpandableRowContent>\n                {expandableRowContent}\n              </ExpandableRowContent>\n            )}\n          </Td>\n        </Tr>\n      )}\n    </Tbody>\n  );\n};\n\nexport const CheckboxRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'checkbox',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n\nexport const RadioRow: React.FC<{\n  rowIndex?: number;\n  isSelected: boolean;\n  onSelect: (value) => void;\n  isDisabled?: boolean;\n  'data-cy'?: string;\n}> = ({ rowIndex, children, isSelected, onSelect, isDisabled, ...props }) => (\n  <Tbody>\n    <Tr data-cy={props['data-cy']}>\n      <Td\n        select={{\n          disable: isDisabled,\n          variant: 'radio',\n          rowIndex,\n          onSelect,\n          isSelected,\n        }}\n      />\n      {children}\n    </Tr>\n  </Tbody>\n);\n","import { t } from '@lingui/macro';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  /** Specify if the value is set on the backend already */\n  isValueSet: boolean;\n\n  /** Function to set the value to null */\n  onClear: () => void;\n\n  /** Component to display when the user is allowed to update this field. */\n  children: React.ReactNode;\n}\n\nexport const WriteOnlyField = ({ onClear, isValueSet, children }: IProps) =>\n  !isValueSet ? (\n    <>{children}</>\n  ) : (\n    <InputGroup>\n      <TextInput\n        aria-label={t`hidden value`}\n        placeholder='••••••••••••••••••••••'\n        type='password'\n        isDisabled={isValueSet}\n      />\n      {isValueSet && (\n        <Button onClick={() => onClear()} variant='control'>\n          {t`Clear`}\n        </Button>\n      )}\n    </InputGroup>\n  );\n","import { t } from '@lingui/macro';\nimport { ClipboardCopy as PFClipboardCopy } from '@patternfly/react-core';\nimport React from 'react';\n\ninterface IProps {\n  children: string;\n  [key: string]: string | number | boolean;\n}\n\nexport const ClipboardCopy = ({ children, ...props }: IProps) => (\n  <PFClipboardCopy\n    hoverTip={t`Copy to clipboard`}\n    clickTip={t`Successfully copied to clipboard!`}\n    {...props}\n  >\n    {children}\n  </PFClipboardCopy>\n);\n","import { t } from '@lingui/macro';\nimport {\n  FileUploadProps,\n  FileUpload as PFFileUpload,\n} from '@patternfly/react-core';\nimport React from 'react';\n\nexport const FileUpload = (props: FileUploadProps) => (\n  <PFFileUpload\n    browseButtonText={t`Browse...`}\n    clearButtonText={t`Clear`}\n    filenamePlaceholder={t`Drag a file here or browse to upload`}\n    {...props}\n  />\n);\n","import { List } from '@patternfly/react-core';\nimport React from 'react';\nimport { StatefulDropdown } from '../patternfly-wrappers/stateful-dropdown';\n\ninterface IProps {\n  kebabItems?: React.ReactNode[];\n  buttons?: React.ReactNode[];\n}\nexport class ListItemActions extends React.Component<IProps> {\n  render() {\n    const buttons = this.props.buttons?.filter(Boolean);\n    const kebabItems = this.props.kebabItems?.filter(Boolean);\n\n    return (\n      <td\n        style={{\n          paddingRight: '0px',\n          textAlign: 'right',\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        {buttons?.length ? (\n          <>\n            <List>{buttons}</List>{' '}\n          </>\n        ) : null}\n        {kebabItems?.length ? (\n          <div data-cy='kebab-toggle'>\n            <StatefulDropdown items={kebabItems} />{' '}\n          </div>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import { Trans, t } from '@lingui/macro';\nimport { Checkbox, Text } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionDetailType, CollectionListType } from 'src/api';\nimport { DeleteModal } from 'src/components';\n\ninterface IProps {\n  deleteCollection: CollectionDetailType | CollectionListType;\n  isDeletionPending: boolean;\n  confirmDelete: boolean;\n  collectionVersion?: string;\n  cancelAction: () => void;\n  deleteAction: () => void;\n  setConfirmDelete: (val) => void;\n}\n\nexport class DeleteCollectionModal extends React.Component<IProps> {\n  render() {\n    const {\n      deleteCollection,\n      isDeletionPending,\n      confirmDelete,\n      collectionVersion,\n      cancelAction,\n      deleteAction,\n      setConfirmDelete,\n    } = this.props;\n\n    return (\n      deleteCollection && (\n        <DeleteModal\n          spinner={isDeletionPending}\n          cancelAction={() => cancelAction()}\n          deleteAction={() => deleteAction()}\n          isDisabled={!confirmDelete || isDeletionPending}\n          title={\n            collectionVersion\n              ? t`Delete collection version?`\n              : t`Delete collection?`\n          }\n        >\n          <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n            {collectionVersion ? (\n              <>\n                {(deleteCollection as CollectionDetailType).all_versions\n                  .length === 1 ? (\n                  <Trans>\n                    Deleting{' '}\n                    <b>\n                      {deleteCollection.name} v{collectionVersion}\n                    </b>{' '}\n                    and its data will be lost and this will cause the entire\n                    collection to be deleted.\n                  </Trans>\n                ) : (\n                  <Trans>\n                    Deleting{' '}\n                    <b>\n                      {deleteCollection.name} v{collectionVersion}\n                    </b>{' '}\n                    and its data will be lost.\n                  </Trans>\n                )}\n              </>\n            ) : (\n              <Trans>\n                Deleting <b>{deleteCollection.name}</b> and its data will be\n                lost.\n              </Trans>\n            )}\n          </Text>\n          <Checkbox\n            isChecked={confirmDelete}\n            onChange={setConfirmDelete}\n            label={t`I understand that this action cannot be undone.`}\n            id='delete_confirm'\n          />\n        </DeleteModal>\n      )\n    );\n  }\n}\n","import { t } from '@lingui/macro';\nimport {\n  Modal,\n  ModalVariant,\n  Wizard as PFWizard,\n  WizardStep,\n} from '@patternfly/react-core';\nimport React from 'react';\n\ninterface Props {\n  steps: WizardStep[];\n  title: string;\n  variant?: ModalVariant;\n  onClose: () => void;\n  onSave: () => void;\n}\n\nexport const WizardModal = ({\n  steps,\n  title,\n  onClose,\n  onSave,\n  variant,\n}: Props) => (\n  <Modal\n    isOpen\n    variant={variant ?? ModalVariant.large}\n    showClose={false}\n    aria-label={title}\n    hasNoBodyWrapper\n  >\n    <PFWizard\n      hasNoBodyPadding\n      navAriaLabel={t`${title} steps`}\n      mainAriaLabel={t`${title} content`}\n      backButtonText={t`Back`}\n      cancelButtonText={t`Cancel`}\n      closeButtonAriaLabel={t`Close`}\n      nextButtonText={t`Next`}\n      titleId='wizard-modal-title'\n      descriptionId='wizard-modal-description'\n      title={title}\n      steps={steps}\n      onClose={onClose}\n      onSave={onSave}\n    />\n  </Modal>\n);\n","import { Trans } from '@lingui/macro';\nimport { Divider, Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React from 'react';\nimport { GroupType, RoleType } from 'src/api';\nimport { Tooltip } from 'src/components';\nimport { useContext } from 'src/loaders/app-context';\nimport { translateLockedRolesDescription } from 'src/utilities';\n\ninterface Props {\n  group: GroupType;\n  selectedRoles: RoleType[];\n}\n\nconst splitByDot = (perm: string) => {\n  const [category, permission] = perm.split('.', 2);\n  const catTitle = category.charAt(0).toUpperCase() + category.slice(1);\n  return (\n    <>\n      <strong>{catTitle}:</strong>&nbsp;{permission}\n    </>\n  );\n};\n\nexport const PreviewRoles = ({ group, selectedRoles }: Props) => {\n  const { model_permissions } = useContext().user;\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <p>\n        <Trans>\n          The following roles will be applied to group:{' '}\n          <strong>{group.name}</strong>\n        </Trans>\n      </p>\n      <Flex direction={{ default: 'column' }} className='hub-preview-roles'>\n        {selectedRoles.map((role) => (\n          <React.Fragment key={role.name}>\n            <FlexItem>\n              <strong>{role.name}</strong>{' '}\n              {role?.description &&\n                `- ${translateLockedRolesDescription(\n                  role.name,\n                  role.description,\n                )}`}\n              <Flex className='hub-permissions'>\n                {role.permissions.map((permission) => (\n                  <FlexItem\n                    key={permission}\n                    className='hub-permission'\n                    data-cy={`HubPermission-${permission}`}\n                  >\n                    <Tooltip\n                      content={\n                        model_permissions[permission]?.name || permission\n                      }\n                    >\n                      <Label>{splitByDot(permission)}</Label>\n                    </Tooltip>\n                  </FlexItem>\n                ))}\n              </Flex>\n            </FlexItem>\n            <FlexItem>\n              <Divider />\n            </FlexItem>\n          </React.Fragment>\n        ))}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { RoleAPI, RoleType } from 'src/api';\nimport {\n  AppliedFilters,\n  CheckboxRow,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet, translateLockedRolesDescription } from 'src/utilities';\n\ninterface SelectRolesProps {\n  assignedRoles: { role: string }[];\n  selectedRoles: RoleType[];\n  onRolesUpdate?: (roles) => void;\n  message?: string;\n  pulpObjectType?: string;\n}\n\nexport const SelectRoles: React.FC<SelectRolesProps> = ({\n  assignedRoles,\n  selectedRoles,\n  onRolesUpdate,\n  message,\n  pulpObjectType,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [roles, setRoles] = useState<RoleType[]>([]);\n  const [rolesItemCount, setRolesItemCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n    sort: 'name',\n  });\n\n  useEffect(() => {\n    queryRoles();\n  }, [localParams]);\n\n  const queryRoles = () => {\n    setLoading(true);\n    RoleAPI.list(\n      { name__startswith: 'galaxy.', ...localParams },\n      pulpObjectType,\n    ).then(({ data }) => {\n      setRoles(data.results);\n      setRolesItemCount(data.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isRoleSelected = (name) =>\n    selectedRoles.map((r) => r.name).includes(name);\n\n  const noData = roles.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable roles.`}\n          description={t`There are currently no roles that can be assigned to this group.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = (name) => assignedRoles.some((role) => role.role === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Role`,\n        type: 'alpha',\n        id: 'name',\n      },\n      {\n        title: t`Description`,\n        type: 'none',\n        id: 'description',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {message && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>{message}</FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            {Object.keys(selectedRoles).length !== 0 && (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected roles</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      {selectedRoles.map((role) => (\n                        <FlexItem\n                          key={role.name}\n                          className='hub-permission'\n                          data-cy={`HubPermission-${role.name}`}\n                        >\n                          <Label\n                            onClose={() =>\n                              onRolesUpdate(\n                                selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                ),\n                              )\n                            }\n                          >\n                            {role.name}\n                          </Label>\n                        </FlexItem>\n                      ))}\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            )}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {roles.map((role, i) => (\n                      <CheckboxRow\n                        rowIndex={i}\n                        key={role.name}\n                        isSelected={\n                          isRoleSelected(role.name) || isAssigned(role.name)\n                        }\n                        onSelect={() =>\n                          onRolesUpdate(\n                            isRoleSelected(role.name)\n                              ? selectedRoles.filter(\n                                  (r) => r.name !== role.name,\n                                )\n                              : [...selectedRoles, role],\n                          )\n                        }\n                        isDisabled={isAssigned(role.name)}\n                        data-cy={`RoleListTable-CheckboxRow-row-${role.name}`}\n                      >\n                        <td>{role.name}</td>\n                        <td>\n                          {translateLockedRolesDescription(\n                            role.name,\n                            role.description,\n                          )}\n                        </td>\n                      </CheckboxRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={rolesItemCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { Flex, FlexItem, Label } from '@patternfly/react-core';\nimport React, { useEffect, useState } from 'react';\nimport { GroupAPI, GroupType } from 'src/api';\nimport {\n  AppliedFilters,\n  CompoundFilter,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RadioRow,\n  RoleListTable,\n} from 'src/components';\nimport { filterIsSet } from 'src/utilities';\n\ninterface IProps {\n  assignedGroups: GroupType[];\n  selectedGroup?: GroupType;\n  updateGroup?: (group) => void;\n}\n\nexport const SelectGroup: React.FC<IProps> = ({\n  assignedGroups,\n  selectedGroup,\n  updateGroup,\n}) => {\n  const [inputText, setInputText] = useState<string>('');\n  const [groups, setGroups] = useState<GroupType[]>([]);\n  const [groupsCount, setGroupsCount] = useState<number>(0);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [localParams, setLocalParams] = useState({\n    page: 1,\n    page_size: 10,\n  });\n\n  useEffect(() => {\n    queryGroups();\n  }, [localParams]);\n\n  const queryGroups = () => {\n    setLoading(true);\n    GroupAPI.list(localParams).then(({ data }) => {\n      setGroups(data.data);\n      setGroupsCount(data.meta.count);\n      setLoading(false);\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className='hub-custom-wizard-layout hub-loading-wizard'>\n        <LoadingPageSpinner />\n      </div>\n    );\n  }\n\n  const isSelected = ({ name }) => selectedGroup?.name === name;\n\n  const noData = groups.length === 0;\n\n  if (noData && !filterIsSet(localParams, ['name__icontains'])) {\n    return (\n      <div className='hub-custom-wizard-layout hub-no-data'>\n        <EmptyStateNoData\n          title={t`No assignable groups.`}\n          description={t`There are currently no groups that can be assigned to this namespace.`}\n        />\n      </div>\n    );\n  }\n\n  const isAssigned = ({ name }) =>\n    assignedGroups.some((group) => group.name === name);\n\n  const tabHeader = {\n    headers: [\n      {\n        title: '',\n        type: 'none',\n        id: 'expander',\n      },\n      {\n        title: t`Group`,\n        type: 'alpha',\n        id: 'name',\n      },\n    ],\n  };\n\n  return (\n    <div className='hub-custom-wizard-layout'>\n      <Flex\n        justifyContent={{\n          default: noData\n            ? 'justifyContentFlexStart'\n            : 'justifyContentSpaceBetween',\n        }}\n        direction={{ default: 'column' }}\n      >\n        <FlexItem className='hub-select-roles-content'>\n          <Flex\n            justifyContent={{\n              default: noData\n                ? 'justifyContentFlexStart'\n                : 'justifyContentSpaceBetween',\n            }}\n            direction={{ default: 'column' }}\n          >\n            {selectedGroup ? (\n              <FlexItem>\n                <Flex>\n                  <FlexItem>\n                    <strong>\n                      <Trans>Selected group</Trans>\n                    </strong>\n                  </FlexItem>\n\n                  <FlexItem flex={{ default: 'flex_1' }}>\n                    <Flex>\n                      <FlexItem\n                        key={selectedGroup.name}\n                        className='hub-permission'\n                      >\n                        <Label>{selectedGroup.name}</Label>\n                      </FlexItem>\n                    </Flex>\n                  </FlexItem>\n                </Flex>\n              </FlexItem>\n            ) : null}\n\n            <FlexItem>\n              <div className='hub-filter'>\n                <CompoundFilter\n                  inputText={inputText}\n                  onChange={(inputText) => setInputText(inputText)}\n                  params={localParams}\n                  updateParams={(p) => setLocalParams(p)}\n                  filterConfig={[\n                    {\n                      id: 'name__icontains',\n                      title: t`Name`,\n                    },\n                  ]}\n                />\n              </div>\n\n              <AppliedFilters\n                updateParams={(p) => {\n                  setLocalParams(p);\n                  setInputText('');\n                }}\n                params={localParams}\n                niceNames={{ name__icontains: t`Name` }}\n                ignoredParams={['sort', 'page_size', 'page']}\n                style={{ marginTop: '8px' }}\n              />\n            </FlexItem>\n\n            <FlexItem style={{ flexGrow: 1 }}>\n              {noData && filterIsSet(localParams, ['name__icontains']) ? (\n                <div className='hub-no-filter-data'>\n                  <EmptyStateFilter />\n                </div>\n              ) : (\n                <div className='hub-selected-roles-list'>\n                  <RoleListTable\n                    isStickyHeader\n                    params={localParams}\n                    updateParams={(p) => {\n                      setLocalParams(p);\n                    }}\n                    tableHeader={tabHeader}\n                  >\n                    {groups.map((group, i) => (\n                      <RadioRow\n                        rowIndex={i}\n                        key={group.name}\n                        isSelected={isSelected(group)}\n                        onSelect={() => updateGroup(group)}\n                        isDisabled={isAssigned(group)}\n                        data-cy={`GroupListTable-CheckboxRow-row-${group.name}`}\n                      >\n                        <td>{group.name}</td>\n                      </RadioRow>\n                    ))}\n                  </RoleListTable>\n                </div>\n              )}\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n\n        {!noData && (\n          <FlexItem>\n            <Pagination\n              params={localParams}\n              updateParams={(p) => setLocalParams(p)}\n              count={groupsCount}\n            />\n          </FlexItem>\n        )}\n      </Flex>\n    </div>\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  LabelGroup,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LegacyRoleDetailType } from 'src/api/response-types/legacy-role';\nimport { DateComponent, Logo, Tag } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { chipGroupProps } from 'src/utilities';\nimport './legacy-role-item.scss';\n\ninterface LegacyRoleProps {\n  role: LegacyRoleDetailType;\n  show_thumbnail: boolean;\n}\n\nexport class LegacyRoleListItem extends React.Component<LegacyRoleProps> {\n  render() {\n    const { role, show_thumbnail } = this.props;\n    const namespace = role.summary_fields.namespace;\n    const role_url = formatPath(Paths.legacyRole, {\n      username: role.github_user,\n      name: role.name,\n    });\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    let release_date = null;\n    let release_name = null;\n    const lv = role.summary_fields.versions[0];\n    if (lv !== undefined && lv !== null) {\n      release_date = lv.release_date;\n      release_name = lv.name;\n    }\n    if (\n      release_date === undefined ||\n      release_date === null ||\n      release_date === ''\n    ) {\n      release_date = role.modified;\n    }\n    if (\n      release_name === undefined ||\n      release_name === null ||\n      release_name === ''\n    ) {\n      release_name = '';\n    }\n\n    const cells = [];\n\n    if (show_thumbnail !== false) {\n      cells.push(\n        <DataListCell isFilled={false} alignRight={false} key='ns'>\n          <Logo\n            alt={t`role.github_user logo`}\n            image={role.summary_fields.namespace.avatar_url}\n            size='70px'\n            unlockWidth\n            width='97px'\n          ></Logo>\n        </DataListCell>,\n      );\n    }\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link to={role_url}>\n            {namespace.name}.{role.name}\n          </Link>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              <Trans>\n                Provided by <Link to={namespace_url}>{namespace.name}</Link>\n              </Trans>\n            </Text>\n          </TextContent>\n        </div>\n        <div className='hub-entry'>{role.description}</div>\n        <div className='hub-entry'>\n          <LabelGroup {...chipGroupProps()}>\n            {role.summary_fields.tags.map((tag, index) => (\n              <Tag key={index}>{tag}</Tag>\n            ))}\n          </LabelGroup>\n        </div>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight key='stats'>\n        <div className='hub-right-col hub-entry'>\n          <Trans>\n            Updated <DateComponent date={release_date} />\n          </Trans>\n        </div>\n        <div className='hub-entry'>{release_name}</div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='LegacyRoleListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LegacyNamespaceDetailType } from 'src/api';\nimport { Logo } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport './legacy-namespace-item.scss';\n\ninterface LegacyNamespaceProps {\n  namespace: LegacyNamespaceDetailType;\n}\n\nexport class LegacyNamespaceListItem extends React.Component<LegacyNamespaceProps> {\n  render() {\n    const { namespace } = this.props;\n    const namespace_url = formatPath(Paths.legacyNamespace, {\n      namespaceid: namespace.id,\n    });\n\n    const cells = [];\n\n    cells.push(\n      <DataListCell isFilled={false} alignRight={false} key='ns'>\n        <Logo\n          alt='logo'\n          fallbackToDefault\n          image={namespace.avatar_url}\n          size='40px'\n          unlockWidth\n          width='97px'\n        ></Logo>\n      </DataListCell>,\n    );\n\n    cells.push(\n      <DataListCell key='content'>\n        <div>\n          <Link to={namespace_url}>{namespace.name}</Link>\n        </div>\n      </DataListCell>,\n    );\n\n    return (\n      <DataListItem data-cy='LegacyNamespaceListItem'>\n        <DataListItemRow>\n          <DataListItemCells dataListCells={cells} />\n        </DataListItemRow>\n      </DataListItem>\n    );\n  }\n}\n","import { defineMessage, t } from '@lingui/macro';\n\nexport class Constants {\n  static readonly SEARCH_VIEW_TYPE_LOCAL_KEY = 'search_view_type';\n  static readonly DEFAULT_PAGE_SIZE = 10;\n  static readonly DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n\n  static readonly CARD_DEFAULT_PAGE_SIZE = 10;\n  static readonly CARD_DEFAULT_PAGINATION_OPTIONS = [10, 20, 50, 100];\n  static readonly INSIGHTS_DEPLOYMENT_MODE = 'insights';\n  static readonly STANDALONE_DEPLOYMENT_MODE = 'standalone';\n\n  static readonly ADMIN_GROUP = 'system:partner-engineers';\n  static PUBLISHED = 'published';\n\n  static CERTIFIED_REPO =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? 'published'\n      : 'rh-certified';\n\n  static NOTCERTIFIED = 'rejected';\n  static NEEDSREVIEW = 'staging';\n\n  static USER_GROUP_MGMT_PERMISSIONS = [\n    'galaxy.delete_user',\n    'galaxy.add_user',\n    'galaxy.change_user',\n    'galaxy.delete_group',\n    'galaxy.add_group',\n  ];\n\n  static UPSTREAM_HOSTS = [\n    'galaxy.ansible.com',\n    'galaxy-dev.ansible.com',\n    'galaxy-qa.ansible.com',\n  ];\n\n  static DOWNSTREAM_HOSTS = [\n    'console.redhat.com',\n    'console.stage.redhat.com',\n    'ci.console.redhat.com',\n    'qa.console.redhat.com',\n  ];\n\n  static REPOSITORYNAMES = {\n    published: defineMessage({ message: `Published` }),\n    'rh-certified': defineMessage({ message: `Red Hat Certified` }),\n    community: defineMessage({ message: `Community` }),\n    validated: defineMessage({ message: `Validated` }),\n  };\n\n  static ALLOWEDREPOS = ['community', 'published', 'rh-certified', 'validated'];\n\n  static COLLECTION_FILTER_TAGS = [\n    'application',\n    'cloud',\n    'database',\n    'infrastructure',\n    'linux',\n    'monitoring',\n    'networking',\n    'security',\n    'storage',\n    'tools',\n    'windows',\n  ];\n\n  static TASK_NAMES = {\n    'galaxy_ng.app.tasks.promotion._remove_content_from_repository':\n      defineMessage({ message: `Remove content from repository` }),\n    'galaxy_ng.app.tasks.publishing.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_synclist_repository': defineMessage({\n      message: `Curate synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.import_and_move_to_staging': defineMessage({\n      message: `Import and move to staging`,\n    }),\n    'galaxy_ng.app.tasks.import_and_auto_approve': defineMessage({\n      message: `Import and auto approve`,\n    }),\n    'galaxy_ng.app.tasks.curate_all_synclist_repository': defineMessage({\n      message: `Curate all synclist repository`,\n    }),\n    'galaxy_ng.app.tasks.synclist.curate_synclist_repository_batch':\n      defineMessage({ message: `Curate synclist repository batch` }),\n    'pulp_ansible.app.tasks.collections.sync': defineMessage({\n      message: `Pulp Ansible: Collections sync`,\n    }),\n    'pulp_ansible.app.tasks.copy.copy_content': defineMessage({\n      message: `Pulp ansible: Copy content`,\n    }),\n    'pulp_ansible.app.tasks.collections.collection_sync': defineMessage({\n      message: `Pulp ansible: collection sync`,\n    }),\n    'pulp_ansible.app.tasks.roles.synchronize': defineMessage({\n      message: `Pulp Ansible: Roles synchronize`,\n    }),\n    'pulp_ansible.app.tasks.collections.update_collection_remote':\n      defineMessage({ message: `Pulp ansible: Update collection remote` }),\n    'pulp_ansible.app.tasks.collections.import_collection': defineMessage({\n      message: `Pulp ansible: Import collection`,\n    }),\n    'pulp_container.app.tasks.tag_image': defineMessage({\n      message: `Pulp container: Tag image`,\n    }),\n    'pulp_container.app.tasks.untag_image': defineMessage({\n      message: `Pulp container: Untage image`,\n    }),\n    'pulp_container.app.tasks.synchronize': defineMessage({\n      message: `Pulp container: Tasks synchronize`,\n    }),\n    'pulp_container.app.tasks.recursive_add_content': defineMessage({\n      message: `Pulp container: Recursive add content`,\n    }),\n    'pulp_container.app.tasks.recursive_remove_content': defineMessage({\n      message: `Pulp container: Recursive remove content`,\n    }),\n    'pulp_container.app.tasks.build_image_from_containerfile': defineMessage({\n      message: `Pulp container: Build image from containerfile`,\n    }),\n    'pulp_container.app.tasks.general_multi_delete': defineMessage({\n      message: `Pulp container: General multi delete`,\n    }),\n    'pulpcore.tasking.tasks.import_repository_version': defineMessage({\n      message: `Pulpcore: Import repository version`,\n    }),\n    'pulpcore.tasking.tasks.orphan_cleanup': defineMessage({\n      message: `Pulpcore: Orphan cleanup`,\n    }),\n    'pulpcore.tasking.tasks.repair_all_artifacts': defineMessage({\n      message: `Pulpcore: Repair all artifacts`,\n    }),\n    'pulpcore.tasking.tasks.base.general_create': defineMessage({\n      message: `Pulpcore: General create`,\n    }),\n    'pulpcore.tasking.tasks.base.general_update': defineMessage({\n      message: `Pulpcore: General update`,\n    }),\n    'pulpcore.tasking.tasks.base.general_delete': defineMessage({\n      message: `Pulpcore: General delete`,\n    }),\n    'pulpcore.app.tasks.export.pulp_export': defineMessage({\n      message: `Pulpcore: Pulp export`,\n    }),\n    'pulpcore.app.tasks.pulp_import': defineMessage({\n      message: `Pulpcore: Pulp import`,\n    }),\n    'pulpcore.app.tasks.repository.delete_version': defineMessage({\n      message: `Pulpcore: Delete version`,\n    }),\n    'pulpcore.app.tasks.repository.repair_version': defineMessage({\n      message: `Pulpcore: Repair version`,\n    }),\n    'pulpcore.app.tasks.upload.commit': defineMessage({\n      message: `Pulpcore: Upload commit`,\n    }),\n    'pulpcore.app.tasks.repository.add_and_remove': defineMessage({\n      message: `Pulpcore: Add and remove`,\n    }),\n    'pulpcore.plugin.tasking.add_and_remove': defineMessage({\n      message: `Pulpcore: Add or remove`,\n    }),\n  };\n\n  static HUMAN_STATUS = {\n    completed: t`Completed`,\n    failed: t`Failed`,\n    running: t`Running`,\n    waiting: t`Waiting`,\n  };\n\n  static LOCKED_ROLES_WITH_DESCRIPTION = {\n    // galaxy roles\n    'galaxy.content_admin': t`Manage all content types.`,\n    'galaxy.collection_admin': t`Create, delete and change collection namespaces. Upload and delete collections. Sync collections from remotes. Approve and reject collections.`,\n    'galaxy.collection_publisher': t`Upload and modify collections.`,\n    'galaxy.collection_curator': t`Approve, reject and sync collections from remotes.`,\n    'galaxy.collection_namespace_owner': t`Change and upload collections to namespaces.`,\n    'galaxy.execution_environment_admin': t`Push, delete, and change execution environments. Create, delete and change remote registries.`,\n    'galaxy.execution_environment_publisher': t`Push, and change execution environments.`,\n    'galaxy.execution_environment_namespace_owner': t`Create and update execution environments under existing container namespaces.`,\n    'galaxy.execution_environment_collaborator': t`Change existing execution environments.`,\n    'galaxy.group_admin': t`View, add, remove and change groups.`,\n    'galaxy.user_admin': t`View, add, remove and change users.`,\n    'galaxy.synclist_owner': t`View, add, remove and change synclists.`,\n    'galaxy.task_admin': t`View, and cancel any task.`,\n\n    // core roles\n    'core.task_owner': t`Allow all actions on a task.`,\n    'core.taskschedule_owner': t`Allow all actions on a taskschedule.`,\n  };\n}\n","import { i18n } from '@lingui/core';\nimport * as plurals from 'make-plural/plurals';\nimport * as moment from 'moment';\n\n// remember to update .linguirc as well\nconst availableLanguages = ['en', 'es', 'fr', 'ko', 'nl', 'ja', 'zh'];\n\n// map missing moment locales (node_modules/moment/src/locale/<locale>.js must exist, except for english)\nconst momentLocales = {\n  zh: 'zh-cn',\n};\n\nasync function activate(locale: string, pseudolocalization = false) {\n  const { messages } = await import(`src/../locale/${locale}.js`);\n\n  if (pseudolocalization) {\n    Object.keys(messages).forEach((key) => {\n      if (Array.isArray(messages[key])) {\n        // t`Foo ${param}` -> [\"Foo \", ['param']] => [\">>\", \"Foo \", ['param'], \"<<\"]\n        messages[key] = ['»', ...messages[key], '«'];\n      } else {\n        // simple string\n        messages[key] = '»' + messages[key] + '«';\n      }\n    });\n  }\n\n  i18n.loadLocaleData(locale, { plurals: plurals[locale] });\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n\n  moment.locale(momentLocales[locale] || locale);\n}\n\n// Accept-Language\nconst userLanguage = navigator.languages\n  .map((lang) => lang.replace(/[-_].*/, ''))\n  .filter((lang) => availableLanguages.includes(lang))[0];\n\nconst searchParams = Object.fromEntries(\n  new URLSearchParams(window.location.search),\n);\n\nif (searchParams.pseudolocalization === 'true') {\n  window.localStorage.test_l10n = 'true';\n}\nif (searchParams.pseudolocalization === 'false') {\n  delete window.localStorage.test_l10n;\n}\n\nif (searchParams.lang) {\n  window.localStorage.override_l10n = searchParams.lang;\n}\nif (searchParams.lang === '') {\n  delete window.localStorage.override_l10n;\n}\n\nconst overrideLanguage =\n  window.localStorage.override_l10n &&\n  availableLanguages.includes(window.localStorage.override_l10n) &&\n  window.localStorage.override_l10n;\nconst language = overrideLanguage || userLanguage || 'en';\nconst pseudolocalization = window.localStorage.test_l10n === 'true';\n\nif (overrideLanguage) {\n  console.debug(\n    `language autodetection overriden to: ${overrideLanguage}, unset by visiting ${\n      window.location.origin + window.location.pathname + '?lang='\n    }`,\n  );\n}\nif (pseudolocalization) {\n  console.debug(\n    `pseudolocalization enabled, unset by visiting ${\n      window.location.origin +\n      window.location.pathname +\n      '?pseudolocalization=false'\n    }`,\n  );\n}\n\nactivate(language, pseudolocalization);\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { LoadingPageWithHeader } from 'src/components';\nimport { Paths } from 'src/paths';\n\nconst CertificationDashboard = lazy(\n  () =>\n    import('src/containers/certification-dashboard/certification-dashboard'),\n);\n\nconst CollectionContent = lazy(\n  () => import('src/containers/collection-detail/collection-content'),\n);\n\nconst CollectionDependencies = lazy(\n  () => import('src/containers/collection-detail/collection-dependencies'),\n);\n\nconst CollectionDetail = lazy(\n  () => import('src/containers/collection-detail/collection-detail'),\n);\n\nconst CollectionDocs = lazy(\n  () => import('src/containers/collection-detail/collection-docs'),\n);\n\nconst CollectionImportLog = lazy(\n  () => import('src/containers/collection-detail/collection-import-log'),\n);\n\nconst EditNamespace = lazy(\n  () => import('src/containers/edit-namespace/edit-namespace'),\n);\n\nconst MyImports = lazy(() => import('src/containers/my-imports/my-imports'));\n\nconst MyNamespaces = lazy(\n  () => import('src/containers/namespace-list/my-namespaces'),\n);\n\nconst NamespaceDetail = lazy(\n  () => import('src/containers/namespace-detail/namespace-detail'),\n);\n\nconst NotFound = lazy(() => import('src/containers/not-found/not-found'));\n\nconst Partners = lazy(() => import('src/containers/namespace-list/partners'));\n\nconst RepositoryList = lazy(\n  () => import('src/containers/repositories/repository-list'),\n);\n\nconst Search = lazy(() => import('src/containers/search/search'));\n\nconst SignatureKeysList = lazy(\n  () => import('src/containers/signature-keys/list'),\n);\n\nconst TaskDetail = lazy(\n  () => import('src/containers/task-management/task_detail'),\n);\n\nconst TaskListView = lazy(\n  () => import('src/containers/task-management/task-list-view'),\n);\n\nconst TokenPage = lazy(() => import('src/containers/token/token-insights'));\n\nconst routes = [\n  { path: Paths.repositories, component: RepositoryList },\n  {\n    path: Paths.approvalDashboard,\n    component: CertificationDashboard,\n  },\n  { path: Paths.notFound, component: NotFound },\n  { path: Paths.token, component: TokenPage },\n  { path: Paths.partners, component: Partners },\n  { path: Paths.editNamespace, component: EditNamespace },\n  { path: Paths.myCollections, component: NamespaceDetail },\n  { path: Paths.myCollectionsByRepo, component: NamespaceDetail },\n  { path: Paths.myNamespaces, component: MyNamespaces },\n  { path: Paths.signatureKeys, component: SignatureKeysList },\n  { path: Paths.taskList, component: TaskListView },\n  { path: Paths.taskDetail, component: TaskDetail },\n  {\n    path: Paths.collectionDocsPageByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionDocsIndexByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentDocsByRepo,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentListByRepo,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLogByRepo,\n    component: CollectionImportLog,\n  },\n  {\n    path: Paths.collectionDependenciesByRepo,\n    component: CollectionDependencies,\n  },\n  { path: Paths.collectionByRepo, component: CollectionDetail },\n  { path: Paths.namespaceByRepo, component: NamespaceDetail },\n  { path: Paths.searchByRepo, component: Search },\n  { path: Paths.collectionDocsPage, component: CollectionDocs },\n  { path: Paths.collectionDocsIndex, component: CollectionDocs },\n  {\n    path: Paths.collectionContentDocs,\n    component: CollectionDocs,\n  },\n  {\n    path: Paths.collectionContentList,\n    component: CollectionContent,\n  },\n  {\n    path: Paths.collectionImportLog,\n    component: CollectionImportLog,\n  },\n  { path: Paths.myImports, component: MyImports },\n  { path: Paths.collection, component: CollectionDetail },\n  { path: Paths.namespace, component: NamespaceDetail },\n  { path: Paths.search, component: Search },\n];\n\n/**\n * changes routes depending on the path\n * https://reactrouter.com/en/main/route/route\n */\nexport const InsightsRoutes = () => {\n  return (\n    <Suspense fallback={<LoadingPageWithHeader />}>\n      <Routes>\n        {routes.map(({ component: Component, path }, index) => (\n          <Route key={index} path={path} element={<Component path={path} />} />\n        ))}\n        <Route path='*' element={<NotFound path={null} />} />\n      </Routes>\n    </Suspense>\n  );\n};\n","import '../app.scss';\nimport { t } from '@lingui/macro';\nimport { Alert } from '@patternfly/react-core';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport React, { useEffect, useState } from 'react';\nimport { matchPath, useLocation } from 'react-router-dom';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType, UIVersion } from 'src/components';\nimport { Paths, formatPath } from 'src/paths';\nimport { hasPermission } from 'src/utilities';\nimport { AppContext } from '../app-context';\nimport { loadContext } from '../load-context';\nimport { InsightsRoutes } from './routes';\n\nconst DEFAULT_REPO = 'published';\n\nconst isRepoURL = (pathname) =>\n  matchPath({ path: formatPath(Paths.searchByRepo) + '*' }, pathname);\n\nconst App = (_props) => {\n  const location = useLocation();\n  const match = isRepoURL(location.pathname);\n\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [featureFlags, setFeatureFlags] = useState<FeatureFlagsType>(null);\n  const [selectedRepo, setSelectedRepo] = useState<string>(DEFAULT_REPO);\n  const [settings, setSettings] = useState<SettingsType>(null);\n  const [user, setUser] = useState<UserType>(null);\n\n  const { identifyApp, updateDocumentTitle } = useChrome();\n\n  // componentDidMount\n  useEffect(() => {\n    identifyApp('automation-hub');\n    updateDocumentTitle(APPLICATION_NAME);\n\n    loadContext().then(({ alerts, featureFlags, settings, user }) => {\n      setAlerts(alerts);\n      setFeatureFlags(featureFlags);\n      setSettings(settings);\n      setUser(user);\n    });\n  }, []);\n\n  // componentDidUpdate\n  useEffect(() => {\n    // This is sort of a dirty hack to make it so that collection details can view repositories other than \"published\", but all other views are locked to \"published\"\n    // We do this because there is not currently a way to toggle repositories in automation hub on console.redhat.com, so it's important to ensure the user always lands on the published repo\n\n    // check if the URL matches the base path for the collection detail page\n    if (match) {\n      // if the URL matches, allow the repo to be switched to the repo defined in the url\n      if (match.params.repo !== selectedRepo) {\n        setSelectedRepo(match.params.repo);\n      }\n    } else {\n      // For all other URLs, switch the global state back to the \"publised\" repo if the repo is set to anything else.\n      if (selectedRepo !== DEFAULT_REPO) {\n        setSelectedRepo(DEFAULT_REPO);\n      }\n    }\n  });\n\n  // block the page from rendering if we're on a repo route and the repo in the url doesn't match the current state\n  // This gives componentDidUpdate a chance to recognize that route has changed and update the internal state to match the route before any pages can redirect the URL to a 404 state.\n  if (match && match.params.repo !== selectedRepo) {\n    return null;\n  }\n\n  // Wait for the user data to load before any of the child components are rendered. This will prevent API calls from happening before the app can authenticate\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <AppContext.Provider\n      value={{\n        alerts,\n        featureFlags,\n        selectedRepo,\n        setAlerts,\n        setUser,\n        settings,\n        user,\n        hasPermission: (name) =>\n          hasPermission(\n            {\n              user,\n              settings,\n              featureFlags,\n            },\n            name,\n          ),\n      }}\n    >\n      <Alert\n        isInline\n        variant='info'\n        title={t`The Automation Hub sync toggle is now only supported in AAP 2.0. Previous versions of AAP will continue automatically syncing all collections.`}\n      />\n      <InsightsRoutes />\n      <UIVersion />\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import {\n  ActiveUserAPI,\n  FeatureFlagsAPI,\n  FeatureFlagsType,\n  SettingsAPI,\n  SettingsType,\n  UserType,\n} from 'src/api';\nimport { AlertType } from 'src/components';\n\ntype ContextFragment = {\n  alerts: AlertType[];\n  featureFlags: FeatureFlagsType;\n  settings?: SettingsType;\n  user?: UserType;\n};\n\nexport function loadContext(): Promise<ContextFragment> {\n  const getFeatureFlags = FeatureFlagsAPI.get().then(\n    ({ data: featureFlags }) => ({\n      alerts: (featureFlags._messages || []).map((msg) => ({\n        variant: 'warning',\n        title: msg.split(':')[1],\n      })),\n      featureFlags,\n    }),\n  );\n\n  return Promise.all([\n    ActiveUserAPI.getUser(),\n    SettingsAPI.get(),\n    getFeatureFlags,\n  ])\n    .then(([user, { data: settings }, { alerts, featureFlags }]) => ({\n      alerts,\n      featureFlags,\n      settings,\n      user,\n    }))\n    .catch(() => {\n      // we need this even if ActiveUserAPI fails, otherwise isExternalAuth will always be false, breaking keycloak redirect\n      return getFeatureFlags.then(({ alerts, featureFlags }) => ({\n        alerts,\n        featureFlags,\n      }));\n    });\n}\n","import { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\nimport React from 'react';\nimport 'src/l10n';\nimport App from './loaders/insights/loader';\n\n// Entrypoint for compiling the app to run in insights mode.\n\nconst AnsibleHub = () => (\n  <React.StrictMode>\n    <I18nProvider i18n={i18n}>\n      <App />\n    </I18nProvider>\n  </React.StrictMode>\n);\n\n// ignore unused exports default\nexport default AnsibleHub;\n","import * as React from 'react';\nimport { FeatureFlagsType, SettingsType, UserType } from 'src/api';\nimport { AlertType } from 'src/components';\n\nexport interface IAppContextType {\n  user?: UserType;\n  setUser: (user: UserType) => void;\n  selectedRepo?: string;\n  featureFlags: FeatureFlagsType;\n  alerts?: AlertType[];\n  setAlerts?: (alerts: AlertType[]) => void;\n  settings: SettingsType;\n  hasPermission: (name: string) => boolean;\n}\n\nexport const AppContext = React.createContext<IAppContextType>(undefined);\nexport const useContext = () => React.useContext(AppContext);\n","import { t } from '@lingui/macro';\nimport { Constants } from 'src/constants';\nimport { ParamHelper } from 'src/utilities';\n\nexport function formatPath(\n  path: Paths,\n  data = {},\n  params?: Record<string, string | boolean>,\n) {\n  // insights router has basename=\"/\" or \"/beta/\", with hub under a nested \"ansible/automation-hub\" route - our urls are relative to that\n  let url =\n    DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE\n      ? UI_BASE_PATH.replace('/beta/', '/').replace(/\\/$/, '')\n      : '';\n  url += (path as string) + '/';\n\n  for (const k of Object.keys(data)) {\n    url = url.replace(':' + k, encodeURIComponent(data[k]));\n  }\n\n  if (params) {\n    const path = `${url}?${ParamHelper.getQueryString(params)}`;\n    return path;\n  } else {\n    return url;\n  }\n}\n\n// handle long/short EE routes:\n// (path, container: 'namespaced/name') -> (pathWithNamespace, { namespace: 'namespaced', container: 'name' })\n// (path, container: 'simple') -> (path, { container: 'simple' })\n// see also withContainerParamFix\nexport function formatEEPath(path, data, params?) {\n  const pathsWithNamespace = {\n    [Paths.executionEnvironmentDetail]:\n      Paths.executionEnvironmentDetailWithNamespace,\n    [Paths.executionEnvironmentDetailActivities]:\n      Paths.executionEnvironmentDetailActivitiesWithNamespace,\n    [Paths.executionEnvironmentDetailImages]:\n      Paths.executionEnvironmentDetailImagesWithNamespace,\n    [Paths.executionEnvironmentDetailOwners]:\n      Paths.executionEnvironmentDetailOwnersWithNamespace,\n    [Paths.executionEnvironmentManifest]:\n      Paths.executionEnvironmentManifestWithNamespace,\n  };\n\n  if (data.container?.includes('/')) {\n    const [namespace, container] = data.container.split('/');\n    const pathWithNamespace = pathsWithNamespace[path];\n    return formatPath(\n      pathWithNamespace,\n      { ...data, namespace, container },\n      params,\n    );\n  }\n\n  return formatPath(path, data, params);\n}\n\nexport enum Paths {\n  executionEnvironmentDetail = '/containers/:container',\n  executionEnvironmentDetailWithNamespace = '/containers/:namespace/:container',\n  executionEnvironmentDetailActivities = '/containers/:container/_content/activity',\n  executionEnvironmentDetailActivitiesWithNamespace = '/containers/:namespace/:container/_content/activity',\n  executionEnvironmentDetailImages = '/containers/:container/_content/images',\n  executionEnvironmentDetailImagesWithNamespace = '/containers/:namespace/:container/_content/images',\n  executionEnvironmentDetailOwners = '/containers/:container/_content/owners',\n  executionEnvironmentDetailOwnersWithNamespace = '/containers/:namespace/:container/_content/owners',\n  executionEnvironmentManifest = '/containers/:container/_content/images/:digest',\n  executionEnvironmentManifestWithNamespace = '/containers/:namespace/:container/_content/images/:digest',\n  executionEnvironments = '/containers',\n  executionEnvironmentsRegistries = '/registries',\n  roleEdit = '/role/:role',\n  roleList = '/roles',\n  createRole = '/roles/create',\n  groupList = '/group-list',\n  groupDetail = '/group/:group',\n  taskDetail = '/task/:task',\n  myCollections = '/my-namespaces/:namespace',\n  myNamespaces = '/my-namespaces',\n  editNamespace = '/my-namespaces/edit/:namespace',\n  myImports = '/my-imports',\n  login = '/login',\n  logout = '/logout',\n  search = '/',\n  legacyRole = '/legacy/roles/:username/:name',\n  legacyRoles = '/legacy/roles/',\n  legacyNamespace = '/legacy/namespaces/:namespaceid',\n  legacyNamespaces = '/legacy/namespaces/',\n  searchByRepo = '/repo/:repo',\n  myCollectionsByRepo = '/repo/:repo/my-namespaces/:namespace',\n  collectionByRepo = '/repo/:repo/:namespace/:collection',\n  collectionDocsPage = '/:namespace/:collection/docs/:page',\n  collectionDocsIndex = '/:namespace/:collection/docs',\n  collectionContentDocs = '/:namespace/:collection/content/:type/:name',\n  collectionContentList = '/:namespace/:collection/content',\n  collectionImportLog = '/:namespace/:collection/import-log',\n  collectionDocsPageByRepo = '/repo/:repo/:namespace/:collection/docs/:page',\n  collectionDocsIndexByRepo = '/repo/:repo/:namespace/:collection/docs',\n  collectionContentDocsByRepo = '/repo/:repo/:namespace/:collection/content/:type/:name',\n  collectionContentListByRepo = '/repo/:repo/:namespace/:collection/content',\n  collectionImportLogByRepo = '/repo/:repo/:namespace/:collection/import-log',\n  collectionDependenciesByRepo = '/repo/:repo/:namespace/:collection/dependencies',\n  namespaceByRepo = '/repo/:repo/:namespace',\n  collection = '/:namespace/:collection',\n  namespace = '/:namespace',\n  partners = '/partners',\n  namespaces = '/namespaces',\n  notFound = '/not-found',\n  token = '/token',\n  approvalDashboard = '/approval-dashboard',\n  userList = '/users',\n  createUser = '/users/create',\n  editUser = '/users/:userID/edit',\n  userDetail = '/users/:userID',\n  userProfileSettings = '/settings/user-profile',\n  repositories = '/repositories',\n  taskList = '/tasks',\n  signatureKeys = '/signature-keys',\n}\n\nexport const namespaceBreadcrumb = {\n  name: {\n    namespaces: t`Namespaces`,\n    partners: t`Partners`,\n  }[NAMESPACE_TERM],\n  url: formatPath(Paths[NAMESPACE_TERM]),\n};\n","import { t } from '@lingui/macro';\n\nexport const chipGroupProps = () => {\n  const count = '${remaining}'; // pf templating\n  return {\n    collapsedText: t`${count} more`,\n    expandedText: t`Show Less`,\n  };\n};\n","import { CollectionVersion } from 'src/api';\n\nclass Summary {\n  total_count: number;\n  contents: {\n    module: number;\n    role: number;\n    plugin: number;\n    dependency: number;\n    // playbook: number;\n  };\n}\n\nexport function convertContentSummaryCounts(\n  metadata: CollectionVersion['metadata'],\n): Summary {\n  const { contents: content, dependencies } = metadata;\n  const summary: Summary = {\n    total_count: content.length,\n    contents: {\n      module: 0,\n      role: 0,\n      plugin: 0,\n      dependency: Object.keys(dependencies).length,\n    },\n  };\n\n  for (const c of content) {\n    if (c.content_type === 'role') {\n      summary.contents.role++;\n    } else if (c.content_type === 'module') {\n      summary.contents.module++;\n    } else {\n      summary.contents.plugin++;\n    }\n  }\n\n  return summary;\n}\n","// insights crashes when you give it a .md page.\n\nexport function sanitizeDocsUrls(url) {\n  return url.replace('.md', '');\n}\n","// Transforms the error message format from the API into an object such that\n// {<backendFieldID>: <errorMessage>}\n\nexport class ErrorMessagesType {\n  [key: string]: string;\n}\n\nexport function mapErrorMessages(err): ErrorMessagesType {\n  const messages = {};\n\n  // 500 errors only have err.response.data string\n  if (typeof err.response.data === 'string') {\n    messages['__nofield'] = err.response.data;\n    return messages;\n  }\n\n  for (const e of err.response.data.errors) {\n    if (e.source) {\n      messages[e.source.parameter] = e.detail;\n    } else {\n      // some error responses are too cool to have a\n      // parameter set on them >:(\n      messages['__nofield'] = e.detail || e.title;\n    }\n  }\n\n  return messages;\n}\n\nexport function isFieldValid(\n  errorMessagesType: ErrorMessagesType,\n  name,\n): 'default' | 'error' {\n  let names = [];\n  if (Array.isArray(name)) {\n    names = name;\n  } else {\n    names.push(name);\n  }\n\n  if (!errorMessagesType) {\n    return 'default';\n  }\n\n  return names.find((n) => errorMessagesType[n]) ? 'error' : 'default';\n}\n\nexport function isFormValid(errorMessages: ErrorMessagesType) {\n  if (!errorMessages) {\n    return true;\n  }\n\n  return !Object.values(errorMessages).find(Boolean);\n}\n\nexport function alertErrorsWithoutFields(\n  errorMessages: ErrorMessagesType,\n  fields,\n  addAlert,\n  title,\n  setErrorMessages,\n) {\n  if (!errorMessages) {\n    return;\n  }\n\n  // select only errors without associated field\n  const errors = Object.keys(errorMessages)\n    .filter((field) => !fields.includes(field))\n    .map((field) => errorMessages[field]);\n\n  if (errors.length) {\n    // alert them\n    addAlert({\n      variant: 'danger',\n      title: title,\n      description: errors.join('\\n'),\n    });\n\n    // filter only errors with field, rest will be removed from the state, because they were already alerted\n    const formErrors = {};\n\n    Object.keys(errorMessages).forEach((field) => {\n      if (fields.includes(field)) {\n        formErrors[field] = errorMessages[field];\n      }\n    });\n\n    setErrorMessages(formErrors);\n  }\n\n  return;\n}\n","// Returns the API path for a specific repository\nexport function getRepoUrl(distributionPath: string) {\n  // If the api is hosted on another URL, use API_HOST as the host part of the URL.\n  // Otherwise use the host that the UI is served from\n  const host = API_HOST ? API_HOST : window.location.origin;\n\n  return distributionPath\n    ? `${host}${API_BASE_PATH}content/${distributionPath}/`\n    : `${host}${API_BASE_PATH}`;\n}\n\n// returns the server name for (protocol-less) container urls\n// url/image, url/image:tag, url/image@digest (including sha256: prefix)\nexport function getContainersURL({\n  name,\n  tag,\n  digest,\n}: {\n  name: string;\n  tag?: string;\n  digest?: string;\n}) {\n  const host = window.location.host;\n\n  return `${host}/${name}${tag ? `:${tag}` : ''}${\n    digest && !tag ? `@${digest}` : ''\n  }`;\n}\n","import { WriteOnlyFieldType } from 'src/api';\n\nexport function isWriteOnly(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  return !!field;\n}\n\nexport function isFieldSet(\n  name: string,\n  writeOnlyFields: WriteOnlyFieldType[],\n) {\n  const field = writeOnlyFields.find((el) => el.name === name);\n  if (field) {\n    return field.is_set;\n  } else {\n    throw 'Field ${name} is not in writeOnlyFields';\n  }\n}\n\n// Deletes any write only fields from the object so that they don't\n// get sent to the API\nexport function clearSetFieldsFromRequest(\n  data,\n  writeOnlyFields: WriteOnlyFieldType[],\n): object {\n  const newObj = { ...data };\n\n  for (const field of writeOnlyFields) {\n    if (field.is_set) {\n      delete newObj[field.name];\n    }\n  }\n\n  return newObj;\n}\n","// Checks that at least one filter is set\nimport { some } from 'lodash';\n\nexport function filterIsSet(params, filters) {\n  return some(filters, (filter) => filter in params);\n}\n","export function truncateSha(sha) {\n  const splitSha = sha.split(':');\n  return splitSha[0] + ':' + splitSha[1].slice(0, 8);\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function hasPermission({ user, settings, featureFlags }, name) {\n  if (!user?.model_permissions) {\n    return false;\n  }\n\n  return !!user.model_permissions[name].has_model_permission;\n}\n","import * as React from 'react';\nimport { DateComponent, HelperText, StatusIndicator } from 'src/components';\n\nexport function lastSynced(entity) {\n  if (!entity.last_sync_task || !entity.last_sync_task.finished_at) {\n    return null;\n  }\n\n  return (\n    <>\n      <DateComponent date={entity.last_sync_task.finished_at} />\n    </>\n  );\n}\n\nexport function lastSyncStatus(entity) {\n  if (!entity.last_sync_task) {\n    return null;\n  }\n\n  let errorMessage = null;\n  if (entity.last_sync_task.error) {\n    errorMessage = (\n      <HelperText content={entity.last_sync_task.error['description']} />\n    );\n  }\n\n  return (\n    <>\n      <StatusIndicator status={entity.last_sync_task.state} /> {errorMessage}\n    </>\n  );\n}\n","import { t } from '@lingui/macro';\nimport { TaskAPI } from 'src/api';\nimport { parsePulpIDFromURL } from './parse-pulp-id';\n\ninterface Options {\n  bailAfter?: number;\n  waitMs?: number;\n}\n\nexport function waitForTask(task, options: Options = {}) {\n  // default to 5s wait with max 10 attempts\n  const { waitMs = 5000, bailAfter = 10 } = options;\n\n  return TaskAPI.get(task).then((result) => {\n    const failing = ['skipped', 'failed', 'canceled'];\n\n    if (failing.includes(result.data.state)) {\n      return Promise.reject(\n        result.data.error?.description ?? t`Task failed without error message.`,\n      );\n    }\n\n    if (result.data.state !== 'completed') {\n      if (!bailAfter) {\n        return Promise.reject(\n          new Error(t`Giving up waiting for task after 10 attempts.`),\n        );\n      }\n\n      return new Promise((r) => setTimeout(r, waitMs)).then(() =>\n        waitForTask(task, { ...options, bailAfter: bailAfter - 1 }),\n      );\n    }\n  });\n}\n\nexport function waitForTaskUrl(taskUrl, options = {}) {\n  return waitForTask(parsePulpIDFromURL(taskUrl), options);\n}\n","import { t } from '@lingui/macro';\n\nexport function errorMessage(statusCode: number, statusText: string) {\n  const messages = {\n    500: t`Error ${statusCode} - ${statusText}: The server encountered an error and was unable to complete your request.`,\n    401: t`Error ${statusCode} - ${statusText}: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    403: t`Error ${statusCode} - ${statusText}: Forbidden: You do not have the required permissions to proceed with this request. Please contact the server administrator for elevated permissions.`,\n    404: t`Error ${statusCode} - ${statusText}: The server could not find the requested URL.`,\n    400: t`Error ${statusCode} - ${statusText}: The server was unable to complete your request.`,\n    default: t`Error ${statusCode} - ${statusText}`,\n  };\n  return messages[statusCode] || messages.default;\n}\n","import { t } from '@lingui/macro';\n\nexport function validateURLHelper(\n  outsideError: string | undefined,\n  url: string,\n): {\n  validated: 'default' | 'warning' | 'error';\n  helperTextInvalid?: string;\n  helperText?: string;\n} {\n  if (outsideError) {\n    return { validated: 'error', helperTextInvalid: outsideError };\n  }\n\n  try {\n    const { protocol } = new URL(url);\n    if (protocol === 'http:') {\n      return {\n        validated: 'warning',\n        helperText: t`Consider using a secure URL (https://).`,\n      };\n    }\n\n    if (protocol === 'https:') {\n      return { validated: 'default' };\n    }\n  } catch (_) {\n    // fallthrough\n  }\n\n  return {\n    validated: 'error',\n    helperTextInvalid: t`The URL needs to be in 'http(s)://' format.`,\n  };\n}\n","import { FeatureFlagsType } from 'src/api';\n\nexport const canSignNamespace = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  namespace,\n) => {\n  const { can_create_signatures } = featureFlags;\n  const permissions = namespace?.related_fields?.my_permissions || [];\n\n  return (\n    // (can_create_signatures also implies signatures_enabled and collection_signing)\n    can_create_signatures &&\n    permissions.includes('galaxy.change_namespace') &&\n    permissions.includes('galaxy.upload_to_namespace')\n  );\n};\n\nexport const canSignEE = (\n  { featureFlags }: { featureFlags: FeatureFlagsType },\n  container,\n) => {\n  const { container_signing } = featureFlags;\n  const permissions = container.namespace.my_permissions;\n\n  return (\n    container_signing &&\n    permissions.includes('container.change_containernamespace')\n  );\n};\n","import { Trans, t } from '@lingui/macro';\nimport { DropdownItem, Tooltip } from '@patternfly/react-core';\nimport React from 'react';\nimport { CollectionAPI } from 'src/api';\nimport { errorMessage, parsePulpIDFromURL, waitForTask } from 'src/utilities';\n\nexport class DeleteCollectionUtils {\n  public static getUsedbyDependencies(collection) {\n    const { name, namespace } = collection;\n    return CollectionAPI.getUsedDependenciesByCollection(namespace.name, name)\n      .then(({ data }) => data.data.length === 0)\n      .catch((err) => {\n        const { status, statusText } = err.response;\n        return Promise.reject({\n          title: t`Dependencies for collection \"${name}\" could not be displayed.`,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      });\n  }\n\n  public static deleteMenuOption({\n    canDeleteCollection,\n    noDependencies,\n    onClick,\n  }) {\n    if (!canDeleteCollection) {\n      return null;\n    }\n\n    if (noDependencies === false) {\n      return (\n        <Tooltip\n          key='delete-collection-disabled'\n          position='left'\n          content={\n            <Trans>\n              Cannot delete until collections <br />\n              that depend on this collection <br />\n              have been deleted.\n            </Trans>\n          }\n        >\n          <DropdownItem isDisabled>{t`Delete entire collection`}</DropdownItem>\n        </Tooltip>\n      );\n    }\n\n    return (\n      <DropdownItem\n        key='delete-collection-enabled'\n        onClick={onClick}\n        data-cy='delete-collection-dropdown'\n      >\n        {t`Delete entire collection`}\n      </DropdownItem>\n    );\n  }\n\n  public static tryOpenDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    collection,\n  }) {\n    DeleteCollectionUtils.getUsedbyDependencies(collection)\n      .then((noDependencies) =>\n        DeleteCollectionUtils.openDeleteModalWithConfirm({\n          addAlert,\n          setState,\n          noDependencies,\n          collection,\n        }),\n      )\n      .catch((alert) => addAlert(alert));\n  }\n\n  private static openDeleteModalWithConfirm({\n    addAlert,\n    setState,\n    noDependencies,\n    collection,\n  }) {\n    if (noDependencies) {\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n      });\n    } else {\n      addAlert({\n        title: (\n          <Trans>\n            Cannot delete until collections <br />\n            that depend on this collection <br />\n            have been deleted.\n          </Trans>\n        ),\n        variant: 'warning',\n      });\n\n      setState({\n        deleteCollection: collection,\n        confirmDelete: false,\n      });\n    }\n  }\n\n  public static deleteCollection({\n    collection,\n    setState,\n    load,\n    redirect,\n    selectedRepo,\n    addAlert,\n  }) {\n    CollectionAPI.deleteCollection(selectedRepo, collection)\n      .then((res) => {\n        const taskId = parsePulpIDFromURL(res.data.task);\n        const name = collection.name;\n\n        waitForTask(taskId).then(() => {\n          addAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Collection &quot;{name}\n                &quot; has been successfully deleted.\n              </Trans>\n            ),\n          });\n\n          if (redirect) {\n            setState({ redirect });\n          }\n\n          if (load) {\n            load();\n          }\n        });\n      })\n      .catch((err) => {\n        const { status, statusText } = err.response;\n\n        addAlert({\n          variant: 'danger',\n          title: t`Collection \"${name}\" could not be deleted.`,\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() =>\n        setState({\n          deleteCollection: null,\n          isDeletionPending: false,\n        }),\n      );\n  }\n}\n","import { i18n } from '@lingui/core';\nimport { Constants } from 'src/constants';\n\n// Locked roles description can't be translated on the API\n// To solve this problem, description for the locked roles\n// must be hardcoded into the UI\nexport const translateLockedRolesDescription = (name, desc) =>\n  Constants.LOCKED_ROLES_WITH_DESCRIPTION[name]\n    ? i18n._(Constants.LOCKED_ROLES_WITH_DESCRIPTION[name])\n    : desc;\n","import React from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Paths } from 'src/paths';\n\n// compatibility layer between react-router v6 and class components\n\n// differences from v5:\n// history.push -> navigate\n// location -> location\n// match.params -> routeParams\n// match.path -> routePath\n\nexport class RouteProps {\n  location: ReturnType<typeof useLocation>;\n  navigate: ReturnType<typeof useNavigate>;\n  routeParams: Record<string, string>;\n  routePath: Paths;\n}\n\nexport const withRouter = (ClassComponent) => {\n  const WithRouter = ({ path }: { path: string }) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const params = useParams();\n\n    return (\n      <ClassComponent\n        location={location}\n        navigate={navigate}\n        routeParams={params}\n        routePath={path}\n      />\n    );\n  };\n  WithRouter.displayName = `withRouter(${\n    ClassComponent.displayName || ClassComponent.name\n  })`;\n\n  return WithRouter;\n};\n","import { cloneDeep } from 'lodash';\n\nexport class ParamHelper {\n  // Helper class for managing param object.\n  // Param object is just a dictionary where the keys map to\n  // parameter names that contain a value or list of values\n\n  // Convert URLSearchParams object to param object\n  static parseParamString(paramString: string, numericTypes?: string[]) {\n    let params = {};\n    const paramObj = new URLSearchParams(paramString);\n    let v;\n\n    paramObj.forEach((val, key) => {\n      // do not append empty values at all (this will disable searching by empty strings)\n      if (val.trim().length == 0) {\n        return;\n      }\n\n      // Parse value as number if it's included in the list of numeric\n      // types.\n      // It seems like there should be a better way to do this based off\n      // of the interface for the parameters, but I can't figure out if\n      // that's possible or not\n      if (numericTypes && numericTypes.includes(key)) {\n        v = Number(val);\n      } else {\n        v = val;\n      }\n\n      params = ParamHelper.appendParam(params, key, v);\n    });\n\n    return params;\n  }\n\n  // Replaces specified parameter with speficied value\n  static setParam(\n    p: object,\n    key: string,\n    value: number | string | string[] | number[],\n  ) {\n    const params = cloneDeep(p);\n    params[key] = value;\n\n    return params;\n  }\n\n  // Appends parameter to existing value\n  static appendParam(p: object, key: string, value: number | string) {\n    const params = cloneDeep(p);\n    if (params[key]) {\n      if (Array.isArray(params[key])) {\n        params[key].push(value);\n      } else {\n        params[key] = [params[key], value];\n      }\n    } else {\n      params[key] = value;\n    }\n\n    return params;\n  }\n\n  // Returns a reduced set of parameters. Useful when not all params should\n  // be passed to the API\n  static getReduced(p: object, keys: string[]) {\n    const params = cloneDeep(p);\n    for (const k of keys) {\n      delete params[k];\n    }\n\n    return params;\n  }\n\n  // Removes a parameter, or a specific key value pair from a parameter object\n  static deleteParam(p, key: string, value?: string | number) {\n    const params = cloneDeep(p);\n    if (value && Array.isArray(params[key]) && params[key].length > 1) {\n      const i = params[key].indexOf(value);\n      if (i !== -1) {\n        params[key].splice(i, 1);\n      }\n    } else {\n      delete params[key];\n    }\n\n    return params;\n  }\n\n  // Checks to see if a specific key value pair exists\n  static paramExists(params: object, key: string, value: string | number) {\n    const param = params[key];\n\n    if (param) {\n      if (Array.isArray(param)) {\n        return param.includes(value);\n      } else {\n        return param === value;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  // Returns the query string for the set of parameters\n  static getQueryString(params: object, ignoreParams?: string[]) {\n    const paramString = [];\n\n    for (const key of Object.keys(params)) {\n      // skip the param if its in the list of ignored params\n      if (ignoreParams && ignoreParams.includes(key)) {\n        continue;\n      }\n      if (Array.isArray(params[key])) {\n        for (const val of params[key]) {\n          paramString.push(key + '=' + encodeURIComponent(val));\n        }\n      } else {\n        paramString.push(key + '=' + encodeURIComponent(params[key]));\n      }\n    }\n\n    return paramString.join('&');\n  }\n\n  // Reusable function that can be included in a component to update it's\n  // internal state and page params at the same time\n  static updateParamsMixin(ignoreParams?: string[]) {\n    return function (params: object, callback?) {\n      // Note. In the callback, make sure to reference the state as\n      // this.state instead of const { foo } = this.state.\n      // In the example above, foo only gets set to the latest state after\n      // the component re-runs render() and the callback typically gets\n      // executed before that happens\n      this.setState({ params }, callback);\n      this.props.navigate({\n        search: '?' + ParamHelper.getQueryString(params, ignoreParams || []),\n      });\n    };\n  }\n\n  // removes any params not in ignoredParams from params and calls updateParams with it\n  static clearAllFilters({ params, ignoredParams, updateParams }) {\n    const deleteKeys = Object.keys(\n      ParamHelper.getReduced(params, ignoredParams),\n    );\n\n    for (const key of deleteKeys) {\n      params = ParamHelper.deleteParam(params, key);\n    }\n\n    updateParams({ ...params, page: 1 });\n  }\n\n  // check if params are valid for sorting\n  static validSortParams = (sort, sortParams, defaultSort) => {\n    const isDesc = sort.includes('-');\n\n    const ascSort = isDesc ? sort.replace('-', '') : sort;\n\n    if (sortParams.includes(ascSort)) {\n      return isDesc ? sort : ascSort;\n    }\n\n    return defaultSort;\n  };\n}\n","const UUIDRegEx =\n  /\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b/i;\n\nexport function parsePulpIDFromURL(url: string): string {\n  for (const section of url.split('/')) {\n    if (section.match(UUIDRegEx)) {\n      return section;\n    }\n  }\n\n  return null;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","webpackContext","webpackContextResolve","BaseAPI","apiBaseUrl","_this","_classCallCheck","this","http","axios","baseURL","paramsSerializer","serialize","params","ParamHelper","interceptors","request","use","authHandler","_authHandler","_createClass","key","value","p","_objectSpread","pageSize","parseInt","Constants","page","apiPath","get","getPath","mapPageToOffset","data","put","post","patch","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","DEPLOYMENT_MODE","window","insights","chrome","auth","getUser","headers","Cookies","abrupt","stop","_x","apply","arguments","HubAPI","_BaseAPI","_inherits","_super","call","API_BASE_PATH","_defineProperty","_assertThisInitialized","url","concat","UI_API_VERSION","filterContents","contents","filter","item","includes","content_type","filterListItem","latest_version","metadata","CollectionAPI","_HubAPI","API","_len","length","args","Array","_key","getUIPath","repo","path","_get","_getPrototypeOf","prototype","response","distributionPath","result","meta","count","collection","isDeprecated","namespace","name","deprecated","repositoryPath","progressCallback","cancelToken","formData","FormData","append","file","config","onUploadProgress","token","forceReload","_this2","cachedCollection","docs_blob","filterDetailItem","distro_base_path","version","_this3","reject","err","undefined","PulpStatus","NamespaceAPI","ImportAPI","ActiveUserAPI","username","password","loginURL","CollectionVersionAPI","originalRepo","destinationRepo","create","MyNamespaceAPI","UserAPI","MySyncListAPI","TaskAPI","GroupAPI","PulpAPI","PULP_API_BASE_PATH","changedParams","useOrdering","RoleAPI","_PulpAPI","for_object_type","newParams","permissionId","smartUpdate","remote","unmodifiedRemote","reducedData","clearSetFieldsFromRequest","write_only_fields","auth_url","_i","_Object$keys","field","RemoteAPI","distribution","_id","_obj","DistributionAPI","MyDistributionAPI","ExecutionEnvironmentAPI","readme","digest","manifest","ExecutionEnvironmentRegistryAPI","pk","newValue","oldValue","ExecutionEnvironmentRemoteAPI","ContainerTagAPI","repositoryID","tag","FeatureFlagsAPI","ContainerDistributionAPI","role","ControllerAPI","TaskManagementAPI","groupId","roleId","content_object","GenericPulpAPI","SettingsAPI","SignCollectionAPI","SigningServiceAPI","CertificateUploadAPI","repository","signed_collection","Repositories","serviceName","containerId","pulp_type","signServicePath","base_path","postObj","manifest_signing_service","APISearchTypeAhead","_React$Component","props","loadResults","onClear","evt","textInput","target","getOptions","isOpen","setState","event","selection","isPlaceholder","onSelect","multiple","state","selected","selections","group","variant","SelectVariant","React","Select","menuAppendTo","onToggle","hasInlineFilter","onFilter","placeholderText","isDisabled","toggleIcon","style","chipGroupProps","_step","options","_iterator","_createForOfIteratorHelper","results","s","n","done","option","push","SelectOption","f","i18n","AlertList","_ref","alerts","closeAlert","position","right","top","zIndex","display","flexDirection","alert","i","Alert","marginBottom","title","actionClose","AlertActionCloseButton","onClose","description","closeAlertMixin","alertStateVariable","alertIndex","_ref2","setAlerts","newList","_toConsumableArray","splice","AppliedFilters","className","_ref$ignoredParams","ignoredParams","_ref$niceNames","niceNames","niceValues","updateParams","filters","chips","isArray","marginRight","ChipGroup","_extends","categoryName","v","_niceValues$key","Chip","onClick","unsetFilter","renderGroup","Button","BaseHeader","_this$props","logo","pageControls","children","breadcrumbs","contextSelector","versionControl","status","showRepoSelector","cx","Title","headingLevel","size","Breadcrumbs","links","Breadcrumb","link","index","BreadcrumbItem","isActive","Link","to","CardListSwitcher","_ref$size","disp","view_type","iconClasses","ThLargeIcon","ListIcon","CollectionCard","d","displaySignatures","footer","sign_state","menu","company","contentSummary","convertContentSummaryCounts","Card","CardHeader","Logo","alt","fallbackToDefault","image","avatar_url","unlockWidth","flexGrow","TextContent","Text","component","TextVariants","Badge","isRead","getCertification","SignatureBadge","isCompact","signState","formatPath","Paths","Trans","values","CardBody","Tooltip","content","slice","k","type","CollectionNumericLabel","newline","CardFooter","CollectionContentList","context","useContext","toShow","summary","all","showing","keywords","_c$content_type","c","keywordMatch","match","typeMatch","Toolbar","ToolbarGroup","ToolbarItem","SearchInput","onChange","_e","val","placeholder","clickable","selectedRepo","EmptyStateCustom","icon","ExclamationTriangleIcon","CollectionCount","_useState","useState","_useState2","_slicedToArray","collectionCount","setCollectionCount","_useState3","_useState4","_useState5","_useState6","loading","setLoading","useEffect","promises","collections","_err$response","statusText","addAlert","errorMessage","Spinner","DateComponent","date","moment","format","fromNow","SignSingleCertificateModal","onSubmit","onCancel","Modal","ModalVariant","actions","ButtonVariant","components","SignAllCertificatesModal","Grid","hasGutter","GridItem","span","Split","SplitItem","Form","FormGroup","fieldId","label","FormSelect","FormSelectOption","_ref$signState","_ref$isCompact","_objectWithoutProperties","_excluded","Label","color","CheckCircleIcon","text","UploadSingCertificateModal","filename","setFilename","setPath","FileUpload","filenamePlaceholder","browseButtonText","onFileInputChange","onClearClick","CollectionHeader","_submitCertificate","page_size","modalPagination","errorAlert","isOpenSignAllModal","signing_service","settings","GALAXY_COLLECTION_SIGNING_SERVICE","waitForTask","task_id","error","x","isOpenSignModal","collectionVersion","_this$state","deleteCollection","res","taskId","parsePulpIDFromURL","task","all_versions","topVersion","isDeletionPending","redirect","_err$response$data","detail","dependent_collection_versions","dependencies","List","ListItem","isOpenVersionsSelect","isOpenVersionsModal","confirmDelete","noDependencies","updateCollection","showImportModal","uploadCertificateModalOpen","versionToUploadCertificate","DeleteCollectionUtils","activeTab","_this$state2","find","created","created_at","urlKeys","latestVersion","_this$context$feature","featureFlags","display_signatures","can_upload_signatures","isLatestVersion","signedString","collectionName","Navigate","canSign","canSignNamespace","hasPermission","dropdownItems","canDeleteCollection","openDeleteModalWithConfirm","DropdownItem","deprecate","checkUploadPrivilleges","Boolean","issueUrl","encodeURIComponent","ImportModal","onUploadSuccess","setOpen","warn","toggleImportModal","closeUploadCertificateModal","submitCertificate","signCollection","signVersion","isPlain","Pagination","isTop","updatePaginationParams","paginateVersions","isInline","toString","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","deleteCollectionVersion","load","RepoSelector","loadingVariant","renderSelectVersions","Flex","FlexItem","href","rel","ExternalLinkAltIcon","StatefulDropdown","items","renderTabs","_this4","include_related","related_fields","my_permissions","active","_this$props2","pathParams","reduced","ignoreParams","tabs","LinkTabs","versions","_this5","sent","pulp_href","reload","_ref3","_ref4","_this6","_err$response2","warning","AppContext","DownloadSignatureGridItem","_version$metadata$sig","show","setShow","signatures","padding","DownloadIcon","idx","signature","CodeBlock","CodeBlockCode","CollectionInfo","_latest_version$metad","_latest_version$metad2","downloadLinkRef","installCommand","tags","Tag","license","isFilled","join","ClipboardCopy","isReadOnly","user","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_DOWNLOAD","LoginLink","ref","reponame","downloadURL","current","click","_e$response","download","requires_ansible","collection_readme","dangerouslySetInnerHTML","__html","html","CollectionFilter","inputText","prevProps","display_tags","filterConfig","inputType","ToolbarContent","marginLeft","CompoundFilter","marginTop","CollectionList","itemCount","showControls","DataList","CollectionListItem","controls","renderCollectionControls","EmptyStateFilter","clearAllFilters","showNamespace","cells","DataListCell","alignRight","width","DeprecatedTag","LabelGroup","DataListItem","DataListItemRow","DataListItemCells","dataListCells","ConfirmModal","confirmAction","spinner","confirmButtonTitle","titleIconVariant","CollectionDependenciesList","dependencies_repos","ListVariant","dependency","listDep","EmptyStateNoData","fqn","version_range","HelperText","CollectionUsedbyDependenciesList","usedByDependencies","usedByDependenciesLoading","filterIsSet","name__icontains","Sort","sort","LoadingPageSpinner","repository_list","selectedFilter","selectedID","currentTarget","replace","indexOf","submitMultiple","isExpanded","isCreatable","hasOnCreateOption","filterOptions","InputGroup","toggleType","defaultText","FilterIcon","renderInput","submitFilter","trim","SearchIcon","onSelectMultiple","toLowerCase","isGrouped","SelectGroup","selectTitleById","TextInput","onKeyPress","handleEnter","newValues","opt","DeleteModal","DeleteUserModal","is_superuser","isWaitingForResponse","waitForDeleteConfirm","mapErrorMessages","closeModal","deleteUser","isUserSelfOrAdmin","getActionDescription","r","setTimeout","margin","backgroundColor","fontSize","paddingLeft","paddingRight","paddingBottom","paddingTop","borderRadius","EmptyState","EmptyStateVariant","EmptyStateIcon","EmptyStateBody","button","EmptyStatePrimary","PlusCircleIcon","CubesIcon","EmptyStateUnauthorized","LockIcon","GroupRolePermissions","setRole","selectedRole","translateLockedRolesDescription","PermissionCategories","permissions","showCustom","showEmpty","Popover","PopoverPosition","bodyContent","headerContent","header","iconPosition","OutlinedQuestionCircleIcon","ImportConsole","lastImport","followLogs","selectedImport","apiError","renderTitle","isLoading","followMessages","handleScrollClick","messages","renderMessage","level","message","hideCollectionName","empty","collectionHead","approvalStatus","rlist","StatusIndicator","traceback","setFollowMessages","scrollIntoView","behavior","requestAnimationFrame","Status","ImportList","kwField","namespaces","loadNamespaces","selectImport","importList","numberOfResults","renderApiSearchAhead","renderList","perPage","onSetPage","_","onPerPageSelect","getStatusClass","renderDescription","finished_at","statusClass","namespace_filter","errors","uploadProgress","uploadStatus","waiting","handleClose","saveFile","canUpload","disabled","handleFileUpload","files","htmlFor","renderFileIcon","uploading","SpinnerIcon","FolderOpenIcon","newCollection","acceptedFileTypes","COLLECTION_NAME_REGEX","test","split","artifact","sha256","loaded","total","msg","cancel","tab","_ref$active","Bullseye","height","LoadingPageWithHeader","Skeleton","Main","LocalRepositoryTable","repositories","renderTable","sortTableOptions","object","SortTable","console","log","renderRow","cliConfig","getRepoUrl","pulp_last_updated","isCode","external_authentication","UI_EXTERNAL_LOGIN_URI","failed","justifyContent","alignItems","objectFit","maxHeight","src","DefaultLogo","onError","extra","MarkdownEditor","updateText","helperText","editing","TextArea","ReactMarkdown","NamespaceCard","namespaceURL","CardHeaderMain","CardTitle","getDescription","MAX_DESCRIPTION_LENGTH","NamespaceForm","errorMessages","isRequired","helperTextInvalid","validated","toError","updateField","getLinksErrorText","renderLinkGroup","addLink","update","updateNamespace","last","validateName","updateLink","validateUrl","TrashIcon","removeLink","validateURLHelper","NamespaceModal","newNamespaceName","groups","toggleModal","onCreateSuccess","source","parameter","newNamespaceNameValid","startsWith","handleSubmit","preventDefault","labelIcon","newNamespaceNameIsValid","NumericLabel","number","numberElem","Math","floor","labelElem","plugin","OwnersTab","canEditOwners","showGroupRemoveModal","showGroupSelectWizard","noData","buttonAdd","updateProps","renderGroupRemoveModal","renderGroupSelectWizard","renderRoles","renderGroups","sortedGroups","_sortBy","renderGroupRow","_this$props3","urlPrefix","ListItemActions","kebabItems","_this$props4","showRoleRemoveModal","showRoleSelectWizard","roles","object_roles","sortedRoles","renderRoleRemoveModal","renderRoleSelectWizard","RoleListTable","tableHeader","ExpandableRow","rowIndex","expandableRowContent","groupname","removeGroup","removeRole","_this7","_this$props5","pulpObjectType","selectRolesMessage","_this$props$showGroup","_this$props$showGroup2","hasGroup","hasRoles","steps","assignedGroups","selectedGroup","updateGroup","backButtonText","enableNext","SelectRoles","assignedRoles","selectedRoles","onRolesUpdate","canJumpTo","PreviewRoles","nextButtonText","isFinished","WizardModal","onSave","addGroup","_group$object_roles","_this8","_this$props$showRoleS","addRole","ToggleTemplate","_ref$firstIndex","firstIndex","_ref$lastIndex","lastIndex","_ref$itemCount","perPageOptions","extraProps","PaginationVariant","PaginationPF","String","titles","ofWord","perPageSuffix","toggleTemplate","PartnerHeader","Tabs","setSelected","_this$context","model_permissions","showUserManagement","userManagementFilter","permission","allPermissions","categories","entries","forEach","ui_category","knownPermissionsAndCategories","withActive","selectedPermissions","availablePermissions","groupsToShow","default","minWidth","grow","PermissionChipSelector","isViewOnly","onCategoryClear","onPermissionToggle","newPerms","Set","has","add","from","_model_permissions$pe","_model_permissions$pe2","typeAheadAriaLabel","_model_permissions$pe3","RenderPluginDoc","renderError","doc","example","returnVals","parseDocString","parseExamples","parseReturn","synopsis","renderSynopsis","parameters","renderParameters","subOptionsMaxDepth","notes","renderNotes","examples","renderExample","returnValues","renderReturnValues","returnContainMaxDepth","shortDescription","renderShortDescription","renderDeprecated","content_name","requirements","renderRequirements","renderTableOfContents","renderWarning","JSON","stringify","doc_strings","short_description","maxDepth","parseOptions","depth","op","ensureListofStrings","_typeof","suboptions","parseReturnRecursive","returnV","_step2","_iterator2","ret","contains","reg","replacement","fragments","prevIndex","exec","substr","substring","renderModuleLink","renderDocLink","reactReplace","CUSTOM_FORMATTERS","fullMatch","textMatch","pluginName","removed_in","why","alternative","renderTableOfContentsLink","applyDocFormatters","paramEntries","renderParameterEntries","colSpan","parent","output","spacers","documentedType","renderChoices","renderPluginConfiguration","section","choices","defaul","note","renderReturnValueEntries","returned","sample","RemoteForm","requirements_file","client_key","client_cert","ca_cert","filenames","original","remoteType","download_concurrency","updateRemote","getRemoteType","requiredFields","disabledFields","allowEditName","showModal","isValid","saveRemote","renderForm","collection_signing","docsAnsibleLink","fileOnChange","helperTextIcon","helperTextInvalidIcon","ExclamationCircleIcon","Switch","isChecked","signed_only","WriteOnlyField","isValueSet","isFieldSet","updateIsSet","hideDefaultPreview","FileSaver","Blob","isWriteOnly","ExpandableSection","toggleTextExpanded","toggleTextCollapsed","proxy_url","proxy_username","proxy_password","Checkbox","tls_validation","isNumericSet","rate_limit","Number","isInteger","host","_step3","_iterator3","fieldName","_step4","newFields","_iterator4","is_set","isNaN","RemoteRepositoryTable","polling","setInterval","refresh","remotes","last_sync_task","refreshOnStatuses","refreshRemotes","clearInterval","buttons","getConfigureOrSyncButton","editRemote","updated_at","lastSynced","lastSyncStatus","configButton","syncButton","syncRemote","distributions","selectExpanded","setSelectExpanded","navigate","useNavigate","getRepoName","repoName","repoNames","InputGroupText","newRepo","newPath","ResourcesForm","resources","ShaLabel","grey","long","truncateSha","isDescending","getIsDescending","desc","sortParamName","getSelected","descending","def","IconDesc","IconAsc","selectedOption","SortAlphaDownIcon","SortAlphaUpIcon","SortAmountDownIcon","SortAmountUpIcon","setDescending","element","Icon","isMinus","activeIcon","up","LongArrowAltDownIcon","LongArrowAltUpIcon","ArrowsAltVIcon","getIcon","onSelectProp","_ref$toggleType","_ref$isPlain","ariaLabel","Dropdown","toggle","renderToggle","open","DropdownPosition","autoFocus","DropdownToggle","toggleIndicator","KebabToggle","typeToVariantMap","primary","secondary","_ref$type","labelProps","OutlinedClockIcon","ExclamationIcon","SyncAltIcon","statusToProps","TableOfContents","docsBlob","setDocsBlob","table","setTable","collapsedCategories","baseUrlParams","documentation","modules","plugins","playbooks","documentation_files","sanitizeDocsUrls","toUpperCase","getContentEntry","a","b","parseLinks","searchBarRef","Nav","theme","NavList","filterString","filteredLinks","NavExpandable","_capitalize","getSelectedCategory","NavItem","isSelected","textOverflow","overflow","whiteSpace","renderLinks","entry","selectedName","selectedType","base","disabledTitle","PFTabs","activeKey","getActiveTab","Tab","eventKey","TabTitleText","findIndex","readOnly","PFTooltip","HTMLComment","UIVersion","UI_COMMIT_HASH","DataForm","formFields","formPrefix","formSuffix","isReadonly","model","fields","formGroupLabelIcon","UserForm","newUser","updateUser","g","addedGroup","searchGroups","name__contains","formErrors","updateUserFieldByName","passwordConfirm","loadGroups","saveUser","isNewUser","isMe","minLength","GALAXY_MINIMUM_PASSWORD_LENGTH","TextInputTypes","superuserLabel","getSuperUserHelperText","labelOff","isPassSame","onSelectGroup","clearGroups","auth_provider","provider","ActionGroup","isPassValid","requiredFilled","pass","confirm","UserFormPage","extraControls","_ref$isStickyHeader","isStickyHeader","defaultTableHeader","TableComposable","setIsExpanded","Tbody","Tr","Td","expand","ExpandableRowContent","CheckboxRow","_excluded2","select","disable","RadioRow","_excluded3","PFClipboardCopy","hoverTip","clickTip","PFFileUpload","clearButtonText","_this$props$buttons","_this$props$kebabItem","textAlign","showClose","hasNoBodyWrapper","PFWizard","hasNoBodyPadding","navAriaLabel","mainAriaLabel","cancelButtonText","closeButtonAriaLabel","titleId","descriptionId","direction","perm","_perm$split","_perm$split2","category","catTitle","charAt","splitByDot","Divider","setInputText","setRoles","rolesItemCount","setRolesItemCount","_useState7","_useState8","_useState9","_useState10","localParams","setLocalParams","queryRoles","name__startswith","isRoleSelected","isAssigned","some","tabHeader","flex","setGroups","groupsCount","setGroupsCount","queryGroups","INSIGHTS_DEPLOYMENT_MODE","published","community","completed","running","availableLanguages","momentLocales","zh","_activate","locale","pseudolocalization","_yield$import","_args","plurals","userLanguage","navigator","languages","lang","searchParams","fromEntries","URLSearchParams","location","search","localStorage","test_l10n","override_l10n","overrideLanguage","language","debug","origin","pathname","activate","CertificationDashboard","lazy","CollectionContent","CollectionDependencies","CollectionDetail","CollectionDocs","CollectionImportLog","EditNamespace","MyImports","MyNamespaces","NamespaceDetail","NotFound","Partners","RepositoryList","Search","SignatureKeysList","TaskDetail","TaskListView","TokenPage","routes","InsightsRoutes","Suspense","fallback","Routes","Component","Route","DEFAULT_REPO","_props","useLocation","matchPath","setFeatureFlags","setSelectedRepo","setSettings","setUser","_useChrome","useChrome","identifyApp","updateDocumentTitle","getFeatureFlags","APPLICATION_NAME","_messages","_ref3$","I18nProvider","App","UI_BASE_PATH","formatEEPath","_pathsWithNamespace","_data$container","pathsWithNamespace","executionEnvironmentDetail","executionEnvironmentDetailWithNamespace","executionEnvironmentDetailActivities","executionEnvironmentDetailActivitiesWithNamespace","executionEnvironmentDetailImages","executionEnvironmentDetailImagesWithNamespace","executionEnvironmentDetailOwners","executionEnvironmentDetailOwnersWithNamespace","executionEnvironmentManifest","executionEnvironmentManifestWithNamespace","container","_data$container$split","_data$container$split2","namespaceBreadcrumb","collapsedText","expandedText","total_count","isFieldValid","errorMessagesType","names","isFormValid","alertErrorsWithoutFields","setErrorMessages","getContainersURL","writeOnlyFields","el","newObj","_some","sha","splitSha","has_model_permission","entity","_options$waitMs","waitMs","_options$bailAfter","bailAfter","_result$data$error$de","_result$data$error","statusCode","outsideError","protocol","URL","_namespace$related_fi","can_create_signatures","getUsedbyDependencies","_ref5","withRouter","ClassComponent","WithRouter","useParams","routeParams","routePath","displayName","paramString","numericTypes","appendParam","_cloneDeep","param","callback","getQueryString","_i2","_deleteKeys","getReduced","deleteParam","sortParams","defaultSort","isDesc","ascSort","UUIDRegEx"],"sourceRoot":""}