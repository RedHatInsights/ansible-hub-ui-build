{"version":3,"sources":["webpack:///./src/containers/namespace-list/namespace-list.scss","webpack:///./src/containers/namespace-list/namespace-list.tsx","webpack:///./src/containers/namespace-list/namespace-list.scss?e8b7","webpack:///./src/containers/namespace-list/my-namespaces.tsx","webpack:///./src/containers/namespace-list/partners.tsx"],"names":["module","exports","push","i","props","nonURLParams","handleModalToggle","setState","isModalOpen","params","parseParamString","location","search","state","namespaces","undefined","itemCount","hasPermission","loading","componentDidMount","this","filterOwner","list","then","results","data","meta","count","loadNamespaces","render","user","context","noData","length","extra","model_permissions","add_namespace","key","variant","onClick","_","title","name","toLowerCase","className","isOpen","toggleModal","onCreateSuccess","result","history","myCollections","namespace","tabs","link","active","myNamespaces","sortOptions","id","type","searchPlaceholder","updateParams","p","extraInputs","isCompact","perPageOptions","CARD_DEFAULT_PAGINATION_OPTIONS","renderBody","namespacePath","noDataTitle","noDataDescription","noDataButton","description","button","map","ns","namespaceURL","repo","selectedRepo","apiFunc","updateParamsMixin","NamespaceList","contextType","content","options","transform","update","locals","hot","accept","newContent","a","b","idx","Error","dispose","myCollectionsByRepo","MyNamespaces","namespaceByRepo","Partners"],"mappings":"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","file":"js/namespace_list.3bedea96cd7bf57a2a0d.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".namespace-page{height:100%;display:flex;flex-direction:column;justify-content:space-between}.namespace-page .card-area{margin-top:24px;margin-left:24px;flex-grow:1}.namespace-page .card-area .card-layout{display:flex;flex-wrap:wrap}.namespace-page .card-area .card-layout .card-wrapper{margin-right:24px;margin-bottom:24px}.namespace-page .toolbar{display:flex;justify-content:space-between}.namespace-page .pf-c-toolbar__content{padding-left:0px}.namespace-page .footer{border-top:1px solid #d8d8d8;flex-shrink:0}\", \"\"]);\n\n","import * as React from 'react';\nimport './namespace-list.scss';\n\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport {\n  BaseHeader,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LinkTabs,\n  LoadingPageSpinner,\n  LoadingPageWithHeader,\n  NamespaceCard,\n  NamespaceModal,\n  Pagination,\n  Toolbar,\n} from 'src/components';\nimport { Button, ToolbarItem } from '@patternfly/react-core';\nimport { NamespaceAPI, NamespaceListType, MyNamespaceAPI } from 'src/api';\nimport { formatPath, namespaceBreadcrumb, Paths } from 'src/paths';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { filterIsSet } from 'src/utilities';\n\ninterface IState {\n  namespaces: NamespaceListType[];\n  itemCount: number;\n  params: {\n    name?: string;\n    sort?: string;\n    page?: number;\n    page_size?: number;\n    tenant?: string;\n  };\n  hasPermission: boolean;\n  isModalOpen: boolean;\n  loading: boolean;\n}\n\ninterface IProps extends RouteComponentProps {\n  namespacePath: Paths;\n  filterOwner?: boolean;\n}\n\nexport class NamespaceList extends React.Component<IProps, IState> {\n  nonURLParams = ['tenant'];\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    if (!params['page_size']) {\n      params['page_size'] = 20;\n    }\n\n    if (!params['sort']) {\n      params['sort'] = 'name';\n    }\n\n    this.state = {\n      namespaces: undefined,\n      itemCount: 0,\n      params: params,\n      hasPermission: true,\n      isModalOpen: false,\n      loading: true,\n    };\n  }\n\n  private handleModalToggle = () => {\n    this.setState(({ isModalOpen }) => ({\n      isModalOpen: !isModalOpen,\n    }));\n  };\n\n  componentDidMount() {\n    if (this.props.filterOwner) {\n      // Make a query with no params and see if it returns results to tell\n      // if the user can edit namespaces\n      MyNamespaceAPI.list({}).then((results) => {\n        if (results.data.meta.count !== 0) {\n          this.loadNamespaces();\n        } else {\n          this.setState({\n            hasPermission: false,\n            namespaces: [],\n            loading: false,\n          });\n        }\n      });\n    } else {\n      this.loadNamespaces();\n    }\n  }\n\n  render() {\n    const { namespaces, params, itemCount } = this.state;\n    const { filterOwner } = this.props;\n    const { user } = this.context;\n    const noData =\n      !filterIsSet(this.state.params, ['keywords']) &&\n      namespaces !== undefined &&\n      namespaces.length === 0;\n\n    if (!namespaces) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    let extra = [];\n\n    if (user?.model_permissions?.add_namespace) {\n      extra.push(\n        <ToolbarItem key='create-button'>\n          <Button variant='primary' onClick={this.handleModalToggle}>\n            {_`Create`}\n          </Button>\n        </ToolbarItem>,\n      );\n    }\n\n    const title = namespaceBreadcrumb.name;\n    const search = filterOwner\n      ? _`Search my namespaces`\n      : _`Search all ` + title.toLowerCase();\n\n    return (\n      <div className='namespace-page'>\n        <NamespaceModal\n          isOpen={this.state.isModalOpen}\n          toggleModal={this.handleModalToggle}\n          onCreateSuccess={(result) =>\n            this.props.history.push(\n              formatPath(Paths.myCollections, {\n                namespace: result['name'],\n              }),\n            )\n          }\n        ></NamespaceModal>\n        <BaseHeader title={title}>\n          <div className='tab-link-container'>\n            <div className='tabs'>\n              <LinkTabs\n                tabs={[\n                  {\n                    title: _`All`,\n                    link: Paths[NAMESPACE_TERM],\n                    active: !filterOwner,\n                  },\n                  {\n                    title: _`My namespaces`,\n                    link: Paths.myNamespaces,\n                    active: filterOwner,\n                  },\n                ]}\n              />\n            </div>\n          </div>\n          {noData ? null : (\n            <div className='toolbar'>\n              <Toolbar\n                params={params}\n                sortOptions={[{ title: _`Name`, id: 'name', type: 'alpha' }]}\n                searchPlaceholder={search}\n                updateParams={(p) =>\n                  this.updateParams(p, () => this.loadNamespaces())\n                }\n                extraInputs={extra}\n              />\n              <div>\n                <Pagination\n                  params={params}\n                  updateParams={(p) =>\n                    this.updateParams(p, () => this.loadNamespaces())\n                  }\n                  count={itemCount}\n                  isCompact\n                  perPageOptions={Constants.CARD_DEFAULT_PAGINATION_OPTIONS}\n                />\n              </div>\n            </div>\n          )}\n        </BaseHeader>\n        <section className='card-area'>{this.renderBody()}</section>\n        {noData ? null : (\n          <section className='footer'>\n            <Pagination\n              params={params}\n              updateParams={(p) =>\n                this.updateParams(p, () => this.loadNamespaces())\n              }\n              perPageOptions={Constants.CARD_DEFAULT_PAGINATION_OPTIONS}\n              count={itemCount}\n            />\n          </section>\n        )}\n      </div>\n    );\n  }\n\n  private renderBody() {\n    const { namespaces, loading } = this.state;\n    const { namespacePath, filterOwner } = this.props;\n    const { user } = this.context;\n\n    const noDataTitle = _`No namespaces yet`;\n    const noDataDescription = !filterOwner\n      ? _`Namespaces will appear once created`\n      : _`This account is not set up to manage any namespaces`;\n\n    const noDataButton = user?.model_permissions?.add_namespace ? (\n      <Button variant='primary' onClick={() => this.handleModalToggle()}>\n        {_`Create`}\n      </Button>\n    ) : null;\n\n    if (loading) {\n      return (\n        <section>\n          <LoadingPageSpinner></LoadingPageSpinner>;\n        </section>\n      );\n    }\n\n    if (namespaces.length === 0) {\n      return (\n        <section>\n          {filterIsSet(this.state.params, ['keywords']) ? (\n            <EmptyStateFilter />\n          ) : (\n            <EmptyStateNoData\n              title={noDataTitle}\n              description={noDataDescription}\n              button={noDataButton}\n            />\n          )}\n        </section>\n      );\n    }\n\n    return (\n      <section className='card-layout'>\n        {namespaces.map((ns, i) => (\n          <div key={i} className='card-wrapper'>\n            <NamespaceCard\n              namespaceURL={formatPath(namespacePath, {\n                namespace: ns.name,\n                repo: this.context.selectedRepo,\n              })}\n              key={i}\n              {...ns}\n            ></NamespaceCard>\n          </div>\n        ))}\n      </section>\n    );\n  }\n\n  private loadNamespaces() {\n    let apiFunc: any;\n\n    if (this.props.filterOwner) {\n      apiFunc = (p) => MyNamespaceAPI.list(p);\n    } else {\n      apiFunc = (p) => NamespaceAPI.list(p);\n    }\n    this.setState({ loading: true }, () => {\n      apiFunc(this.state.params).then((results) => {\n        this.setState({\n          namespaces: results.data.data,\n          itemCount: results.data.meta.count,\n          loading: false,\n        });\n      });\n    });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonURLParams);\n  }\n}\n\nNamespaceList.contextType = AppContext;\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./namespace-list.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./namespace-list.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./namespace-list.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { NamespaceList } from './namespace-list';\nimport { Paths } from 'src/paths';\n\nclass MyNamespaces extends React.Component<RouteComponentProps, {}> {\n  render() {\n    return (\n      <NamespaceList\n        {...this.props}\n        namespacePath={Paths.myCollectionsByRepo}\n        filterOwner={true}\n      />\n    );\n  }\n}\n\nexport default withRouter(MyNamespaces);\n","import * as React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { NamespaceList } from './namespace-list';\nimport { Paths } from 'src/paths';\n\nclass Partners extends React.Component<RouteComponentProps, {}> {\n  render() {\n    return (\n      <NamespaceList\n        {...this.props}\n        namespacePath={Paths.namespaceByRepo}\n        filterOwner={false}\n      />\n    );\n  }\n}\n\nexport default withRouter(Partners);\n"],"sourceRoot":""}