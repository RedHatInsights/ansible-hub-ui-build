{"version":3,"sources":["webpack:///./src/containers/search/search.scss","webpack:///./src/containers/search/search.scss?b903","webpack:///./src/containers/search/search.tsx"],"names":["module","exports","push","i","content","options","transform","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","props","params","parseParamString","location","search","CARD_DEFAULT_PAGE_SIZE","localStorage","getItem","SEARCH_VIEW_TYPE_LOCAL_KEY","state","collections","numberOfResults","loading","synclist","componentDidMount","this","queryCollections","INSIGHTS_DEPLOYMENT_MODE","getSynclist","render","noData","length","updateParams","p","className","title","contextSelector","selectedRepo","context","path","searchByRepo","ignoredParams","size","setItem","view_type","count","perPageOptions","CARD_DEFAULT_PAGINATION_OPTIONS","isTop","description","renderCollections","clearAllFilters","renderList","renderCards","map","c","id","footer","renderSyncToggle","name","namespace","repo","label","isChecked","isCollectionSynced","onChange","toggleCollectionSync","colIndex","findIndex","el","splice","then","response","setState","data","curate","found","find","policy","showNamespace","controls","list","result","meta","console","error","getReduced","deprecated","updateParamsMixin","Search","contextType"],"mappings":"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","file":"js/search.5592b195f20bcf6d5213.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".search-page{height:100%;display:flex;flex-direction:column}.search-page .toolbar-wrapper .toolbar .pagination-container .card-list-switcher{margin-right:24px}.search-page .header{border-bottom:1px solid #d8d8d8}.search-page .pf-c-toolbar__content{padding-left:0px}.search-page .collection-container{padding-top:24px;flex-grow:1}.search-page .collection-container .cards{display:flex;flex-wrap:wrap;align-content:flex-start}.search-page .collection-container .cards .card{margin-left:24px;margin-bottom:24px}.search-page .collection-container .list-container{width:100%}.search-page .collection-container .list{margin-bottom:24px;margin-left:24px;margin-right:24px;padding-top:16px;padding-bottom:16px;overflow:hidden}.search-page .collection-container .list .data-list{margin-top:-17px;margin-bottom:-17px}.search-page .collection-container .empty{flex-grow:1}.search-page .pf-c-toolbar__content{padding-left:0px}.search-page .footer{border-top:1px solid #d8d8d8;flex-shrink:0}\", \"\"]);\n\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./search.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./search.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./search.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\nimport './search.scss';\n\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { DataList, Switch } from '@patternfly/react-core';\nimport {\n  BaseHeader,\n  CardListSwitcher,\n  CollectionCard,\n  CollectionFilter,\n  CollectionListItem,\n  EmptyStateFilter,\n  EmptyStateNoData,\n  LoadingPageSpinner,\n  Pagination,\n  RepoSelector,\n} from 'src/components';\nimport {\n  CollectionAPI,\n  CollectionListType,\n  SyncListType,\n  MySyncListAPI,\n} from 'src/api';\nimport { ParamHelper } from 'src/utilities/param-helper';\nimport { Constants } from 'src/constants';\nimport { AppContext } from 'src/loaders/app-context';\nimport { filterIsSet } from 'src/utilities';\nimport { Paths } from 'src/paths';\n\ninterface IState {\n  collections: CollectionListType[];\n  numberOfResults: number;\n  params: {\n    page?: number;\n    page_size?: number;\n    keywords?: string;\n    tags?: string[];\n    view_type?: string;\n  };\n  loading: boolean;\n  synclist: SyncListType;\n}\n\nclass Search extends React.Component<RouteComponentProps, IState> {\n  tags: string[];\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    if (!params['page_size']) {\n      params['page_size'] = Constants.CARD_DEFAULT_PAGE_SIZE;\n    }\n\n    // Load view type from local storage if it's not set. This allows a\n    // user's view type preference to persist\n    if (!params['view_type']) {\n      params['view_type'] = localStorage.getItem(\n        Constants.SEARCH_VIEW_TYPE_LOCAL_KEY,\n      );\n    }\n\n    this.state = {\n      collections: [],\n      params: params,\n      numberOfResults: 0,\n      loading: true,\n      synclist: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.queryCollections();\n\n    if (DEPLOYMENT_MODE === Constants.INSIGHTS_DEPLOYMENT_MODE)\n      this.getSynclist();\n  }\n\n  render() {\n    const { collections, params, numberOfResults } = this.state;\n    const noData =\n      collections.length === 0 && !filterIsSet(params, ['keywords', 'tags']);\n\n    const updateParams = p =>\n      this.updateParams(p, () => this.queryCollections());\n\n    return (\n      <div className='search-page'>\n        <BaseHeader\n          className='header'\n          title='Collections'\n          contextSelector={\n            <RepoSelector\n              selectedRepo={this.context.selectedRepo}\n              path={Paths.searchByRepo}\n            />\n          }\n        >\n          {!noData && (\n            <div className='toolbar-wrapper'>\n              <div className='toolbar'>\n                <CollectionFilter\n                  ignoredParams={['page', 'page_size', 'sort', 'view_type']}\n                  params={params}\n                  updateParams={updateParams}\n                />\n\n                <div className='pagination-container'>\n                  <div className='card-list-switcher'>\n                    <CardListSwitcher\n                      size='sm'\n                      params={params}\n                      updateParams={p =>\n                        this.updateParams(p, () =>\n                          // Note, we have to use this.state.params instead\n                          // of params in the callback because the callback\n                          // executes before the page can re-run render\n                          // which means params doesn't contain the most\n                          // up to date state\n                          localStorage.setItem(\n                            Constants.SEARCH_VIEW_TYPE_LOCAL_KEY,\n                            this.state.params.view_type,\n                          ),\n                        )\n                      }\n                    />\n                  </div>\n\n                  <Pagination\n                    params={params}\n                    updateParams={updateParams}\n                    count={numberOfResults}\n                    perPageOptions={Constants.CARD_DEFAULT_PAGINATION_OPTIONS}\n                    isTop\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </BaseHeader>\n        {noData ? (\n          <EmptyStateNoData\n            title={'No collections yet'}\n            description={'Collections will appear once uploaded'}\n          />\n        ) : (\n          <React.Fragment>\n            <section className='collection-container'>\n              {this.renderCollections(collections, params, updateParams)}\n            </section>\n            <section className='footer'>\n              <Pagination\n                params={params}\n                updateParams={p =>\n                  this.updateParams(p, () => this.queryCollections())\n                }\n                perPageOptions={Constants.CARD_DEFAULT_PAGINATION_OPTIONS}\n                count={numberOfResults}\n              />\n            </section>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n\n  private renderCollections(collections, params, updateParams) {\n    if (this.state.loading) {\n      return <LoadingPageSpinner></LoadingPageSpinner>;\n    }\n    if (collections.length === 0) {\n      return (\n        <EmptyStateFilter\n          clearAllFilters={() => {\n            ParamHelper.clearAllFilters({\n              params,\n              ignoredParams: ['page', 'page_size', 'sort', 'view_type'],\n              updateParams,\n            });\n          }}\n        />\n      );\n    }\n    if (params.view_type === 'list') {\n      return this.renderList(collections);\n    } else {\n      return this.renderCards(collections);\n    }\n  }\n\n  private renderCards(collections) {\n    return (\n      <div className='cards'>\n        {collections.map(c => {\n          return (\n            <CollectionCard\n              className='card'\n              key={c.id}\n              {...c}\n              footer={this.renderSyncToggle(c.name, c.namespace.name)}\n              repo={this.context.selectedRepo}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  private renderSyncToggle(name: string, namespace: string): React.ReactNode {\n    const { synclist } = this.state;\n    if (!synclist) {\n      return null;\n    }\n    return (\n      <Switch\n        id={namespace + '.' + name}\n        className='sync-toggle'\n        label='Sync'\n        isChecked={this.isCollectionSynced(name, namespace)}\n        onChange={() => this.toggleCollectionSync(name, namespace)}\n      />\n    );\n  }\n\n  private toggleCollectionSync(name: string, namespace: string) {\n    const synclist = { ...this.state.synclist };\n\n    const colIndex = synclist.collections.findIndex(\n      el => el.name === name && el.namespace === namespace,\n    );\n\n    if (colIndex < 0) {\n      synclist.collections.push({ name: name, namespace: namespace });\n    } else {\n      synclist.collections.splice(colIndex, 1);\n    }\n\n    MySyncListAPI.update(synclist.id, synclist).then(response => {\n      this.setState({ synclist: response.data });\n      MySyncListAPI.curate(synclist.id).then(() => null);\n    });\n  }\n\n  private isCollectionSynced(name: string, namespace: string): boolean {\n    const { synclist } = this.state;\n    const found = synclist.collections.find(\n      el => el.name === name && el.namespace === namespace,\n    );\n\n    if (synclist.policy === 'include') {\n      return !(found === undefined);\n    } else {\n      return found === undefined;\n    }\n  }\n\n  private renderList(collections) {\n    return (\n      <div className='list-container'>\n        <div className='list'>\n          <DataList className='data-list' aria-label={'List of Collections'}>\n            {collections.map(c => (\n              <CollectionListItem\n                showNamespace={true}\n                key={c.id}\n                {...c}\n                controls={this.renderSyncToggle(c.name, c.namespace.name)}\n                repo={this.context.selectedRepo}\n              />\n            ))}\n          </DataList>\n        </div>\n      </div>\n    );\n  }\n\n  private getSynclist() {\n    MySyncListAPI.list().then(result => {\n      // ignore results if more than 1 is returned\n      // TODO: should we throw an error for this or just ignore it?\n      if (result.data.meta.count === 1) {\n        this.setState({ synclist: result.data.data[0] });\n      } else {\n        console.error(\n          `my-synclist returned ${result.data.meta.count} synclists`,\n        );\n      }\n    });\n  }\n\n  private queryCollections() {\n    this.setState({ loading: true }, () => {\n      CollectionAPI.list(\n        {\n          ...ParamHelper.getReduced(this.state.params, ['view_type']),\n          deprecated: false,\n        },\n        this.context.selectedRepo,\n      ).then(result => {\n        this.setState({\n          collections: result.data.data,\n          numberOfResults: result.data.meta.count,\n          loading: false,\n        });\n      });\n    });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n}\n\nexport default withRouter(Search);\n\nSearch.contextType = AppContext;\n"],"sourceRoot":""}