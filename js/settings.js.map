{"version":3,"sources":["webpack:///./src/containers/certification-dashboard/certification-dashboard.scss","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/warning-triangle-icon.js","webpack:///./src/containers/certification-dashboard/certification-dashboard.scss?13e2","webpack:///./src/containers/token/token-insights.tsx","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/check-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/info-circle-icon.js","webpack:///./src/containers/certification-dashboard/certification-dashboard.tsx"],"names":["module","exports","push","i","name","height","width","svgPath","yOffset","xOffset","transform","content","options","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","props","state","tokenData","componentDidMount","window","insights","chrome","auth","getOfflineToken","then","result","setState","data","render","title","className","refresh_token","onClick","loadToken","href","target","doOffline","TokenPage","tokeninsights","displayName","__docgenInfo","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","createIcon","params","parseParamString","location","search","needsReview","versions","itemCount","loading","updatingVersions","redirect","alerts","isPartnerEngineer","response","is_partner_engineer","queryCollections","notFound","Redirect","to","this","closeAlert","Toolbar","ToolbarGroup","ToolbarItem","updateParams","p","filterConfig","id","inputType","count","isTop","ignoredParams","renderTable","length","EmptyState","variant","full","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","headers","type","map","version","renderRow","renderStatus","includes","certification","certified","notCertified","index","namespace","Link","collection","moment","created_at","fromNow","renderButtons","importsLink","DropdownItem","component","myImports","certifyDropDown","isDisabled","updateCertification","rejectDropDown","items","Button","concat","setCertifiation","list","updatedVersion","newVersionList","ind","findIndex","x","filter","v","catch","error","status","description","meta","updateParamsMixin","withRouter","certificationdashboard"],"mappings":"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","file":"js/settings.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".toolbar{padding-bottom:16px;display:flex;justify-content:space-between}.certified-icon{color:var(--pf-global--success-color--100)}.rejected-icon{color:var(--pf-global--danger-color--100)}.needs-review-icon{color:var(--pf-global--info-color--100)}.control-column{display:flex;justify-content:flex-end;align-items:center}.footer{padding-top:16px}.updating-spinner{color:var(--pf-global--info-color--100)}\\n\", \"\"]);\n\n","/* This file is generated by createIcons.js any changes will be lost. */\nimport createIcon from '../createIcon';\nexport const WarningTriangleIconConfig = {\n  name: 'WarningTriangleIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M511.488 949.321c6.656 0 13.093-0.878 19.456-2.487s12.142-4.169 17.481-7.461c5.998-3.365 11.118-7.314 15.506-11.995s8.119-10.021 11.483-15.945l437.979-842.24c6.656-11.995 9.801-23.918 9.509-35.913s-3.877-23.918-10.459-35.913c-3.365-5.998-7.168-11.118-11.483-15.506s-9.509-8.192-15.506-11.483c-5.339-2.706-10.971-4.827-16.969-6.51s-12.288-2.487-18.944-2.487h-876.032c-6.656 0-12.946 0.805-18.944 2.487s-11.63 3.803-16.969 6.51c-5.998 3.291-11.118 7.095-15.506 11.483s-8.192 9.509-11.483 15.506c-6.656 11.995-10.094 23.918-10.459 35.913s2.779 23.918 9.509 35.913l437.979 842.24c3.291 5.998 7.095 11.264 11.483 15.945s9.509 8.631 15.506 11.995c5.339 3.291 11.118 5.778 17.481 7.461s12.8 2.487 19.456 2.487zM132.974 73.289h759.296l-380.782 741.595-378.514-741.595zM583.387 156.526c-2.121-5.632-7.534-9.509-13.97-9.509-14.263 0-28.526 0-42.715 0-21.138 0-42.277 0-63.415 0-11.045 0-24.576 0.585-24.576 14.994 0 0 0 44.325 0 44.544 0 8.558 6.437 14.994 14.994 14.994 0 0 115.712 0 115.785 0 8.485 0 14.994-6.437 14.994-14.994 0 0 0-44.544 0-44.544 0-1.975-0.366-3.803-1.024-5.486zM583.826 301.934c-2.121-5.632-7.534-9.509-13.97-9.509-14.263 0-28.526 0-42.715 0-21.138 0-42.277 0-63.415 0-11.045 0-24.576 0.585-24.576 14.994 0 0 0 224.914 0 225.134 0 8.558 6.437 14.994 14.994 14.994 0 0 115.712 0 115.785 0 8.485 0 14.994-6.437 14.994-14.994 0 0 0-225.134 0-225.134 0-1.975-0.366-3.803-1.024-5.486z',\n  yOffset: '64',\n  xOffset: '',\n  transform: 'rotate(180 0 512) scale(-1 1)'\n};\nexport default createIcon(WarningTriangleIconConfig);\n//# sourceMappingURL=warning-triangle-icon.js.map","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./certification-dashboard.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./certification-dashboard.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./certification-dashboard.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\n\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport { ClipboardCopy, Button } from '@patternfly/react-core';\n\nimport { BaseHeader, Main } from '../../components';\n\ninterface IState {\n  tokenData: {\n    access_token: string;\n    expires_in: number;\n    id_token: string;\n    refresh_expires_in: number;\n    refresh_token: string;\n    scope: string;\n    session_state: string;\n    token_type: string;\n  };\n}\n\nclass TokenPage extends React.Component<RouteComponentProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tokenData: undefined,\n    };\n  }\n\n  componentDidMount() {\n    // this function will fail if chrome.auth.doOffline() hasn't been called\n    (window as any).insights.chrome.auth.getOfflineToken().then(result => {\n      this.setState({ tokenData: result.data });\n    });\n  }\n\n  render() {\n    const { tokenData } = this.state;\n\n    return (\n      <React.Fragment>\n        <BaseHeader title='Token management'></BaseHeader>\n        <Main>\n          <Section className='body pf-c-content'>\n            <h2>Offline token</h2>\n            <p>\n              Use this token to authenticate the <code>ansible-galaxy</code>{' '}\n              client.\n            </p>\n            {tokenData ? (\n              <div>\n                <ClipboardCopy>{tokenData.refresh_token}</ClipboardCopy>\n              </div>\n            ) : (\n              <Button onClick={() => this.loadToken()}>Load token</Button>\n            )}\n            <h2>Manage tokens</h2>\n            To remove an existing token, visit{' '}\n            <a\n              href='https://sso.redhat.com/auth/realms/redhat-external/account/'\n              target='_blank'\n            >\n              Red Hat SSO account managment\n            </a>\n            .\n          </Section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private loadToken() {\n    (window as any).insights.chrome.auth\n      // doOffline causes the page to refresh and will make the data\n      // available to getOfflineToken() when the component mounts after\n      // the reload\n      .doOffline();\n  }\n}\n\nexport default withRouter(TokenPage);\ntry {\n    // @ts-ignore\n    tokeninsights.displayName = \"tokeninsights\";\n    // @ts-ignore\n    tokeninsights.__docgenInfo = { \"description\": \"\", \"displayName\": \"tokeninsights\", \"props\": { \"wrappedComponentRef\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"wrappedComponentRef\", \"required\": false, \"type\": { \"name\": \"Ref<TokenPage>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/token/token-insights.tsx#tokeninsights\"] = { docgenInfo: tokeninsights.__docgenInfo, name: \"tokeninsights\", path: \"src/containers/token/token-insights.tsx#tokeninsights\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","/* This file is generated by createIcons.js any changes will be lost. */\nimport createIcon from '../createIcon';\nexport const CheckCircleIconConfig = {\n  name: 'CheckCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z',\n  yOffset: '',\n  xOffset: '',\n  transform: ''\n};\nexport default createIcon(CheckCircleIconConfig);\n//# sourceMappingURL=check-circle-icon.js.map","/* This file is generated by createIcons.js any changes will be lost. */\nimport createIcon from '../createIcon';\nexport const ExclamationCircleIconConfig = {\n  name: 'ExclamationCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: '',\n  xOffset: '',\n  transform: ''\n};\nexport default createIcon(ExclamationCircleIconConfig);\n//# sourceMappingURL=exclamation-circle-icon.js.map","/* This file is generated by createIcons.js any changes will be lost. */\nimport createIcon from '../createIcon';\nexport const InfoCircleIconConfig = {\n  name: 'InfoCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z',\n  yOffset: '',\n  xOffset: '',\n  transform: ''\n};\nexport default createIcon(InfoCircleIconConfig);\n//# sourceMappingURL=info-circle-icon.js.map","import * as React from 'react';\nimport './certification-dashboard.scss';\n\nimport * as moment from 'moment';\nimport {\n  withRouter,\n  RouteComponentProps,\n  Link,\n  Redirect,\n} from 'react-router-dom';\nimport { BaseHeader, Main } from '../../components';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport {\n  Toolbar,\n  ToolbarGroup,\n  ToolbarItem,\n  Button,\n  DropdownItem,\n  EmptyState,\n  EmptyStateIcon,\n  Title,\n  EmptyStateBody,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\n\nimport {\n  InfoCircleIcon,\n  ExclamationCircleIcon,\n  CheckCircleIcon,\n  WarningTriangleIcon,\n} from '@patternfly/react-icons';\n\nimport {\n  CollectionVersionAPI,\n  CollectionVersion,\n  CertificationStatus,\n  ActiveUserAPI,\n  MeType,\n} from '../../api';\nimport { ParamHelper } from '../../utilities';\nimport {\n  LoadingPageWithHeader,\n  StatefulDropdown,\n  CompoundFilter,\n  LoadingPageSpinner,\n  AppliedFilters,\n  Pagination,\n  AlertList,\n  closeAlertMixin,\n  AlertType,\n  SortFieldType,\n  SortTable,\n} from '../../components';\nimport { Paths, formatPath } from '../../paths';\n\ninterface IState {\n  params: {\n    certification?: string;\n    namespace?: string;\n    collection?: string;\n    page?: number;\n    page_size?: number;\n  };\n  alerts: AlertType[];\n  versions: CollectionVersion[];\n  itemCount: number;\n  loading: boolean;\n  updatingVersions: string[];\n  redirect: string;\n}\n\nclass CertificationDashboard extends React.Component<\n  RouteComponentProps,\n  IState\n> {\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    if (!params['page_size']) {\n      params['page_size'] = 10;\n    }\n\n    if (!params['sort']) {\n      params['sort'] = '-pulp_created';\n    }\n\n    if (!params['certification']) {\n      params['certification'] = CertificationStatus.needsReview;\n    }\n\n    this.state = {\n      versions: undefined,\n      itemCount: 0,\n      params: params,\n      loading: true,\n      updatingVersions: [],\n      redirect: undefined,\n      alerts: [],\n    };\n  }\n\n  componentDidMount() {\n    ActiveUserAPI.isPartnerEngineer().then(response => {\n      const me: MeType = response.data;\n      if (!me.is_partner_engineer) {\n        this.setState({ redirect: Paths.notFound });\n      } else {\n        this.queryCollections();\n      }\n    });\n  }\n\n  render() {\n    const { versions, params, itemCount, loading, redirect } = this.state;\n\n    if (redirect) {\n      return <Redirect to={redirect}></Redirect>;\n    }\n\n    const sortOptions: SortFieldType[] = [\n      {\n        id: 'pulp_created',\n        title: 'Date created',\n        type: 'numeric',\n      },\n      { id: 'namespace', title: 'Namespace name', type: 'alpha' },\n      { id: 'version', title: 'Version number', type: 'numeric' },\n      { id: 'name', title: 'Collection name', type: 'alpha' },\n    ];\n\n    if (!versions) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n    return (\n      <React.Fragment>\n        <BaseHeader title='Certification dashboard'></BaseHeader>\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={i => this.closeAlert(i)}\n        />\n        <Main>\n          <Section className='body'>\n            <div className='toolbar'>\n              <Toolbar>\n                <ToolbarGroup>\n                  <ToolbarItem>\n                    <CompoundFilter\n                      updateParams={p =>\n                        this.updateParams(p, () => this.queryCollections())\n                      }\n                      params={params}\n                      filterConfig={[\n                        {\n                          id: 'namespace',\n                          title: 'Namespace',\n                        },\n                        {\n                          id: 'name',\n                          title: 'Collection Name',\n                        },\n                        {\n                          id: 'certification',\n                          title: 'Certification Status',\n                          inputType: 'select',\n                          options: [\n                            {\n                              id: 'not_certified',\n                              title: 'Rejected',\n                            },\n                            {\n                              id: 'needs_review',\n                              title: 'Needs Review',\n                            },\n                            {\n                              id: 'certified',\n                              title: 'Certified',\n                            },\n                          ],\n                        },\n                      ]}\n                    />\n                  </ToolbarItem>\n                </ToolbarGroup>\n              </Toolbar>\n\n              <Pagination\n                params={params}\n                updateParams={p =>\n                  this.updateParams(p, () => this.queryCollections())\n                }\n                count={itemCount}\n                isTop\n              />\n            </div>\n            <div>\n              <AppliedFilters\n                updateParams={p =>\n                  this.updateParams(p, () => this.queryCollections())\n                }\n                params={params}\n                ignoredParams={['page_size', 'page', 'sort']}\n              />\n            </div>\n            {loading ? (\n              <LoadingPageSpinner />\n            ) : (\n              this.renderTable(versions, params)\n            )}\n\n            <div className='footer'>\n              <Pagination\n                params={params}\n                updateParams={p =>\n                  this.updateParams(p, () => this.queryCollections())\n                }\n                count={itemCount}\n              />\n            </div>\n          </Section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private renderTable(versions, params) {\n    if (versions.length === 0) {\n      return (\n        <EmptyState className='empty' variant={EmptyStateVariant.full}>\n          <EmptyStateIcon icon={WarningTriangleIcon} />\n          <Title headingLevel='h2' size='lg'>\n            No matches\n          </Title>\n          <EmptyStateBody>\n            Please try adjusting your search query.\n          </EmptyStateBody>\n        </EmptyState>\n      );\n    }\n    let sortTableOptions = {\n      headers: [\n        {\n          title: 'Namespace',\n          type: 'alpha',\n          id: 'namespace',\n        },\n        {\n          title: 'Collection',\n          type: 'alpha',\n          id: 'collection',\n        },\n        {\n          title: 'Version',\n          type: 'number',\n          id: 'version',\n        },\n        {\n          title: 'Date created',\n          type: 'number',\n          id: 'pulp_created',\n        },\n        {\n          title: 'Status',\n          type: 'none',\n          id: 'status',\n        },\n        {\n          title: '',\n          type: 'none',\n          id: 'certify',\n        },\n      ],\n    };\n\n    return (\n      <table\n        aria-label='Collection versions'\n        className='content-table pf-c-table'\n      >\n        <SortTable\n          options={sortTableOptions}\n          params={params}\n          updateParams={p =>\n            this.updateParams(p, () => this.queryCollections())\n          }\n        />\n        <tbody>\n          {versions.map((version, i) => this.renderRow(version, i))}\n        </tbody>\n      </table>\n    );\n  }\n\n  private renderStatus(version: CollectionVersion) {\n    if (this.state.updatingVersions.includes(version.id)) {\n      return <span className='fa fa-lg fa-spin fa-spinner' />;\n    }\n    switch (version.certification) {\n      case CertificationStatus.certified:\n        return (\n          <span>\n            <CheckCircleIcon className='certified-icon' /> Certified\n          </span>\n        );\n      case CertificationStatus.notCertified:\n        return (\n          <span>\n            <ExclamationCircleIcon className='rejected-icon' /> Rejected\n          </span>\n        );\n      case CertificationStatus.needsReview:\n        return (\n          <span>\n            <InfoCircleIcon className='needs-review-icon' /> Needs Review\n          </span>\n        );\n    }\n  }\n\n  private renderRow(version: CollectionVersion, index) {\n    return (\n      <tr\n        aria-labelledby={`${version.namespace}.${version.name} v${version.version}`}\n        key={index}\n      >\n        <td>{version.namespace}</td>\n        <td>{version.name}</td>\n        <td>\n          <Link\n            to={formatPath(\n              Paths.collection,\n              {\n                namespace: version.namespace,\n                collection: version.name,\n              },\n              {\n                version: version.version,\n              },\n            )}\n          >\n            {version.version}\n          </Link>\n        </td>\n        <td>{moment(version.created_at).fromNow()}</td>\n        <td>{this.renderStatus(version)}</td>\n        <td>\n          <div className='control-column'>\n            <div>{this.renderButtons(version)}</div>\n          </div>\n        </td>\n      </tr>\n    );\n  }\n\n  private renderButtons(version: CollectionVersion) {\n    const importsLink = (\n      <DropdownItem\n        key='imports'\n        component={\n          <Link\n            to={formatPath(\n              Paths.myImports,\n              {},\n              {\n                namespace: version.namespace,\n                name: version.name,\n                version: version.version,\n              },\n            )}\n          >\n            View Import Logs\n          </Link>\n        }\n      />\n    );\n\n    const certifyDropDown = (isDisabled: boolean) => (\n      <DropdownItem\n        onClick={() =>\n          this.updateCertification(version, CertificationStatus.certified)\n        }\n        isDisabled={isDisabled}\n        key='certify'\n      >\n        Certify\n      </DropdownItem>\n    );\n\n    const rejectDropDown = (isDisabled: boolean) => (\n      <DropdownItem\n        onClick={() =>\n          this.updateCertification(version, CertificationStatus.notCertified)\n        }\n        isDisabled={isDisabled}\n        className='rejected-icon'\n        key='reject'\n      >\n        Reject\n      </DropdownItem>\n    );\n\n    switch (version.certification) {\n      case CertificationStatus.certified:\n        return (\n          <span>\n            <StatefulDropdown\n              items={[\n                certifyDropDown(true),\n                rejectDropDown(false),\n                importsLink,\n              ]}\n            />\n          </span>\n        );\n      case CertificationStatus.notCertified:\n        return (\n          <span>\n            <StatefulDropdown\n              items={[\n                certifyDropDown(false),\n                rejectDropDown(true),\n                importsLink,\n              ]}\n            />\n          </span>\n        );\n      case CertificationStatus.needsReview:\n        return (\n          <span>\n            <Button\n              onClick={() =>\n                this.updateCertification(version, CertificationStatus.certified)\n              }\n            >\n              <span>Certify</span>\n            </Button>\n            <StatefulDropdown items={[rejectDropDown(false), importsLink]} />\n          </span>\n        );\n    }\n  }\n\n  private updateCertification(version, certification) {\n    // Set the selected version to loading\n    this.setState(\n      {\n        updatingVersions: this.state.updatingVersions.concat([version.id]),\n      },\n      () =>\n        // Perform the PUT request\n        CollectionVersionAPI.setCertifiation(\n          version.namespace,\n          version.name,\n          version.version,\n          certification,\n        )\n          .then(() =>\n            // Since pulp doesn't reply with the new object, perform a\n            // second query to get the updated data\n            CollectionVersionAPI.list({\n              namespace: version.namespace,\n              name: version.name,\n              version: version.version,\n            }).then(result => {\n              const updatedVersion = result.data.data[0];\n              const newVersionList = [...this.state.versions];\n              const ind = newVersionList.findIndex(\n                x => x.id === updatedVersion.id,\n              );\n              newVersionList[ind] = updatedVersion;\n\n              this.setState({\n                versions: newVersionList,\n                updatingVersions: this.state.updatingVersions.filter(\n                  v => v != updatedVersion.id,\n                ),\n              });\n            }),\n          )\n          .catch(error => {\n            this.setState({\n              updatingVersions: this.state.updatingVersions.filter(\n                v => v != version.id,\n              ),\n              alerts: this.state.alerts.concat({\n                variant: 'danger',\n                title: `API Error: ${error.response.status}`,\n                description:\n                  `Could not update the certification ` +\n                  `status for ${version.namespace}.` +\n                  `${version.name}.${version.version}.`,\n              }),\n            });\n          }),\n    );\n  }\n\n  private queryCollections() {\n    this.setState({ loading: true }, () =>\n      CollectionVersionAPI.list(this.state.params).then(result =>\n        this.setState({\n          versions: result.data.data,\n          itemCount: result.data.meta.count,\n          loading: false,\n          updatingVersions: [],\n        }),\n      ),\n    );\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n}\n\nexport default withRouter(CertificationDashboard);\ntry {\n    // @ts-ignore\n    certificationdashboard.displayName = \"certificationdashboard\";\n    // @ts-ignore\n    certificationdashboard.__docgenInfo = { \"description\": \"\", \"displayName\": \"certificationdashboard\", \"props\": { \"wrappedComponentRef\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"wrappedComponentRef\", \"required\": false, \"type\": { \"name\": \"Ref<CertificationDashboard>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/certification-dashboard/certification-dashboard.tsx#certificationdashboard\"] = { docgenInfo: certificationdashboard.__docgenInfo, name: \"certificationdashboard\", path: \"src/containers/certification-dashboard/certification-dashboard.tsx#certificationdashboard\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"sourceRoot":""}