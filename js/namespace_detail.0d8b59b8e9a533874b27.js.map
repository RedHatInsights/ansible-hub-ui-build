{"version":3,"sources":["webpack:///./src/containers/namespace-detail/namespace-detail.scss","webpack:///./src/containers/namespace-detail/import-modal/import-modal.scss","webpack:///./src/containers/namespace-detail/namespace-detail.scss?fc4b","webpack:///./src/containers/namespace-detail/import-modal/import-modal.scss?0d53","webpack:///./src/containers/edit-namespace/edit-namespace.tsx","webpack:///./src/containers/namespace-detail/import-modal/import-modal.tsx","webpack:///./src/containers/namespace-detail/namespace-detail.tsx"],"names":["module","exports","push","i","content","options","transform","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","props","params","parseParamString","location","search","state","alerts","namespace","userId","newLinkURL","newLinkName","errorMessages","saving","redirect","unsavedData","unauthorized","componentDidMount","getUser","then","result","setState","account_number","loadNamespace","render","this","to","breadcrumbs","name","url","myCollections","tabs","updateParams","p","closeAlert","className","tab","toLowerCase","updateNamespace","variant","onClick","saveNamespace","cancel","style","color","updateParamsMixin","get","match","response","data","links","catch","setLinks","link","error","status","concat","title","description","EditNamespace","editnamespace","displayName","__docgenInfo","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","Status","acceptedFileTypes","COLLECTION_NAME_REGEX","file","errors","uploadProgress","uploadStatus","waiting","isOpen","collection","Modal","onClose","handleClose","actions","Button","saveFile","isDisabled","canUpload","disabled","type","id","onChange","e","handleFileUpload","target","files","htmlFor","renderFileIcon","width","uploading","newCollection","length","includes","test","split","artifact","sha256","cancelToken","getCancelToken","upload","loaded","total","onUploadSuccess","errorMessage","isCancel","messages","err","detail","code","join","finally","_","msg","setOpen","nonAPIParams","nonQueryStringParams","collections","itemCount","showImportModal","warning","updateCollection","showControls","loadAll","Redirect","resources","repositoryUrl","noData","loadCollections","ignoredParams","history","myImports","warn","toggleImportModal","Alert","position","right","top","zIndex","actionClose","AlertActionCloseButton","pageControls","renderPageControls","contextSelector","selectedRepo","context","pathParams","filters","count","isTop","button","Section","handleControlClick","action","handleCollectionAction","repo","ClipboardCopy","isReadOnly","href","renderResources","find","x","setDeprecation","deprecated","source","list","getReduced","meta","Promise","all","reject","val","notFound","display","alignItems","items","DropdownItem","component","Link","editNamespace","newState","contextType","withRouter","namespacedetail"],"mappings":"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","file":"js/namespace_detail.0d8b59b8e9a533874b27.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".namespace-detail .pf-c-toolbar__content{padding-left:0px}\", \"\"]);\n\n","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".upload-collection .file-error-messages{color:#c00}.upload-collection .upload-file{width:.1px;height:.1px;opacity:0;overflow:hidden;position:absolute;z-index:-1}.upload-collection .upload-file-label{display:inline-block;cursor:pointer;width:100%;font-weight:normal}.upload-collection .upload-file-label .upload-box{display:flex;border-style:solid;border-width:thin;width:100%;border-radius:3px}.upload-collection .upload-file-label .upload-box .upload-button,.upload-collection .upload-file-label .upload-box .upload-text{padding:5px}.upload-collection .upload-file-label .upload-box .upload-button{border-right:thin solid;padding-left:10px;padding-right:10px}.upload-collection .upload-file-label .upload-box .upload-button:hover{color:#fff;background-color:gray}.upload-collection .upload-file-label .upload-box .upload-text{position:relative;width:100%}.upload-collection .upload-file-label .upload-box .loading-bar{position:absolute;height:3px;background-color:#5bb75b;bottom:0px;left:0px}\", \"\"]);\n\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./namespace-detail.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./namespace-detail.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./namespace-detail.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./import-modal.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./import-modal.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./import-modal.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\n\nimport { Section, Spinner } from '@redhat-cloud-services/frontend-components';\nimport { withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\n\nimport {\n  PartnerHeader,\n  NamespaceForm,\n  ResourcesForm,\n  AlertList,\n  closeAlertMixin,\n  AlertType,\n  Main,\n  EmptyStateUnauthorized,\n} from 'src/components';\nimport {\n  MyNamespaceAPI,\n  NamespaceType,\n  ActiveUserAPI,\n  NamespaceLinkType,\n} from 'src/api';\n\nimport { Form, ActionGroup, Button } from '@patternfly/react-core';\n\nimport { formatPath, namespaceBreadcrumb, Paths } from 'src/paths';\nimport { ParamHelper, mapErrorMessages } from 'src/utilities';\n\ninterface IState {\n  namespace: NamespaceType;\n  newLinkName: string;\n  newLinkURL: string;\n  errorMessages: any;\n  saving: boolean;\n  redirect: string;\n  unsavedData: boolean;\n  alerts: AlertType[];\n  params: {\n    tab?: string;\n  };\n  userId: string;\n  unauthorized: boolean;\n}\n\nclass EditNamespace extends React.Component<RouteComponentProps, IState> {\n  queryParams: URLSearchParams;\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search);\n\n    if (!params['tab']) {\n      params['tab'] = 'edit details';\n    }\n\n    this.state = {\n      alerts: [],\n      namespace: null,\n      userId: '',\n      newLinkURL: '',\n      newLinkName: '',\n      errorMessages: {},\n      saving: false,\n      redirect: null,\n      unsavedData: false,\n      params: params,\n      unauthorized: false,\n    };\n  }\n\n  componentDidMount() {\n    ActiveUserAPI.getUser().then(result => {\n      this.setState({ userId: result.account_number }, () =>\n        this.loadNamespace(),\n      );\n    });\n  }\n\n  render() {\n    const {\n      namespace,\n      errorMessages,\n      saving,\n      redirect,\n      params,\n      userId,\n      unauthorized,\n    } = this.state;\n\n    if (!namespace) {\n      return null;\n    }\n\n    if (redirect) {\n      return <Redirect to={redirect} />;\n    }\n    return (\n      <React.Fragment>\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={[\n            namespaceBreadcrumb,\n            {\n              name: namespace.name,\n              url: formatPath(Paths.myCollections, {\n                namespace: namespace.name,\n              }),\n            },\n            { name: 'Edit' },\n          ]}\n          tabs={['Edit details', 'Edit resources']}\n          params={params}\n          updateParams={p => this.updateParams(p)}\n        ></PartnerHeader>\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={i => this.closeAlert(i)}\n        />\n        {unauthorized ? (\n          <EmptyStateUnauthorized />\n        ) : (\n          <Main>\n            <Section className='body'>\n              {params.tab.toLowerCase() === 'edit details' ? (\n                <NamespaceForm\n                  userId={userId}\n                  namespace={namespace}\n                  errorMessages={errorMessages}\n                  updateNamespace={namespace =>\n                    this.setState({\n                      namespace: namespace,\n                      unsavedData: true,\n                    })\n                  }\n                />\n              ) : (\n                <ResourcesForm\n                  updateNamespace={namespace =>\n                    this.setState({\n                      namespace: namespace,\n                      unsavedData: true,\n                    })\n                  }\n                  namespace={namespace}\n                />\n              )}\n              <Form>\n                <ActionGroup>\n                  <Button\n                    variant='primary'\n                    onClick={() => this.saveNamespace()}\n                  >\n                    Save\n                  </Button>\n                  <Button variant='secondary' onClick={() => this.cancel()}>\n                    Cancel\n                  </Button>\n\n                  {saving ? <Spinner></Spinner> : null}\n                </ActionGroup>\n                {this.state.unsavedData ? (\n                  <div style={{ color: 'red' }}>You have unsaved changes</div>\n                ) : null}\n              </Form>\n            </Section>\n          </Main>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n\n  private loadNamespace() {\n    MyNamespaceAPI.get(this.props.match.params['namespace'])\n      .then(response => {\n        // Add an empty link to the end of the links array to create an empty field\n        // on the link edit form for adding new links\n        const emptyLink: NamespaceLinkType = { name: '', url: '' };\n        response.data.links.push(emptyLink);\n        this.setState({ namespace: response.data });\n      })\n      .catch(response => {\n        this.setState({ unauthorized: true });\n      });\n  }\n\n  private saveNamespace() {\n    this.setState({ saving: true }, () => {\n      const namespace = { ...this.state.namespace };\n      const setLinks: NamespaceLinkType[] = [];\n\n      // remove any empty links from the list before saving\n      for (const link of namespace.links) {\n        if (link.url !== '' || link.name !== '') {\n          setLinks.push(link);\n        }\n      }\n\n      namespace.links = setLinks;\n\n      MyNamespaceAPI.update(this.state.namespace.name, namespace)\n        .then(result => {\n          this.setState({\n            namespace: result.data,\n            errorMessages: {},\n            saving: false,\n            unsavedData: false,\n            redirect: formatPath(Paths.myCollections, {\n              namespace: this.state.namespace.name,\n            }),\n          });\n        })\n        .catch(error => {\n          const result = error.response;\n          if (result.status === 400) {\n            this.setState({\n              errorMessages: mapErrorMessages(error),\n              saving: false,\n            });\n          } else if (result.status === 404) {\n            this.setState({\n              alerts: this.state.alerts.concat({\n                variant: 'danger',\n                title: `API Error: ${error.response.status}`,\n                description: `You don't have permissions to update this namespace.`,\n              }),\n              saving: false,\n            });\n          }\n        });\n    });\n  }\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private cancel() {\n    this.setState({\n      redirect: formatPath(Paths.myCollections, {\n        namespace: this.state.namespace.name,\n      }),\n    });\n  }\n}\n\nexport default withRouter(EditNamespace);\ntry {\n    // @ts-ignore\n    editnamespace.displayName = \"editnamespace\";\n    // @ts-ignore\n    editnamespace.__docgenInfo = { \"description\": \"\", \"displayName\": \"editnamespace\", \"props\": { \"wrappedComponentRef\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"wrappedComponentRef\", \"required\": false, \"type\": { \"name\": \"Ref<EditNamespace>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/edit-namespace/edit-namespace.tsx#editnamespace\"] = { docgenInfo: editnamespace.__docgenInfo, name: \"editnamespace\", path: \"src/containers/edit-namespace/edit-namespace.tsx#editnamespace\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport './import-modal.scss';\nimport axios from 'axios';\n\nimport { Modal, Button } from '@patternfly/react-core';\nimport { FolderOpenIcon, SpinnerIcon } from '@patternfly/react-icons';\n\nimport {\n  CollectionListType,\n  CollectionAPI,\n  CollectionUploadType,\n} from 'src/api';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionListType;\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  uploadProgress: number;\n  uploadStatus: Status;\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: any;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+\\-[0-9a-z_]+\\-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n    };\n  }\n  render() {\n    const { isOpen, collection } = this.props;\n\n    const { file, errors, uploadProgress, uploadStatus } = this.state;\n    return (\n      <Modal\n        variant='small'\n        title={\n          collection ? 'New version of ' + collection.name : 'New collection'\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={!this.canUpload()}\n          >\n            Upload\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            Cancel\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={e => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : 'Select file'}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className='file-error-messages'>\n              <i className='pficon-error-circle-o' /> {errors}\n            </span>\n          ) : null}\n        </div>\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors) {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin'></SpinnerIcon>;\n      default:\n        return <FolderOpenIcon></FolderOpenIcon>;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: 'Please select no more than one file.',\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      this.setState({\n        errors: 'Invalid file format.',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: `Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: `The collection you have selected doesn't appear to match ${collection.name}`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: `The collection you have selected does not match this namespace.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  saveFile() {\n    this.setState({ uploadStatus: Status.uploading });\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      'inbound-' + this.props.namespace,\n      artifact,\n      e => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then(response => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch(errors => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (let err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  'API error. Status code: ' + err.status,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = 'API error. Status code: ' + errors.response.status;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n        });\n      })\n      .finally(_ => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = 'Collection upload canceled';\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\ntry {\n    // @ts-ignore\n    ImportModal.displayName = \"ImportModal\";\n    // @ts-ignore\n    ImportModal.__docgenInfo = { \"description\": \"\", \"displayName\": \"ImportModal\", \"props\": { \"isOpen\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isOpen\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"setOpen\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"setOpen\", \"required\": true, \"type\": { \"name\": \"(isOpen: any, warnings?: any) => void\" } }, \"onUploadSuccess\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onUploadSuccess\", \"required\": true, \"type\": { \"name\": \"(result: any) => void\" } }, \"collection\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"collection\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"namespace\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"namespace\", \"required\": true, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/namespace-detail/import-modal/import-modal.tsx#ImportModal\"] = { docgenInfo: ImportModal.__docgenInfo, name: \"ImportModal\", path: \"src/containers/namespace-detail/import-modal/import-modal.tsx#ImportModal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport './namespace-detail.scss';\n\nimport {\n  withRouter,\n  RouteComponentProps,\n  Link,\n  Redirect,\n} from 'react-router-dom';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  ClipboardCopy,\n  DropdownItem,\n} from '@patternfly/react-core';\n\nimport * as ReactMarkdown from 'react-markdown';\n\nimport {\n  CollectionListType,\n  CollectionAPI,\n  NamespaceAPI,\n  MyNamespaceAPI,\n  NamespaceType,\n} from 'src/api';\n\nimport {\n  CollectionList,\n  CollectionFilter,\n  EmptyStateNoData,\n  LoadingPageWithHeader,\n  Main,\n  Pagination,\n  PartnerHeader,\n  RepoSelector,\n  StatefulDropdown,\n} from 'src/components';\n\nimport { ImportModal } from './import-modal/import-modal';\n\nimport { ParamHelper, getRepoUrl, filterIsSet } from 'src/utilities';\nimport { formatPath, namespaceBreadcrumb, Paths } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IState {\n  collections: CollectionListType[];\n  namespace: NamespaceType;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n    tab?: string;\n    keywords?: string;\n    namespace?: string;\n  };\n  redirect: string;\n  itemCount: number;\n  showImportModal: boolean;\n  warning: string;\n  updateCollection: CollectionListType;\n  showControls: boolean;\n}\n\ninterface IProps extends RouteComponentProps {\n  selectedRepo: string;\n}\n\nexport class NamespaceDetail extends React.Component<IProps, IState> {\n  nonAPIParams = ['tab'];\n\n  // namespace is a positional url argument, so don't include it in the\n  // query params\n  nonQueryStringParams = ['namespace'];\n\n  constructor(props) {\n    super(props);\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['namespace'] = props.match.params['namespace'];\n\n    this.state = {\n      collections: [],\n      namespace: null,\n      params: params,\n      redirect: null,\n      itemCount: 0,\n      showImportModal: false,\n      warning: '',\n      updateCollection: null,\n      showControls: false, // becomes true when my-namespaces doesn't 404\n    };\n  }\n\n  componentDidMount() {\n    this.loadAll();\n  }\n\n  render() {\n    const {\n      collections,\n      namespace,\n      params,\n      redirect,\n      itemCount,\n      showImportModal,\n      warning,\n      updateCollection,\n    } = this.state;\n\n    if (redirect) {\n      return <Redirect to={redirect} />;\n    }\n\n    if (!namespace) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const tabs = ['Collections'];\n\n    if (this.state.showControls) {\n      tabs.push('CLI Configuration');\n    }\n    const tab = params['tab'] || 'collections';\n\n    if (namespace.resources) {\n      tabs.push('Resources');\n    }\n\n    const repositoryUrl = getRepoUrl('inbound-' + namespace.name);\n\n    const noData = itemCount === 0 && !filterIsSet(params, ['keywords']);\n\n    const updateParams = params =>\n      this.updateParams(params, () => this.loadCollections());\n\n    const ignoredParams = [\n      'namespace',\n      'page',\n      'page_size',\n      'sort',\n      'tab',\n      'view_type',\n    ];\n\n    return (\n      <React.Fragment>\n        <ImportModal\n          isOpen={showImportModal}\n          onUploadSuccess={result =>\n            this.props.history.push(\n              formatPath(\n                Paths.myImports,\n                {},\n                {\n                  namespace: namespace.name,\n                },\n              ),\n            )\n          }\n          // onCancel\n          setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n          collection={updateCollection}\n          namespace={namespace.name}\n        />\n        {warning ? (\n          <Alert\n            style={{\n              position: 'fixed',\n              right: '5px',\n              top: '80px',\n              zIndex: 300,\n            }}\n            variant='warning'\n            title={warning}\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => this.setState({ warning: '' })}\n              />\n            }\n          ></Alert>\n        ) : null}\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={[namespaceBreadcrumb, { name: namespace.name }]}\n          tabs={tabs}\n          params={params}\n          updateParams={p => this.updateParams(p)}\n          pageControls={this.renderPageControls()}\n          contextSelector={\n            <RepoSelector\n              selectedRepo={this.context.selectedRepo}\n              path={this.props.match.path as any} // Paths.namespaceByRepo or Paths.myCollectionsByRepo\n              pathParams={{ namespace: namespace.name }}\n            />\n          }\n          filters={\n            tab.toLowerCase() === 'collections' ? (\n              <div className='toolbar-wrapper namespace-detail'>\n                <div className='toolbar'>\n                  <CollectionFilter\n                    ignoredParams={ignoredParams}\n                    params={params}\n                    updateParams={updateParams}\n                  />\n\n                  <div className='pagination-container'>\n                    <Pagination\n                      params={params}\n                      updateParams={updateParams}\n                      count={itemCount}\n                      isTop\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : null\n          }\n        ></PartnerHeader>\n        <Main>\n          {tab.toLowerCase() === 'collections' ? (\n            noData ? (\n              <EmptyStateNoData\n                title={'No collections yet'}\n                description={'Collections will appear once uploaded'}\n                button={\n                  this.state.showControls && (\n                    <Button\n                      onClick={() => this.setState({ showImportModal: true })}\n                    >\n                      Upload collection\n                    </Button>\n                  )\n                }\n              />\n            ) : (\n              <Section className='body'>\n                <CollectionList\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                  collections={collections}\n                  itemCount={itemCount}\n                  showControls={this.state.showControls}\n                  handleControlClick={(id, action) =>\n                    this.handleCollectionAction(id, action)\n                  }\n                  repo={this.context.selectedRepo}\n                />\n              </Section>\n            )\n          ) : null}\n          {tab.toLowerCase() === 'cli configuration' ? (\n            <Section className='body'>\n              <div>\n                <ClipboardCopy isReadOnly>{repositoryUrl}</ClipboardCopy>\n                <div>\n                  <b>Note:</b> Use this URL to configure ansible-galaxy to\n                  upload collections to this namespace. More information on\n                  ansible-galaxy configurations can be found{' '}\n                  <a\n                    href='https://docs.ansible.com/ansible/latest/galaxy/user_guide.html#configuring-the-ansible-galaxy-client'\n                    target='_blank'\n                  >\n                    here\n                  </a>\n                  .\n                </div>\n              </div>\n            </Section>\n          ) : null}\n          {tab.toLowerCase() === 'resources'\n            ? this.renderResources(namespace)\n            : null}\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private handleCollectionAction(id, action) {\n    const collection = this.state.collections.find(x => x.id === id);\n\n    switch (action) {\n      case 'upload':\n        this.setState({\n          updateCollection: collection,\n          showImportModal: true,\n        });\n        break;\n      case 'deprecate':\n        CollectionAPI.setDeprecation(\n          collection,\n          !collection.deprecated,\n          this.context.selectedRepo,\n        )\n          .then(() => this.loadCollections())\n          .catch(error => {\n            this.setState({\n              warning: 'API Error: Failed to set deprecation.',\n            });\n          });\n        break;\n    }\n  }\n\n  private renderResources(namespace: NamespaceType) {\n    return (\n      <div className='pf-c-content preview'>\n        <ReactMarkdown source={namespace.resources} />\n      </div>\n    );\n  }\n\n  private loadCollections() {\n    CollectionAPI.list(\n      {\n        ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n      },\n      this.context.selectedRepo,\n    ).then(result => {\n      this.setState({\n        collections: result.data.data,\n        itemCount: result.data.meta.count,\n      });\n    });\n  }\n\n  private loadAll() {\n    Promise.all([\n      CollectionAPI.list(\n        {\n          ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n        },\n        this.context.selectedRepo,\n      ),\n      NamespaceAPI.get(this.props.match.params['namespace']),\n      MyNamespaceAPI.get(this.props.match.params['namespace']).catch(\n        // expecting 404 - it just means we can not edit the namespace (unless both NamespaceAPI and MyNamespaceAPI fail)\n        e =>\n          e.response && e.response.status === 404 ? null : Promise.reject(e),\n      ),\n    ])\n      .then(val => {\n        this.setState({\n          collections: val[0].data.data,\n          itemCount: val[0].data.meta.count,\n          namespace: val[1].data,\n          showControls: !!val[2],\n        });\n      })\n      .catch(response => {\n        this.setState({ redirect: Paths.notFound });\n      });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonQueryStringParams);\n  }\n\n  private renderPageControls() {\n    const { collections } = this.state;\n    if (!this.state.showControls) {\n      return <div style={{ display: 'flex', alignItems: 'center' }}></div>;\n    }\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        {' '}\n        {collections.length !== 0 && (\n          <Button onClick={() => this.setState({ showImportModal: true })}>\n            Upload collection\n          </Button>\n        )}\n        <StatefulDropdown\n          items={[\n            <DropdownItem\n              key='1'\n              component={\n                <Link\n                  to={formatPath(Paths.editNamespace, {\n                    namespace: this.state.namespace.name,\n                  })}\n                >\n                  Edit namespace\n                </Link>\n              }\n            />,\n            <DropdownItem\n              key='2'\n              component={\n                <Link\n                  to={formatPath(\n                    Paths.myImports,\n                    {},\n                    {\n                      namespace: this.state.namespace.name,\n                    },\n                  )}\n                >\n                  Imports\n                </Link>\n              }\n            />,\n          ]}\n        />\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    const newState = { showImportModal: isOpen };\n    if (warning) {\n      newState['warning'] = warning;\n    }\n\n    if (!isOpen) {\n      newState['updateCollection'] = null;\n    }\n\n    this.setState(newState);\n  }\n}\n\nNamespaceDetail.contextType = AppContext;\n\nexport default withRouter(NamespaceDetail);\ntry {\n    // @ts-ignore\n    NamespaceDetail.displayName = \"NamespaceDetail\";\n    // @ts-ignore\n    NamespaceDetail.__docgenInfo = { \"description\": \"\", \"displayName\": \"NamespaceDetail\", \"props\": { \"selectedRepo\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selectedRepo\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"history\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"history\", \"required\": true, \"type\": { \"name\": \"History<unknown>\" } }, \"location\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"location\", \"required\": true, \"type\": { \"name\": \"Location<unknown>\" } }, \"match\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"match<{}>\" } }, \"staticContext\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"staticContext\", \"required\": false, \"type\": { \"name\": \"StaticContext\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/namespace-detail/namespace-detail.tsx#NamespaceDetail\"] = { docgenInfo: NamespaceDetail.__docgenInfo, name: \"NamespaceDetail\", path: \"src/containers/namespace-detail/namespace-detail.tsx#NamespaceDetail\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    namespacedetail.displayName = \"namespacedetail\";\n    // @ts-ignore\n    namespacedetail.__docgenInfo = { \"description\": \"\", \"displayName\": \"namespacedetail\", \"props\": { \"wrappedComponentRef\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"wrappedComponentRef\", \"required\": false, \"type\": { \"name\": \"Ref<NamespaceDetail>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/namespace-detail/namespace-detail.tsx#namespacedetail\"] = { docgenInfo: namespacedetail.__docgenInfo, name: \"namespacedetail\", path: \"src/containers/namespace-detail/namespace-detail.tsx#namespacedetail\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"sourceRoot":""}