{"version":3,"file":"js/7429.d34e66f20837091d918f.js","mappings":"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","sources":["webpack://automationHub/./src/containers/namespace-detail/namespace-detail.tsx"],"sourcesContent":["import { Trans, t } from '@lingui/macro';\nimport { Button, Checkbox, DropdownItem, Text } from '@patternfly/react-core';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Link, Navigate } from 'react-router-dom';\nimport {\n  CollectionAPI,\n  CollectionVersionAPI,\n  CollectionVersionSearch,\n  GroupType,\n  MyNamespaceAPI,\n  NamespaceAPI,\n  NamespaceType,\n  RoleType,\n  SignCollectionAPI,\n} from 'src/api';\nimport {\n  AccessTab,\n  AlertList,\n  AlertType,\n  ClipboardCopy,\n  CollectionDropdown,\n  CollectionList,\n  DeleteCollectionModal,\n  DeleteModal,\n  EmptyStateNoData,\n  ExternalLink,\n  HubListToolbar,\n  ImportModal,\n  LoadingPageWithHeader,\n  Main,\n  PartnerHeader,\n  SignAllCertificatesModal,\n  StatefulDropdown,\n  WisdomModal,\n  closeAlertMixin,\n  collectionFilter,\n} from 'src/components';\nimport { AppContext } from 'src/loaders/app-context';\nimport { Paths, formatPath, namespaceBreadcrumb } from 'src/paths';\nimport {\n  DeleteCollectionUtils,\n  ParamHelper,\n  RouteProps,\n  canSignNamespace,\n  errorMessage,\n  filterIsSet,\n  getRepoURL,\n  parsePulpIDFromURL,\n  waitForTask,\n  withRouter,\n} from 'src/utilities';\n\ninterface UserType {\n  username: string;\n  object_roles: string[];\n}\n\ninterface IState {\n  alerts: AlertType[];\n  canSign: boolean;\n  collections: CollectionVersionSearch[];\n  confirmDelete: boolean;\n  deleteAll: boolean;\n  deleteCollection: CollectionVersionSearch;\n  filteredCount: number;\n  group: GroupType;\n  user: UserType;\n  isDeletionPending: boolean;\n  isNamespacePending: boolean;\n  isOpenNamespaceModal: boolean;\n  isOpenSignModal: boolean;\n  isOpenWisdomModal: boolean;\n  namespace: NamespaceType;\n  params: {\n    group?: string;\n    keywords?: string;\n    namespace?: string;\n    page?: number;\n    page_size?: number;\n    repository_name?: string;\n    sort?: string;\n    tab?: string;\n    user?: string;\n  };\n  redirect: string;\n  showControls: boolean;\n  showUserRemoveModal?: UserType;\n  showUserSelectWizard?: { user?: UserType; roles?: RoleType[] };\n  showGroupRemoveModal?: GroupType;\n  showGroupSelectWizard?: { group?: GroupType; roles?: RoleType[] };\n  showImportModal: boolean;\n  showRoleRemoveModal?: string;\n  showRoleSelectWizard?: { roles?: RoleType[] };\n  unfilteredCount: number;\n  updateCollection: CollectionVersionSearch;\n}\n\nexport class NamespaceDetail extends React.Component<RouteProps, IState> {\n  nonAPIParams = ['tab', 'group', 'user'];\n\n  // namespace is a positional url argument, so don't include it in the\n  // query params\n  nonQueryStringParams = ['namespace'];\n\n  constructor(props) {\n    super(props);\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]) as IState['params'];\n\n    params.namespace = props.routeParams.namespace;\n    if (props.routeParams.repo && !params.repository_name) {\n      params.repository_name = props.routeParams.repo;\n    }\n\n    this.state = {\n      alerts: [],\n      canSign: false,\n      collections: [],\n      confirmDelete: false,\n      deleteAll: true,\n      deleteCollection: null,\n      filteredCount: 0,\n      group: null,\n      user: null,\n      isDeletionPending: false,\n      isNamespacePending: false,\n      isOpenNamespaceModal: false,\n      isOpenSignModal: false,\n      isOpenWisdomModal: false,\n      namespace: null,\n      params,\n      redirect: null,\n      showControls: false, // becomes true when my-namespaces doesn't 404\n      showGroupRemoveModal: null,\n      showGroupSelectWizard: null,\n      showImportModal: false,\n      showRoleRemoveModal: null,\n      showRoleSelectWizard: null,\n      unfilteredCount: 0,\n      updateCollection: null,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n\n    this.setState({ alerts: this.context.alerts || [] });\n    this.context.setAlerts([]);\n  }\n\n  componentDidUpdate(prevProps) {\n    const params = ParamHelper.parseParamString(this.props.location.search, [\n      'page',\n      'page_size',\n    ]) as IState['params'];\n\n    if (prevProps.location.search !== this.props.location.search) {\n      params.namespace = this.props.routeParams.namespace;\n\n      this.setState({\n        params,\n        group: this.filterGroup(params.group, this.state.namespace.groups),\n        user: this.filterUser(params.user, this.state.namespace.users),\n      });\n    }\n\n    if (\n      prevProps.routeParams.repo !== this.props.routeParams.repo &&\n      this.props.routeParams.repo &&\n      (!params.repository_name ||\n        params.repository_name === prevProps.routeParams.repo)\n    ) {\n      params.repository_name = this.props.routeParams.repo;\n      this.setState({ params });\n    }\n  }\n\n  filterUser(username, users) {\n    return username\n      ? users.find((u) => u.name === username || u.username === username)\n      : null;\n  }\n\n  filterGroup(name, groups) {\n    return name ? groups.find((g) => g.name === name) : null;\n  }\n\n  private updateRoles({\n    users = null,\n    groups = null,\n    alertSuccess,\n    alertFailure,\n    stateUpdate,\n  }) {\n    const { name } = this.state.namespace;\n    MyNamespaceAPI.update(name, {\n      ...this.state.namespace,\n      users: users || this.state.namespace.users,\n      groups: groups || this.state.namespace.groups,\n    })\n      .then(() => {\n        this.addAlert({\n          title: alertSuccess,\n          variant: 'success',\n        });\n        this.load(); // ensure reload() sets users/groups: null to trigger loading spinner\n      })\n      .catch(({ response: { status, statusText } }) => {\n        this.addAlert({\n          title: alertFailure,\n          variant: 'danger',\n          description: errorMessage(status, statusText),\n        });\n      })\n      .finally(() => {\n        this.setState(stateUpdate);\n      });\n  }\n\n  hasPerm(permission) {\n    const { namespace } = this.state;\n    const {\n      hasPermission,\n      user: { is_superuser },\n    } = this.context;\n\n    const hasObjectPermission = (permission) =>\n      namespace?.related_fields?.my_permissions?.includes?.(permission);\n\n    return (\n      hasPermission(permission) ||\n      hasObjectPermission(permission) ||\n      is_superuser\n    );\n  }\n\n  render() {\n    const {\n      alerts,\n      canSign,\n      collections,\n      confirmDelete,\n      deleteCollection,\n      filteredCount,\n      isDeletionPending,\n      isNamespacePending,\n      isOpenNamespaceModal,\n      isOpenWisdomModal,\n      namespace,\n      params,\n      redirect,\n      showControls,\n      showImportModal,\n      updateCollection,\n    } = this.state;\n    const { featureFlags } = this.context;\n    const { legacy_roles, display_signatures } = featureFlags;\n\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n\n    if (!namespace) {\n      return <LoadingPageWithHeader />;\n    }\n\n    const tabs = [\n      { id: 'collections', name: t`Collections` },\n      showControls && { id: 'cli-configuration', name: t`CLI configuration` },\n      namespace.resources && { id: 'resources', name: t`Resources` },\n      { id: 'access', name: t`Access` },\n      legacy_roles && { id: 'role-namespaces', name: t`Role namespaces` },\n    ].filter(Boolean);\n\n    const tab = params.tab || 'collections';\n    const { user, group } = params;\n\n    const breadcrumbs = [\n      namespaceBreadcrumb(),\n      {\n        name: namespace.name,\n        url:\n          tab === 'access'\n            ? formatPath(Paths.namespaceDetail, {\n                namespace: namespace.name,\n              })\n            : null,\n      },\n      tab === 'access' && (group || user)\n        ? {\n            url: formatPath(\n              Paths.namespaceDetail,\n              { namespace: namespace.name },\n              { tab },\n            ),\n            name: t`Access`,\n          }\n        : null,\n      tab === 'access' && group ? { name: t`Group ${group}` } : null,\n      tab === 'access' && user ? { name: t`User ${user}` } : null,\n      tab === 'access' && !user && !group ? { name: t`Access` } : null,\n    ].filter(Boolean);\n\n    const repositoryUrl = getRepoURL('published');\n\n    const noData =\n      filteredCount === 0 &&\n      !filterIsSet(params, [\n        'is_signed',\n        'keywords',\n        'repository_name',\n        'tags',\n      ]);\n\n    const updateParams = (params) =>\n      this.updateParams(params, () => this.loadCollections());\n\n    const ignoredParams = [\n      'namespace',\n      'page',\n      'page_size',\n      'sort',\n      'tab',\n      'group',\n      'user',\n      'view_type',\n    ];\n\n    const canEditOwners = this.hasPerm('galaxy.change_namespace');\n\n    // remove ?user/group (access tab) when switching tabs\n    const tabParams = { ...params };\n    delete tabParams.group;\n    delete tabParams.user;\n\n    const repository = params.repository_name || null;\n    const deleteFromRepo = this.state.deleteAll\n      ? null\n      : deleteCollection?.repository?.name;\n\n    return (\n      <>\n        <AlertList alerts={alerts} closeAlert={(i) => this.closeAlert(i)} />\n        <ImportModal\n          isOpen={showImportModal}\n          onUploadSuccess={() =>\n            this.setState({\n              redirect: formatPath(\n                Paths.myImports,\n                {},\n                {\n                  namespace: namespace.name,\n                },\n              ),\n            })\n          }\n          // onCancel\n          setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n          collection={updateCollection?.collection_version}\n          namespace={namespace.name}\n        />\n        <DeleteCollectionModal\n          deleteCollection={deleteCollection}\n          collections={collections}\n          isDeletionPending={isDeletionPending}\n          confirmDelete={confirmDelete}\n          setConfirmDelete={(confirmDelete) => this.setState({ confirmDelete })}\n          cancelAction={() => this.setState({ deleteCollection: null })}\n          deleteAction={() =>\n            this.setState({ isDeletionPending: true }, () =>\n              DeleteCollectionUtils.deleteCollection({\n                collection: deleteCollection,\n                setState: (state) => this.setState(state),\n                load: () => this.load(),\n                redirect: false,\n                addAlert: (alert) => this.addAlert(alert),\n                deleteFromRepo,\n              }),\n            )\n          }\n          deleteFromRepo={deleteFromRepo}\n        />\n        {isOpenNamespaceModal && (\n          <DeleteModal\n            spinner={isNamespacePending}\n            cancelAction={this.closeModal}\n            deleteAction={this.deleteNamespace}\n            title={t`Delete namespace?`}\n            isDisabled={!confirmDelete || isNamespacePending}\n          >\n            <Text style={{ paddingBottom: 'var(--pf-global--spacer--md)' }}>\n              <Trans>\n                Deleting <b>{namespace.name}</b> and its data will be lost.\n              </Trans>\n            </Text>\n            <Checkbox\n              isChecked={confirmDelete}\n              onChange={(val) => this.setState({ confirmDelete: val })}\n              label={t`I understand that this action cannot be undone.`}\n              id='delete_confirm'\n            />\n          </DeleteModal>\n        )}\n        {isOpenWisdomModal && (\n          <WisdomModal\n            addAlert={(alert) => this.addAlert(alert)}\n            closeAction={() => this.setState({ isOpenWisdomModal: false })}\n            scope={'namespace'}\n            reference={this.state.namespace.name}\n          />\n        )}\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={breadcrumbs}\n          tabs={tabs}\n          params={tabParams}\n          updateParams={(p) => this.updateParams(p)}\n          pageControls={this.renderPageControls()}\n        />\n        {tab === 'collections' ? (\n          <HubListToolbar\n            count={filteredCount}\n            ignoredParams={ignoredParams}\n            params={params}\n            updateParams={updateParams}\n            {...collectionFilter({\n              featureFlags,\n              ignoredParams,\n            })}\n          />\n        ) : null}\n        <Main>\n          {tab === 'collections' ? (\n            noData ? (\n              <EmptyStateNoData\n                title={t`No collections yet`}\n                description={t`Collections will appear once uploaded`}\n                button={\n                  this.state.showControls && (\n                    <Button\n                      onClick={() => this.setState({ showImportModal: true })}\n                    >{t`Upload collection`}</Button>\n                  )\n                }\n              />\n            ) : (\n              <section className='body'>\n                <CollectionList\n                  updateParams={updateParams}\n                  params={params}\n                  ignoredParams={ignoredParams}\n                  collections={collections}\n                  itemCount={filteredCount}\n                  displaySignatures={display_signatures}\n                  collectionControls={(collection) =>\n                    this.renderCollectionControls(collection)\n                  }\n                />\n              </section>\n            )\n          ) : null}\n          {tab === 'cli-configuration' ? (\n            <section className='body'>\n              <div>\n                <div>\n                  <Trans>\n                    <b>Note:</b> Use this URL to configure ansible-galaxy to\n                    upload collections to this namespace. More information on\n                    ansible-galaxy configurations can be found{' '}\n                    <ExternalLink href='https://docs.ansible.com/ansible/latest/galaxy/user_guide.html#configuring-the-ansible-galaxy-client'>\n                      here\n                    </ExternalLink>\n                    .\n                  </Trans>\n                </div>\n                <ClipboardCopy isReadOnly>{repositoryUrl}</ClipboardCopy>\n              </div>\n            </section>\n          ) : null}\n          {tab === 'resources' ? this.renderResources(namespace) : null}\n          {tab === 'access' ? (\n            <section className='body'>\n              <AccessTab\n                showUserRemoveModal={this.state.showUserRemoveModal}\n                showUserSelectWizard={this.state.showUserSelectWizard}\n                showGroupRemoveModal={this.state.showGroupRemoveModal}\n                showGroupSelectWizard={this.state.showGroupSelectWizard}\n                showRoleRemoveModal={this.state.showRoleRemoveModal}\n                showRoleSelectWizard={this.state.showRoleSelectWizard}\n                canEditOwners={canEditOwners}\n                group={this.state.group}\n                groups={namespace.groups}\n                user={this.state.user}\n                users={namespace.users}\n                name={namespace.name}\n                pulpObjectType='pulp_ansible/namespaces'\n                selectRolesMessage={t`The selected roles will be added to this specific namespace.`}\n                updateProps={(prop) => {\n                  this.setState(prop);\n                }}\n                addUser={(user, roles) => {\n                  const { users, name } = namespace;\n                  const newUser = {\n                    ...user,\n                    object_roles: roles.map(({ name }) => name),\n                  };\n                  const newUsers = [...users, newUser];\n\n                  this.updateRoles({\n                    users: newUsers,\n                    alertSuccess: t`User \"${user.username}\" has been successfully added to \"${name}\".`,\n                    alertFailure: t`User \"${user.username}\" could not be added to \"${name}\".`,\n                    stateUpdate: { showUserSelectWizard: null },\n                  });\n                }}\n                removeUser={(user) => {\n                  const { name, users } = namespace;\n                  const newUsers = users.filter((u) => u !== user);\n                  this.updateRoles({\n                    users: newUsers,\n                    alertSuccess: t`User \"${user.username}\" has been successfully removed from \"${name}\".`,\n                    alertFailure: t`User \"${user.username}\" could not be removed from \"${name}\".`,\n                    stateUpdate: { showUserRemoveModal: null },\n                  });\n                }}\n                addGroup={(group, roles) => {\n                  const { groups, name } = namespace;\n                  const newGroup = {\n                    ...group,\n                    object_roles: roles.map(({ name }) => name),\n                  };\n                  const newGroups = [...groups, newGroup];\n\n                  this.updateRoles({\n                    groups: newGroups,\n                    alertSuccess: t`Group \"${group.name}\" has been successfully added to \"${name}\".`,\n                    alertFailure: t`Group \"${group.name}\" could not be added to \"${name}\".`,\n                    stateUpdate: { showGroupSelectWizard: null },\n                  });\n                }}\n                removeGroup={(group) => {\n                  const { name, groups } = namespace;\n                  const newGroups = groups.filter((g) => g !== group);\n                  this.updateRoles({\n                    groups: newGroups,\n                    alertSuccess: t`Group \"${group.name}\" has been successfully removed from \"${name}\".`,\n                    alertFailure: t`Group \"${group.name}\" could not be removed from \"${name}\".`,\n                    stateUpdate: { showGroupRemoveModal: null },\n                  });\n                }}\n                addUserRole={(user, roles) => {\n                  const { name, users } = namespace;\n                  const newUser = {\n                    ...user,\n                    object_roles: [\n                      ...user.object_roles,\n                      ...roles.map(({ name }) => name),\n                    ],\n                  };\n                  const newUsers = users.map((u) => (u === user ? newUser : u));\n\n                  this.updateRoles({\n                    users: newUsers,\n                    alertSuccess: t`User \"${user.username}\" roles successfully updated in \"${name}\".`,\n                    alertFailure: t`User \"${user.username}\" roles could not be update in \"${name}\".`,\n                    stateUpdate: { showRoleSelectWizard: null },\n                  });\n                }}\n                removeUserRole={(role, user) => {\n                  const { name, users } = namespace;\n                  const newUser = {\n                    ...user,\n                    object_roles: user.object_roles.filter(\n                      (name) => name !== role,\n                    ),\n                  };\n                  const newUsers = users.map((u) => (u === user ? newUser : u));\n\n                  this.updateRoles({\n                    users: newUsers,\n                    alertSuccess: t`User \"${user.username}\" roles successfully updated in \"${name}\".`,\n                    alertFailure: t`User \"${user.username}\" roles could not be update in \"${name}\".`,\n                    stateUpdate: { showRoleRemoveModal: null },\n                  });\n                }}\n                addRole={(group, roles) => {\n                  const { name, groups } = namespace;\n                  const newGroup = {\n                    ...group,\n                    object_roles: [\n                      ...group.object_roles,\n                      ...roles.map(({ name }) => name),\n                    ],\n                  };\n                  const newGroups = groups.map((g) =>\n                    g === group ? newGroup : g,\n                  );\n\n                  this.updateRoles({\n                    groups: newGroups,\n                    alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                    alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                    stateUpdate: { showRoleSelectWizard: null },\n                  });\n                }}\n                removeRole={(role, group) => {\n                  const { name, groups } = namespace;\n                  const newGroup = {\n                    ...group,\n                    object_roles: group.object_roles.filter(\n                      (name) => name !== role,\n                    ),\n                  };\n                  const newGroups = groups.map((g) =>\n                    g === group ? newGroup : g,\n                  );\n\n                  this.updateRoles({\n                    groups: newGroups,\n                    alertSuccess: t`Group \"${group.name}\" roles successfully updated in \"${name}\".`,\n                    alertFailure: t`Group \"${group.name}\" roles could not be update in \"${name}\".`,\n                    stateUpdate: { showRoleRemoveModal: null },\n                  });\n                }}\n                urlPrefix={formatPath(Paths.namespaceDetail, {\n                  namespace: namespace.name,\n                })}\n              />\n            </section>\n          ) : null}\n          {tab === 'role-namespaces' ? (\n            <Navigate\n              replace\n              to={formatPath(\n                Paths.standaloneNamespaces,\n                {},\n                { provider: namespace.name },\n              )}\n            />\n          ) : null}\n        </Main>\n        {canSign && (\n          <SignAllCertificatesModal\n            name={this.state.namespace.name}\n            isOpen={this.state.isOpenSignModal}\n            onSubmit={() => this.signAllCertificates(namespace, repository)}\n            onCancel={() => this.setState({ isOpenSignModal: false })}\n          />\n        )}\n      </>\n    );\n  }\n\n  private handleCollectionAction(pulp_href, action) {\n    const collection = this.state.collections.find(\n      (c) => c.collection_version.pulp_href === pulp_href,\n    );\n    const { name } = collection.collection_version;\n\n    switch (action) {\n      case 'upload':\n        this.setState({\n          updateCollection: collection,\n          showImportModal: true,\n        });\n        break;\n      case 'deprecate':\n        this.addAlert({\n          variant: 'info',\n          title: t`Deprecation status update starting for collection \"${name}\".`,\n        });\n        CollectionAPI.setDeprecation(collection)\n          .then((result) => {\n            const taskId = parsePulpIDFromURL(result.data.task);\n            return waitForTask(taskId).then(() => {\n              const title = collection.is_deprecated\n                ? t`Collection \"${name}\" has been successfully undeprecated.`\n                : t`Collection \"${name}\" has been successfully deprecated.`;\n              this.addAlert({\n                title,\n                variant: 'success',\n              });\n              return this.loadCollections();\n            });\n          })\n          .catch(() => {\n            this.addAlert({\n              title: t`API Error: Failed to set deprecation.`,\n              variant: 'warning',\n            });\n          });\n        break;\n    }\n  }\n\n  private renderResources(namespace: NamespaceType) {\n    return (\n      <div className='pf-c-content preview'>\n        <ReactMarkdown>{namespace.resources}</ReactMarkdown>\n      </div>\n    );\n  }\n\n  private signAllCertificates(namespace: NamespaceType, repository: string) {\n    const errorAlert = (status: string | number = 500): AlertType => ({\n      variant: 'danger',\n      title: t`Failed to sign all collections.`,\n      description: t`API Error: ${status}`,\n    });\n\n    SignCollectionAPI.sign({\n      signing_service: this.context.settings.GALAXY_COLLECTION_SIGNING_SERVICE,\n      repository_name: repository,\n      namespace: namespace.name,\n    })\n      .then((result) => {\n        // FIXME: use taskAlert\n        this.addAlert({\n          id: 'loading-signing',\n          variant: 'success',\n          title: t`Signing started for all collections in namespace \"${namespace.name}\".`,\n        });\n        this.setState({\n          isOpenSignModal: false,\n        });\n\n        waitForTask(result.data.task_id)\n          .then(() => {\n            this.loadCollections();\n          })\n          .catch((error) => {\n            this.addAlert(errorAlert(error));\n          })\n          .finally(() => {\n            this.setState({\n              alerts: this.state.alerts.filter(\n                (x) => x?.id !== 'loading-signing',\n              ),\n            });\n          });\n      })\n      .catch((error) => {\n        // The request failed in the first place\n        this.addAlert(errorAlert(error.response.status));\n        this.setState({\n          isOpenSignModal: false,\n        });\n      });\n  }\n\n  private loadAllCollections(params) {\n    return CollectionVersionAPI.list({\n      ...params,\n      is_highest: true,\n      namespace: this.props.routeParams.namespace,\n      repository_label: '!hide_from_search',\n    });\n  }\n\n  private loadCollections() {\n    return this.loadAllCollections(\n      ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n    ).then((result) => {\n      this.setState({\n        collections: result.data.data,\n        filteredCount: result.data.meta.count,\n      });\n    });\n  }\n\n  private load() {\n    Promise.all([\n      this.loadCollections(),\n      this.loadAllCollections({\n        page: 1,\n        page_size: 1,\n      }),\n      NamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }),\n      MyNamespaceAPI.get(this.props.routeParams.namespace, {\n        include_related: 'my_permissions',\n      }).catch((e) => {\n        // this needs fixing on backend to return nothing in these cases with 200 status\n        // if view only mode is enabled disregard errors and hope\n        if (\n          this.context.user.is_anonymous &&\n          this.context.settings.GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS\n        ) {\n          return null;\n        }\n\n        // expecting 404 - it just means we can not edit the namespace (unless both NamespaceAPI and MyNamespaceAPI fail)\n        return e.response && e.response.status === 404\n          ? null\n          : Promise.reject(e);\n      }),\n    ])\n      .then(\n        ([\n          _collections,\n          {\n            data: {\n              meta: { count: unfilteredCount },\n            },\n          },\n          { data: namespace },\n          myNamespace,\n        ]) => {\n          this.setState({\n            canSign: canSignNamespace(this.context, myNamespace?.data),\n            group: this.filterGroup(this.state.params.group, namespace.groups),\n            user: this.filterUser(this.state.params.user, namespace.users),\n            namespace: {\n              ...namespace,\n              // transform to use username, don't break when missing\n              users: namespace.users\n                ? namespace.users.map(({ name, object_roles }) => ({\n                    username: name,\n                    object_roles,\n                  }))\n                : [],\n            },\n            showControls: !!myNamespace,\n            unfilteredCount,\n          });\n        },\n      )\n      .catch(() => {\n        this.setState({ redirect: formatPath(Paths.notFound) });\n      });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonQueryStringParams);\n  }\n\n  private renderPageControls() {\n    if (!this.state.showControls) {\n      return null;\n    }\n\n    const { canSign, collections, unfilteredCount } = this.state;\n    const { ai_deny_index, can_upload_signatures } = this.context.featureFlags;\n    const repository = this.state.params.repository_name || null;\n\n    const dropdownItems = [\n      <DropdownItem\n        key='edit'\n        component={\n          <Link\n            to={formatPath(Paths.editNamespace, {\n              namespace: this.state.namespace.name,\n            })}\n          >\n            {t`Edit namespace`}\n          </Link>\n        }\n      />,\n      this.hasPerm('galaxy.delete_namespace') &&\n        (unfilteredCount === 0 ? (\n          <DropdownItem\n            key='delete'\n            onClick={() => this.setState({ isOpenNamespaceModal: true })}\n          >{t`Delete namespace`}</DropdownItem>\n        ) : (\n          <DropdownItem\n            isDisabled\n            description={t`Cannot delete non-empty namespace`}\n          >{t`Delete namespace`}</DropdownItem>\n        )),\n      <DropdownItem\n        key='imports'\n        component={\n          <Link\n            to={formatPath(\n              Paths.myImports,\n              {},\n              {\n                namespace: this.state.namespace.name,\n              },\n            )}\n          >\n            {t`Imports`}\n          </Link>\n        }\n      />,\n      canSign &&\n        !can_upload_signatures &&\n        (repository ? (\n          <DropdownItem\n            key='sign-collections'\n            data-cy='sign-all-collections-button'\n            onClick={() => this.setState({ isOpenSignModal: true })}\n          >\n            {t`Sign all collections in ${repository}`}\n          </DropdownItem>\n        ) : (\n          <DropdownItem\n            key='sign-collections'\n            isDisabled\n            description={t`Please select a repository filter`}\n          >\n            {t`Sign all collections`}\n          </DropdownItem>\n        )),\n      ai_deny_index && (\n        <DropdownItem\n          key='wisdom-settings'\n          onClick={() => this.setState({ isOpenWisdomModal: true })}\n        >\n          {t`Ansible Lightspeed settings`}\n        </DropdownItem>\n      ),\n    ].filter(Boolean);\n\n    return (\n      <div\n        style={{ display: 'flex', alignItems: 'center' }}\n        data-cy='kebab-toggle'\n      >\n        {' '}\n        {collections.length !== 0 && (\n          <Button\n            onClick={() => this.setState({ showImportModal: true })}\n          >{t`Upload collection`}</Button>\n        )}\n        {dropdownItems.length > 0 && (\n          <div data-cy='ns-kebab-toggle'>\n            <StatefulDropdown items={dropdownItems} />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    if (warning) {\n      this.addAlert({\n        title: warning,\n        variant: 'warning',\n      });\n    }\n\n    const newState = { showImportModal: isOpen };\n\n    if (!isOpen) {\n      newState['updateCollection'] = null;\n    }\n\n    this.setState(newState);\n  }\n\n  private deleteNamespace = () => {\n    const {\n      namespace: { name },\n    } = this.state;\n    const { queueAlert } = this.context;\n\n    this.setState({ isNamespacePending: true }, () =>\n      NamespaceAPI.delete(name)\n        .then(() => {\n          this.setState({\n            redirect: namespaceBreadcrumb().url,\n            confirmDelete: false,\n            isNamespacePending: false,\n          });\n          queueAlert({\n            variant: 'success',\n            title: (\n              <Trans>\n                Namespace &quot;{name}&quot; has been successfully deleted.\n              </Trans>\n            ),\n          });\n        })\n        .catch((e) => {\n          const { status, statusText } = e.response;\n          this.setState(\n            {\n              isOpenNamespaceModal: false,\n              confirmDelete: false,\n              isNamespacePending: false,\n            },\n            () => {\n              this.addAlert({\n                variant: 'danger',\n                title: t`Namespace \"${name}\" could not be deleted.`,\n                description: errorMessage(status, statusText),\n              });\n            },\n          );\n        }),\n    );\n  };\n\n  private closeModal = () => {\n    this.setState({ isOpenNamespaceModal: false, confirmDelete: false });\n  };\n\n  private addAlert(alert: AlertType) {\n    this.setState({\n      alerts: [...this.state.alerts, alert],\n    });\n  }\n\n  get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private renderCollectionControls(collection: CollectionVersionSearch) {\n    const { namespace, showControls } = this.state;\n\n    const canUpload = this.hasPerm('galaxy.upload_to_namespace');\n\n    if (!showControls) {\n      return;\n    }\n\n    const deleteFn = (deleteAll) => ({\n      addAlert: (alert) => this.addAlert(alert),\n      collection,\n      openModal: () =>\n        this.setState({\n          deleteCollection: collection,\n          confirmDelete: false,\n          deleteAll,\n        }),\n    });\n\n    return {\n      uploadButton: canUpload && (\n        <Button\n          onClick={() =>\n            this.handleCollectionAction(\n              collection.collection_version.pulp_href,\n              'upload',\n            )\n          }\n          variant='secondary'\n        >\n          {t`Upload new version`}\n        </Button>\n      ),\n      dropdownMenu: (\n        <CollectionDropdown\n          collection={collection}\n          data-cy='collection-kebab'\n          namespace={namespace}\n          onDelete={deleteFn(true)}\n          onDeprecate={() =>\n            this.handleCollectionAction(\n              collection.collection_version.pulp_href,\n              'deprecate',\n            )\n          }\n          onRemove={deleteFn(false)}\n        />\n      ),\n    };\n  }\n}\n\nNamespaceDetail.contextType = AppContext;\n\nexport default withRouter(NamespaceDetail);\n"],"names":["NamespaceDetail","_React$Component","_inherits","_super","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","name","state","namespace","queueAlert","context","setState","isNamespacePending","NamespaceAPI","then","redirect","namespaceBreadcrumb","url","confirmDelete","variant","title","React","Trans","id","values","e","_e$response","response","status","statusText","isOpenNamespaceModal","addAlert","i18n","_","description","errorMessage","params","ParamHelper","parseParamString","location","search","routeParams","repo","repository_name","alerts","canSign","collections","deleteAll","deleteCollection","filteredCount","group","user","isDeletionPending","isOpenSignModal","isOpenWisdomModal","showControls","showGroupRemoveModal","showGroupSelectWizard","showImportModal","showRoleRemoveModal","showRoleSelectWizard","unfilteredCount","updateCollection","_createClass","key","value","this","load","setAlerts","prevProps","filterGroup","groups","filterUser","users","username","find","u","g","_ref","_this2","_ref$users","_ref$groups","alertSuccess","alertFailure","stateUpdate","MyNamespaceAPI","update","_objectSpread","_ref2","_ref2$response","permission","_this$context","hasPermission","is_superuser","_namespace$related_fi","_namespace$related_fi2","related_fields","my_permissions","includes","hasObjectPermission","_deleteCollection$rep","_this3","_this$state","featureFlags","legacy_roles","display_signatures","Navigate","to","LoadingPageWithHeader","tabs","resources","filter","Boolean","tab","breadcrumbs","formatPath","Paths","namespaceDetail","repositoryUrl","getRepoURL","noData","filterIsSet","updateParams","loadCollections","ignoredParams","canEditOwners","hasPerm","tabParams","repository","deleteFromRepo","AlertList","closeAlert","i","ImportModal","isOpen","onUploadSuccess","myImports","setOpen","warn","toggleImportModal","collection","collection_version","DeleteCollectionModal","setConfirmDelete","cancelAction","deleteAction","DeleteCollectionUtils","alert","DeleteModal","spinner","closeModal","deleteNamespace","isDisabled","Text","style","paddingBottom","components","Checkbox","isChecked","onChange","val","label","WisdomModal","closeAction","scope","reference","PartnerHeader","p","pageControls","renderPageControls","HubListToolbar","_extends","count","collectionFilter","Main","EmptyStateNoData","button","Button","onClick","className","CollectionList","itemCount","displaySignatures","collectionControls","renderCollectionControls","ExternalLink","href","ClipboardCopy","isReadOnly","renderResources","AccessTab","showUserRemoveModal","showUserSelectWizard","pulpObjectType","selectRolesMessage","updateProps","prop","addUser","roles","newUser","object_roles","map","_ref3","newUsers","concat","_toConsumableArray","updateRoles","removeUser","addGroup","newGroup","_ref4","newGroups","removeGroup","addUserRole","_ref5","removeUserRole","role","addRole","_ref6","removeRole","urlPrefix","replace","standaloneNamespaces","provider","SignAllCertificatesModal","onSubmit","signAllCertificates","onCancel","pulp_href","action","_this4","c","CollectionAPI","setDeprecation","result","taskId","parsePulpIDFromURL","data","task","waitForTask","is_deprecated","ReactMarkdown","_this5","errorAlert","arguments","length","undefined","SignCollectionAPI","sign","signing_service","settings","GALAXY_COLLECTION_SIGNING_SERVICE","task_id","error","x","CollectionVersionAPI","list","is_highest","repository_label","_this6","loadAllCollections","getReduced","nonAPIParams","meta","_this7","Promise","all","page","page_size","get","include_related","is_anonymous","GALAXY_ENABLE_UNAUTHENTICATED_COLLECTION_ACCESS","reject","_ref7","_ref8","_slicedToArray","myNamespace","canSignNamespace","_ref9","notFound","updateParamsMixin","nonQueryStringParams","_this8","_this$state2","_this$context$feature","ai_deny_index","can_upload_signatures","dropdownItems","DropdownItem","component","Link","editNamespace","display","alignItems","StatefulDropdown","items","warning","newState","closeAlertMixin","_this9","_this$state3","canUpload","deleteFn","openModal","uploadButton","handleCollectionAction","dropdownMenu","CollectionDropdown","onDelete","onDeprecate","onRemove","contextType","AppContext","withRouter"],"sourceRoot":""}