{"version":3,"sources":["webpack:///./src/containers/namespace-list/namespace-list.scss","webpack:///./src/containers/namespace-list/namespace-list.tsx","webpack:///./src/containers/namespace-list/namespace-list.scss?dbb7","webpack:///./src/containers/namespace-list/my-namespaces.tsx","webpack:///./src/containers/namespace-list/partners.tsx"],"names":["module","exports","push","i","props","nonURLParams","params","parseParamString","location","search","state","namespaces","undefined","itemCount","componentDidMount","this","loadNamespaces","render","title","namespacePath","className","sortOptions","id","searchPlaceholder","updateParams","p","count","isTop","map","ns","key","to","namespace","name","filterOwner","getMyNamespaces","list","then","results","setState","data","meta","updateParamsMixin","content","options","transform","update","locals","hot","accept","newContent","a","b","idx","Error","dispose","myCollections","MyNamespaces","Partners"],"mappings":"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","file":"js/namespace_list.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".card-layout {\\n  display: flex;\\n  flex-wrap: wrap; }\\n  .card-layout .card-wrapper {\\n    margin-right: 24px;\\n    margin-bottom: 24px; }\\n\\n.toolbar {\\n  padding-bottom: 16px;\\n  display: flex;\\n  justify-content: space-between; }\\n\", \"\"]);\n\n","import * as React from 'react';\nimport './namespace-list.scss';\n\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport { Main, Section } from '@redhat-cloud-services/frontend-components';\n\nimport { ParamHelper } from '../../utilities/param-helper';\nimport {\n    BaseHeader,\n    NamespaceCard,\n    Toolbar,\n    Pagination,\n    LoadingPageWithHeader,\n} from '../../components';\nimport { NamespaceAPI, NamespaceListType } from '../../api';\nimport { Paths, formatPath } from '../../paths';\n\ninterface IState {\n    namespaces: NamespaceListType[];\n    itemCount: number;\n    params: {\n        name?: string;\n        sort?: string;\n        page?: number;\n        page_size?: number;\n        tenant?: string;\n    };\n}\n\ninterface IProps extends RouteComponentProps {\n    title: string;\n    namespacePath: Paths;\n    filterOwner?: boolean;\n}\n\nexport class NamespaceList extends React.Component<IProps, IState> {\n    nonURLParams = ['tenant'];\n\n    constructor(props) {\n        super(props);\n\n        const params = ParamHelper.parseParamString(props.location.search, [\n            'page',\n            'page_size',\n        ]);\n\n        if (!params['page_size']) {\n            params['page_size'] = 50;\n        }\n\n        this.state = {\n            namespaces: undefined,\n            itemCount: 0,\n            params: params,\n        };\n    }\n\n    componentDidMount() {\n        this.loadNamespaces();\n    }\n\n    render() {\n        const { namespaces, params, itemCount } = this.state;\n        const { title, namespacePath } = this.props;\n        if (!namespaces) {\n            return <LoadingPageWithHeader></LoadingPageWithHeader>;\n        }\n\n        return (\n            <React.Fragment>\n                <BaseHeader title={title}>\n                    <div className='toolbar'>\n                        <Toolbar\n                            params={params}\n                            sortOptions={[{ title: 'Name', id: 'name' }]}\n                            searchPlaceholder={'Search ' + title}\n                            updateParams={p =>\n                                this.updateParams(p, () =>\n                                    this.loadNamespaces(),\n                                )\n                            }\n                        />\n\n                        <div>\n                            <Pagination\n                                params={params}\n                                updateParams={p => this.updateParams(p)}\n                                count={itemCount}\n                                isTop\n                            />\n                        </div>\n                    </div>\n                </BaseHeader>\n                <Main>\n                    <Section className='card-layout'>\n                        {namespaces.map((ns, i) => (\n                            <div key={i} className='card-wrapper'>\n                                <Link\n                                    to={formatPath(namespacePath, {\n                                        namespace: ns.name,\n                                    })}\n                                >\n                                    <NamespaceCard\n                                        key={i}\n                                        {...ns}\n                                    ></NamespaceCard>\n                                </Link>\n                            </div>\n                        ))}\n                    </Section>\n                </Main>\n            </React.Fragment>\n        );\n    }\n\n    private loadNamespaces() {\n        let apiFunc: any;\n\n        if (this.props.filterOwner) {\n            apiFunc = p => NamespaceAPI.getMyNamespaces(p);\n        } else {\n            apiFunc = p => NamespaceAPI.list(p);\n        }\n\n        apiFunc(this.state.params).then(results => {\n            this.setState({\n                namespaces: results.data.data,\n                itemCount: results.data.meta.count,\n            });\n        });\n    }\n\n    private get updateParams() {\n        return ParamHelper.updateParamsMixin(this.nonURLParams);\n    }\n}\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./namespace-list.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./namespace-list.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./namespace-list.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\n\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { NamespaceList } from './namespace-list';\nimport { Paths } from '../../paths';\n\nclass MyNamespaces extends React.Component<RouteComponentProps, {}> {\n    render() {\n        return (\n            <NamespaceList\n                {...this.props}\n                namespacePath={Paths.myCollections}\n                title='My namespaces'\n                filterOwner={true}\n            />\n        );\n    }\n}\n\nexport default withRouter(MyNamespaces);\n","import * as React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { NamespaceList } from './namespace-list';\nimport { Paths } from '../../paths';\n\nclass Partners extends React.Component<RouteComponentProps, {}> {\n    render() {\n        return (\n            <NamespaceList\n                {...this.props}\n                namespacePath={Paths.namespace}\n                title='Partners'\n            />\n        );\n    }\n}\n\nexport default withRouter(Partners);\n"],"sourceRoot":""}