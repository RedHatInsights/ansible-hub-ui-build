{"version":3,"sources":["webpack:///./src/containers/namespace-detail/import-modal/import-modal.scss","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/spinner-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/folder-open-icon.js","webpack:///./src/containers/namespace-detail/import-modal/import-modal.tsx","webpack:///./src/containers/namespace-detail/namespace-detail.tsx","webpack:///./src/containers/namespace-detail/import-modal/import-modal.scss?0d53","webpack:///./src/containers/edit-namespace/edit-namespace.tsx","webpack:///./src/containers/namespace-detail/manage-namespace.tsx","webpack:///./src/containers/namespace-detail/partner-detail.tsx"],"names":["module","exports","push","i","SpinnerIcon","createIcon","name","height","width","svgPath","yOffset","xOffset","transform","FolderOpenIcon","Status","props","acceptedFileTypes","COLLECTION_NAME_REGEX","state","file","undefined","errors","uploadProgress","uploadStatus","waiting","render","this","isOpen","collection","Modal","variant","title","onClose","handleClose","actions","Button","key","onClick","saveFile","isDisabled","canUpload","className","disabled","type","id","onChange","e","handleFileUpload","target","files","htmlFor","renderFileIcon","style","uploading","newCollection","length","setState","includes","test","split","namespace","artifact","sha256","cancelToken","getCancelToken","upload","loaded","total","then","response","onUploadSuccess","catch","errorMessage","a","isCancel","data","messages","err","detail","code","status","join","finally","_","msg","cancel","setOpen","displayName","__docgenInfo","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","nonAPIParams","persistentParams","certification","certified","nonQueryStringParams","params","parseParamString","location","search","match","collections","redirect","itemCount","showImportModal","warning","updateCollection","componentDidMount","loadAll","breadcrumbs","Redirect","to","tabs","tab","resources","result","history","myImports","warn","toggleImportModal","Alert","position","right","top","zIndex","actionClose","AlertActionCloseButton","concat","updateParams","p","pageControls","renderPageControls","toLowerCase","loadCollections","showControls","handleControlClick","action","handleCollectionAction","renderResources","find","x","setDeprecation","deprecated","error","source","list","getReduced","meta","count","Promise","all","get","val","notFound","updateParamsMixin","display","alignItems","marginLeft","items","DropdownItem","component","Link","editNamespace","newState","content","options","update","locals","hot","accept","newContent","b","idx","Error","dispose","alerts","userId","newLinkURL","newLinkName","errorMessages","saving","unsavedData","getUser","account_number","loadNamespace","url","myNamespaces","myCollections","closeAlert","updateNamespace","saveNamespace","color","removeGroupsPrefix","groups","unprefixedGroupOwners","ADMIN_GROUP","owner","description","EditNamespace","editnamespace","ManageNamespace","managenamespace","partners","PartnerDetail","partnerdetail"],"mappings":"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","file":"js/namespace_detail.js","sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".upload-collection .file-error-messages{color:#cc0000}.upload-collection .upload-file{width:0.1px;height:0.1px;opacity:0;overflow:hidden;position:absolute;z-index:-1}.upload-collection .upload-file-label{display:inline-block;cursor:pointer;width:100%;font-weight:normal}.upload-collection .upload-file-label .upload-box{display:flex;border-style:solid;border-width:thin;width:100%;border-radius:3px}.upload-collection .upload-file-label .upload-box .upload-button,.upload-collection .upload-file-label .upload-box .upload-text{padding:5px}.upload-collection .upload-file-label .upload-box .upload-button{border-right:thin solid;padding-left:10px;padding-right:10px}.upload-collection .upload-file-label .upload-box .upload-button:hover{color:white;background-color:gray}.upload-collection .upload-file-label .upload-box .upload-text{position:relative;width:100%}.upload-collection .upload-file-label .upload-box .loading-bar{position:absolute;height:3px;background-color:#5bb75b;bottom:0px;left:0px}\\n\", \"\"]);\n\n","import { createIcon } from '../createIcon';\n\nexport const SpinnerIconConfig = {\n  name: 'SpinnerIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\n\nexport const SpinnerIcon = createIcon(SpinnerIconConfig);\n\nexport default SpinnerIcon;","import { createIcon } from '../createIcon';\n\nexport const FolderOpenIconConfig = {\n  name: 'FolderOpenIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M572.694 292.093L500.27 416.248A63.997 63.997 0 0 1 444.989 448H45.025c-18.523 0-30.064-20.093-20.731-36.093l72.424-124.155A64 64 0 0 1 152 256h399.964c18.523 0 30.064 20.093 20.73 36.093zM152 224h328v-48c0-26.51-21.49-48-48-48H272l-64-64H48C21.49 64 0 85.49 0 112v278.046l69.077-118.418C86.214 242.25 117.989 224 152 224z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\n\nexport const FolderOpenIcon = createIcon(FolderOpenIconConfig);\n\nexport default FolderOpenIcon;","import * as React from 'react';\nimport './import-modal.scss';\nimport axios from 'axios';\n\nimport { Modal, Button } from '@patternfly/react-core';\nimport { FolderOpenIcon, SpinnerIcon } from '@patternfly/react-icons';\n\nimport {\n  CollectionListType,\n  CollectionAPI,\n  CollectionUploadType,\n} from '../../../api';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionListType;\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  uploadProgress: number;\n  uploadStatus: Status;\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: any;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+\\-[0-9a-z_]+\\-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n    };\n  }\n  render() {\n    const { isOpen, collection } = this.props;\n\n    const { file, errors, uploadProgress, uploadStatus } = this.state;\n    return (\n      <Modal\n        variant='small'\n        title={\n          collection ? 'New version of ' + collection.name : 'New collection'\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={!this.canUpload()}\n          >\n            Upload\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            Cancel\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={e => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : 'Select file'}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className='file-error-messages'>\n              <i className='pficon-error-circle-o' /> {errors}\n            </span>\n          ) : null}\n        </div>\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors) {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin'></SpinnerIcon>;\n      default:\n        return <FolderOpenIcon></FolderOpenIcon>;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: 'Please select no more than one file.',\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      this.setState({\n        errors: 'Invalid file format.',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: `Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: `The collection you have selected doesn't appear to match ${collection.name}`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: `The collection you have selected does not match this namespace.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  saveFile() {\n    this.setState({ uploadStatus: Status.uploading });\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      artifact,\n      e => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then(response => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch(errors => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (let err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  'API error. Status code: ' + err.status,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = 'API error. Status code: ' + errors.response.status;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n        });\n      })\n      .finally(_ => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = 'Collection upload canceled';\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\ntry {\n    // @ts-ignore\n    ImportModal.displayName = \"ImportModal\";\n    // @ts-ignore\n    ImportModal.__docgenInfo = { \"description\": \"\", \"displayName\": \"ImportModal\", \"props\": { \"isOpen\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isOpen\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"setOpen\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"setOpen\", \"required\": true, \"type\": { \"name\": \"(isOpen: any, warnings?: any) => void\" } }, \"onUploadSuccess\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onUploadSuccess\", \"required\": true, \"type\": { \"name\": \"(result: any) => void\" } }, \"collection\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"collection\", \"required\": false, \"type\": { \"name\": \"CollectionListType\" } }, \"namespace\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"namespace\", \"required\": true, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/namespace-detail/import-modal/import-modal.tsx#ImportModal\"] = { docgenInfo: ImportModal.__docgenInfo, name: \"ImportModal\", path: \"src/containers/namespace-detail/import-modal/import-modal.tsx#ImportModal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { RouteComponentProps, Redirect, Link } from 'react-router-dom';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport {\n  Button,\n  DropdownItem,\n  Alert,\n  AlertActionCloseButton,\n} from '@patternfly/react-core';\n\nimport * as ReactMarkdown from 'react-markdown';\n\nimport {\n  CollectionListType,\n  CollectionAPI,\n  NamespaceAPI,\n  NamespaceType,\n  CertificationStatus,\n} from '../../api';\n\nimport {\n  CollectionList,\n  PartnerHeader,\n  StatefulDropdown,\n  LoadingPageWithHeader,\n  Main,\n  APIButton,\n} from '../../components';\n\nimport { ImportModal } from './import-modal/import-modal';\n\nimport { ParamHelper } from '../../utilities/param-helper';\nimport { Paths, formatPath } from '../../paths';\n\ninterface IState {\n  collections: CollectionListType[];\n  namespace: NamespaceType;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n    tab?: string;\n    keywords?: string;\n    namespace?: string;\n  };\n  redirect: string;\n  itemCount: number;\n  showImportModal: boolean;\n  warning: string;\n  updateCollection: CollectionListType;\n}\n\ninterface IProps extends RouteComponentProps {\n  showControls: boolean;\n  breadcrumbs: { name: string; url?: string }[];\n}\n\nexport class NamespaceDetail extends React.Component<IProps, IState> {\n  nonAPIParams = ['tab'];\n  persistentParams = { certification: CertificationStatus.certified };\n\n  // namespace is a positional url argument, so don't include it in the\n  // query params\n  nonQueryStringParams = ['namespace'];\n\n  constructor(props) {\n    super(props);\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['namespace'] = props.match.params['namespace'];\n\n    this.state = {\n      collections: [],\n      namespace: null,\n      params: params,\n      redirect: null,\n      itemCount: 0,\n      showImportModal: false,\n      warning: '',\n      updateCollection: null,\n    };\n  }\n\n  componentDidMount() {\n    this.loadAll();\n  }\n\n  render() {\n    const {\n      collections,\n      namespace,\n      params,\n      redirect,\n      itemCount,\n      showImportModal,\n      warning,\n      updateCollection,\n    } = this.state;\n\n    const { breadcrumbs } = this.props;\n\n    if (redirect) {\n      return <Redirect to={redirect} />;\n    }\n\n    if (!namespace) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const tabs = ['Collections'];\n\n    const tab = params['tab'] || 'collections';\n\n    if (namespace.resources) {\n      tabs.push('Resources');\n    }\n\n    return (\n      <React.Fragment>\n        <ImportModal\n          isOpen={showImportModal}\n          onUploadSuccess={result =>\n            this.props.history.push(\n              formatPath(\n                Paths.myImports,\n                {},\n                {\n                  namespace: namespace.name,\n                },\n              ),\n            )\n          }\n          // onCancel\n          setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n          collection={updateCollection}\n          namespace={namespace.name}\n        />\n        {warning ? (\n          <Alert\n            style={{\n              position: 'fixed',\n              right: '5px',\n              top: '80px',\n              zIndex: 300,\n            }}\n            variant='warning'\n            title={warning}\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => this.setState({ warning: '' })}\n              />\n            }\n          ></Alert>\n        ) : null}\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={breadcrumbs.concat([{ name: namespace.name }])}\n          tabs={tabs}\n          params={params}\n          updateParams={p => this.updateParams(p)}\n          pageControls={this.renderPageControls()}\n        ></PartnerHeader>\n        <Main>\n          <Section className='body'>\n            {tab.toLowerCase() === 'collections' ? (\n              <CollectionList\n                updateParams={params =>\n                  this.updateParams(params, () => this.loadCollections())\n                }\n                params={params}\n                collections={collections}\n                itemCount={itemCount}\n                showControls={this.props.showControls}\n                handleControlClick={(id, action) =>\n                  this.handleCollectionAction(id, action)\n                }\n              />\n            ) : (\n              this.renderResources(namespace)\n            )}\n          </Section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private handleCollectionAction(id, action) {\n    const collection = this.state.collections.find(x => x.id === id);\n\n    switch (action) {\n      case 'upload':\n        this.setState({\n          updateCollection: collection,\n          showImportModal: true,\n        });\n        break;\n      case 'deprecate':\n        CollectionAPI.setDeprecation(collection, !collection.deprecated)\n          .then(() => this.loadCollections())\n          .catch(error => {\n            this.setState({\n              warning: 'API Error: Failed to set deprecation.',\n            });\n          });\n        break;\n    }\n  }\n\n  private renderResources(namespace: NamespaceType) {\n    return (\n      <div className='pf-c-content preview'>\n        <ReactMarkdown source={namespace.resources} />\n      </div>\n    );\n  }\n\n  private loadCollections() {\n    CollectionAPI.list({\n      ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n      ...this.persistentParams,\n    }).then(result => {\n      this.setState({\n        collections: result.data.data,\n        itemCount: result.data.meta.count,\n      });\n    });\n  }\n\n  private loadAll() {\n    Promise.all([\n      CollectionAPI.list({\n        ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n        ...this.persistentParams,\n      }),\n      NamespaceAPI.get(this.props.match.params['namespace']),\n    ])\n      .then(val => {\n        this.setState({\n          collections: val[0].data.data,\n          itemCount: val[0].data.meta.count,\n          namespace: val[1].data,\n        });\n      })\n      .catch(response => {\n        this.setState({ redirect: Paths.notFound });\n      });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonQueryStringParams);\n  }\n\n  private renderPageControls() {\n    if (!this.props.showControls) {\n      return (\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <APIButton style={{ marginLeft: '8px' }} />\n        </div>\n      );\n    }\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Button onClick={() => this.setState({ showImportModal: true })}>\n          Upload collection\n        </Button>\n        <APIButton style={{ marginLeft: '8px' }} />\n        <StatefulDropdown\n          items={[\n            <DropdownItem\n              key='1'\n              component={\n                <Link\n                  to={formatPath(Paths.editNamespace, {\n                    namespace: this.state.namespace.name,\n                  })}\n                >\n                  Edit namespace\n                </Link>\n              }\n            />,\n            <DropdownItem\n              key='2'\n              component={\n                <Link\n                  to={formatPath(\n                    Paths.myImports,\n                    {},\n                    {\n                      namespace: this.state.namespace.name,\n                    },\n                  )}\n                >\n                  Imports\n                </Link>\n              }\n            />,\n          ]}\n        />\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    const newState = { showImportModal: isOpen };\n    if (warning) {\n      newState['warning'] = warning;\n    }\n\n    if (!isOpen) {\n      newState['updateCollection'] = null;\n    }\n\n    this.setState(newState);\n  }\n}\ntry {\n    // @ts-ignore\n    NamespaceDetail.displayName = \"NamespaceDetail\";\n    // @ts-ignore\n    NamespaceDetail.__docgenInfo = { \"description\": \"\", \"displayName\": \"NamespaceDetail\", \"props\": { \"showControls\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"showControls\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"breadcrumbs\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"breadcrumbs\", \"required\": true, \"type\": { \"name\": \"{ name: string; url?: string; }[]\" } }, \"history\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"history\", \"required\": true, \"type\": { \"name\": \"History<any>\" } }, \"location\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"location\", \"required\": true, \"type\": { \"name\": \"Location<any>\" } }, \"match\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"match<{}>\" } }, \"staticContext\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"staticContext\", \"required\": false, \"type\": { \"name\": \"StaticContext\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/namespace-detail/namespace-detail.tsx#NamespaceDetail\"] = { docgenInfo: NamespaceDetail.__docgenInfo, name: \"NamespaceDetail\", path: \"src/containers/namespace-detail/namespace-detail.tsx#NamespaceDetail\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./import-modal.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./import-modal.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./import-modal.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\n\nimport { Section, Spinner } from '@redhat-cloud-services/frontend-components';\nimport { withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\n\nimport {\n  PartnerHeader,\n  NamespaceForm,\n  ResourcesForm,\n  AlertList,\n  closeAlertMixin,\n  AlertType,\n  Main,\n} from '../../components';\nimport { MyNamespaceAPI, NamespaceType, ActiveUserAPI } from '../../api';\nimport { Constants } from '../../constants';\n\nimport { Form, ActionGroup, Button } from '@patternfly/react-core';\n\nimport { Paths, formatPath } from '../../paths';\nimport { ParamHelper, mapErrorMessages } from '../../utilities';\n\ninterface IState {\n  namespace: NamespaceType;\n  newLinkName: string;\n  newLinkURL: string;\n  errorMessages: any;\n  saving: boolean;\n  redirect: string;\n  unsavedData: boolean;\n  alerts: AlertType[];\n  params: {\n    tab?: string;\n  };\n  userId: string;\n}\n\nclass EditNamespace extends React.Component<RouteComponentProps, IState> {\n  queryParams: URLSearchParams;\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search);\n\n    if (!params['tab']) {\n      params['tab'] = 'edit details';\n    }\n\n    this.state = {\n      alerts: [],\n      namespace: null,\n      userId: '',\n      newLinkURL: '',\n      newLinkName: '',\n      errorMessages: {},\n      saving: false,\n      redirect: null,\n      unsavedData: false,\n      params: params,\n    };\n  }\n\n  componentDidMount() {\n    ActiveUserAPI.getUser().then(result => {\n      this.setState({ userId: result.account_number }, () =>\n        this.loadNamespace(),\n      );\n    });\n  }\n\n  render() {\n    const {\n      namespace,\n      errorMessages,\n      saving,\n      redirect,\n      params,\n      userId,\n    } = this.state;\n\n    if (redirect) {\n      return <Redirect to={redirect} />;\n    }\n\n    if (!namespace) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={[\n            { name: 'My namespaces', url: Paths.myNamespaces },\n            {\n              name: namespace.name,\n              url: formatPath(Paths.myCollections, {\n                namespace: namespace.name,\n              }),\n            },\n            { name: 'Edit' },\n          ]}\n          tabs={['Edit details', 'Edit resources']}\n          params={params}\n          updateParams={p => this.updateParams(p)}\n        ></PartnerHeader>\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={i => this.closeAlert(i)}\n        />\n        <Main>\n          <Section className='body'>\n            {params.tab.toLowerCase() === 'edit details' ? (\n              <NamespaceForm\n                userId={userId}\n                namespace={namespace}\n                errorMessages={errorMessages}\n                updateNamespace={namespace =>\n                  this.setState({\n                    namespace: namespace,\n                    unsavedData: true,\n                  })\n                }\n              />\n            ) : (\n              <ResourcesForm\n                updateNamespace={namespace =>\n                  this.setState({\n                    namespace: namespace,\n                    unsavedData: true,\n                  })\n                }\n                namespace={namespace}\n              />\n            )}\n            <Form>\n              <ActionGroup>\n                <Button variant='primary' onClick={() => this.saveNamespace()}>\n                  Save\n                </Button>\n                <Button variant='secondary' onClick={() => this.cancel()}>\n                  Cancel\n                </Button>\n\n                {saving ? <Spinner></Spinner> : null}\n              </ActionGroup>\n              {this.state.unsavedData ? (\n                <div style={{ color: 'red' }}>You have unsaved changes</div>\n              ) : null}\n            </Form>\n          </Section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n\n  private removeGroupsPrefix(groups) {\n    let unprefixedGroupOwners = [Constants.ADMIN_GROUP];\n    for (const owner of groups) {\n      if (owner == Constants.ADMIN_GROUP) {\n        continue;\n      }\n      // 'rh-identity-account', '<id>'\n      else unprefixedGroupOwners.push(owner.split(':')[1]);\n    }\n    return unprefixedGroupOwners;\n  }\n\n  private loadNamespace() {\n    MyNamespaceAPI.get(this.props.match.params['namespace'])\n      .then(response => {\n        response.data.groups = this.removeGroupsPrefix(response.data.groups);\n        this.setState({ namespace: response.data });\n      })\n      .catch(response => {\n        this.setState({ redirect: Paths.notFound });\n      });\n  }\n\n  private saveNamespace() {\n    this.setState({ saving: true }, () => {\n      MyNamespaceAPI.update(this.state.namespace.name, this.state.namespace)\n        .then(result => {\n          this.setState({\n            namespace: result.data,\n            errorMessages: {},\n            saving: false,\n            unsavedData: false,\n            redirect: formatPath(Paths.myCollections, {\n              namespace: this.state.namespace.name,\n            }),\n          });\n        })\n        .catch(error => {\n          const result = error.response;\n          if (result.status === 400) {\n            this.setState({\n              errorMessages: mapErrorMessages(error),\n              saving: false,\n            });\n          } else if (result.status === 404) {\n            this.setState({\n              alerts: this.state.alerts.concat({\n                variant: 'danger',\n                title: `API Error: ${error.response.status}`,\n                description: `You don't have permissions to update this namespace.`,\n              }),\n              saving: false,\n            });\n          }\n        });\n    });\n  }\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private cancel() {\n    this.setState({\n      redirect: formatPath(Paths.myCollections, {\n        namespace: this.state.namespace.name,\n      }),\n    });\n  }\n}\n\nexport default withRouter(EditNamespace);\ntry {\n    // @ts-ignore\n    editnamespace.displayName = \"editnamespace\";\n    // @ts-ignore\n    editnamespace.__docgenInfo = { \"description\": \"\", \"displayName\": \"editnamespace\", \"props\": { \"wrappedComponentRef\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"wrappedComponentRef\", \"required\": false, \"type\": { \"name\": \"Ref<EditNamespace>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/edit-namespace/edit-namespace.tsx#editnamespace\"] = { docgenInfo: editnamespace.__docgenInfo, name: \"editnamespace\", path: \"src/containers/edit-namespace/edit-namespace.tsx#editnamespace\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { NamespaceDetail } from './namespace-detail';\nimport { Paths } from '../../paths';\n\nclass ManageNamespace extends React.Component<RouteComponentProps> {\n  render() {\n    return (\n      <NamespaceDetail\n        {...this.props}\n        showControls={true}\n        breadcrumbs={[{ url: Paths.myNamespaces, name: 'My namespaces' }]}\n      ></NamespaceDetail>\n    );\n  }\n}\n\nexport default withRouter(ManageNamespace);\ntry {\n    // @ts-ignore\n    managenamespace.displayName = \"managenamespace\";\n    // @ts-ignore\n    managenamespace.__docgenInfo = { \"description\": \"\", \"displayName\": \"managenamespace\", \"props\": { \"wrappedComponentRef\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"wrappedComponentRef\", \"required\": false, \"type\": { \"name\": \"Ref<ManageNamespace>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/namespace-detail/manage-namespace.tsx#managenamespace\"] = { docgenInfo: managenamespace.__docgenInfo, name: \"managenamespace\", path: \"src/containers/namespace-detail/manage-namespace.tsx#managenamespace\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { NamespaceDetail } from './namespace-detail';\nimport { Paths } from '../../paths';\n\nclass PartnerDetail extends React.Component<RouteComponentProps> {\n  render() {\n    return (\n      <NamespaceDetail\n        {...this.props}\n        showControls={false}\n        breadcrumbs={[{ url: Paths.partners, name: 'Partners' }]}\n      ></NamespaceDetail>\n    );\n  }\n}\n\nexport default withRouter(PartnerDetail);\ntry {\n    // @ts-ignore\n    partnerdetail.displayName = \"partnerdetail\";\n    // @ts-ignore\n    partnerdetail.__docgenInfo = { \"description\": \"\", \"displayName\": \"partnerdetail\", \"props\": { \"wrappedComponentRef\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"wrappedComponentRef\", \"required\": false, \"type\": { \"name\": \"Ref<PartnerDetail>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/namespace-detail/partner-detail.tsx#partnerdetail\"] = { docgenInfo: partnerdetail.__docgenInfo, name: \"partnerdetail\", path: \"src/containers/namespace-detail/partner-detail.tsx#partnerdetail\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"sourceRoot":""}