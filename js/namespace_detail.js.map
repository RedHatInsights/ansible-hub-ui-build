{"version":3,"sources":["webpack:///./src/containers/namespace-detail/import-modal/import-modal.scss","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/spinner-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/folder-open-icon.js","webpack:///./src/containers/namespace-detail/import-modal/import-modal.tsx","webpack:///./src/containers/namespace-detail/namespace-detail.tsx","webpack:///./src/containers/namespace-detail/import-modal/import-modal.scss?0d53","webpack:///./src/containers/edit-namespace/edit-namespace.tsx","webpack:///./src/containers/namespace-detail/manage-namespace.tsx","webpack:///./src/containers/namespace-detail/partner-detail.tsx"],"names":["module","exports","push","i","SpinnerIcon","createIcon","name","height","width","svgPath","yOffset","xOffset","transform","FolderOpenIcon","Status","props","acceptedFileTypes","COLLECTION_NAME_REGEX","state","file","undefined","errors","uploadProgress","uploadStatus","waiting","render","this","isOpen","collection","Modal","variant","title","onClose","handleClose","actions","Button","key","onClick","saveFile","isDisabled","canUpload","className","disabled","type","id","onChange","e","handleFileUpload","target","files","htmlFor","renderFileIcon","style","uploading","newCollection","length","setState","includes","test","split","namespace","artifact","sha256","cancelToken","getCancelToken","upload","loaded","total","then","response","onUploadSuccess","catch","errorMessage","a","isCancel","data","messages","err","detail","code","status","join","finally","_","msg","cancel","setOpen","displayName","__docgenInfo","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","nonAPIParams","nonQueryStringParams","params","parseParamString","location","search","match","collections","redirect","itemCount","showImportModal","warning","updateCollection","componentDidMount","loadAll","breadcrumbs","Redirect","to","tabs","showControls","tab","resources","repositoryUrl","result","history","myImports","warn","toggleImportModal","Alert","position","right","top","zIndex","actionClose","AlertActionCloseButton","concat","updateParams","p","pageControls","renderPageControls","toLowerCase","loadCollections","handleControlClick","action","handleCollectionAction","repo","context","selectedRepo","ClipboardCopy","isReadOnly","href","renderResources","find","x","setDeprecation","deprecated","error","source","list","getReduced","meta","count","Promise","all","get","val","notFound","updateParamsMixin","display","alignItems","marginLeft","items","DropdownItem","component","Link","editNamespace","newState","contextType","content","options","update","locals","hot","accept","newContent","b","idx","Error","dispose","alerts","userId","newLinkURL","newLinkName","errorMessages","saving","unsavedData","getUser","account_number","loadNamespace","url","myNamespaces","myCollections","closeAlert","updateNamespace","saveNamespace","color","links","setLinks","link","description","EditNamespace","editnamespace","ManageNamespace","managenamespace","charAt","toUpperCase","slice","PartnerDetail","partnerdetail"],"mappings":"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","file":"js/namespace_detail.js","sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".upload-collection .file-error-messages{color:#cc0000}.upload-collection .upload-file{width:0.1px;height:0.1px;opacity:0;overflow:hidden;position:absolute;z-index:-1}.upload-collection .upload-file-label{display:inline-block;cursor:pointer;width:100%;font-weight:normal}.upload-collection .upload-file-label .upload-box{display:flex;border-style:solid;border-width:thin;width:100%;border-radius:3px}.upload-collection .upload-file-label .upload-box .upload-button,.upload-collection .upload-file-label .upload-box .upload-text{padding:5px}.upload-collection .upload-file-label .upload-box .upload-button{border-right:thin solid;padding-left:10px;padding-right:10px}.upload-collection .upload-file-label .upload-box .upload-button:hover{color:white;background-color:gray}.upload-collection .upload-file-label .upload-box .upload-text{position:relative;width:100%}.upload-collection .upload-file-label .upload-box .loading-bar{position:absolute;height:3px;background-color:#5bb75b;bottom:0px;left:0px}\\n\", \"\"]);\n\n","import { createIcon } from '../createIcon';\n\nexport const SpinnerIconConfig = {\n  name: 'SpinnerIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\n\nexport const SpinnerIcon = createIcon(SpinnerIconConfig);\n\nexport default SpinnerIcon;","import { createIcon } from '../createIcon';\n\nexport const FolderOpenIconConfig = {\n  name: 'FolderOpenIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M572.694 292.093L500.27 416.248A63.997 63.997 0 0 1 444.989 448H45.025c-18.523 0-30.064-20.093-20.731-36.093l72.424-124.155A64 64 0 0 1 152 256h399.964c18.523 0 30.064 20.093 20.73 36.093zM152 224h328v-48c0-26.51-21.49-48-48-48H272l-64-64H48C21.49 64 0 85.49 0 112v278.046l69.077-118.418C86.214 242.25 117.989 224 152 224z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\n\nexport const FolderOpenIcon = createIcon(FolderOpenIconConfig);\n\nexport default FolderOpenIcon;","import * as React from 'react';\nimport './import-modal.scss';\nimport axios from 'axios';\n\nimport { Modal, Button } from '@patternfly/react-core';\nimport { FolderOpenIcon, SpinnerIcon } from '@patternfly/react-icons';\n\nimport {\n  CollectionListType,\n  CollectionAPI,\n  CollectionUploadType,\n} from '../../../api';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionListType;\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  uploadProgress: number;\n  uploadStatus: Status;\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: any;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+\\-[0-9a-z_]+\\-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n    };\n  }\n  render() {\n    const { isOpen, collection } = this.props;\n\n    const { file, errors, uploadProgress, uploadStatus } = this.state;\n    return (\n      <Modal\n        variant='small'\n        title={\n          collection ? 'New version of ' + collection.name : 'New collection'\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={!this.canUpload()}\n          >\n            Upload\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            Cancel\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={e => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : 'Select file'}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className='file-error-messages'>\n              <i className='pficon-error-circle-o' /> {errors}\n            </span>\n          ) : null}\n        </div>\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors) {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin'></SpinnerIcon>;\n      default:\n        return <FolderOpenIcon></FolderOpenIcon>;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: 'Please select no more than one file.',\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      this.setState({\n        errors: 'Invalid file format.',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: `Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: `The collection you have selected doesn't appear to match ${collection.name}`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: `The collection you have selected does not match this namespace.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  saveFile() {\n    this.setState({ uploadStatus: Status.uploading });\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      'inbound-' + this.props.namespace,\n      artifact,\n      e => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then(response => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch(errors => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (let err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  'API error. Status code: ' + err.status,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = 'API error. Status code: ' + errors.response.status;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n        });\n      })\n      .finally(_ => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = 'Collection upload canceled';\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\ntry {\n    // @ts-ignore\n    ImportModal.displayName = \"ImportModal\";\n    // @ts-ignore\n    ImportModal.__docgenInfo = { \"description\": \"\", \"displayName\": \"ImportModal\", \"props\": { \"isOpen\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isOpen\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"setOpen\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"setOpen\", \"required\": true, \"type\": { \"name\": \"(isOpen: any, warnings?: any) => void\" } }, \"onUploadSuccess\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onUploadSuccess\", \"required\": true, \"type\": { \"name\": \"(result: any) => void\" } }, \"collection\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"collection\", \"required\": false, \"type\": { \"name\": \"CollectionListType\" } }, \"namespace\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"namespace\", \"required\": true, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/namespace-detail/import-modal/import-modal.tsx#ImportModal\"] = { docgenInfo: ImportModal.__docgenInfo, name: \"ImportModal\", path: \"src/containers/namespace-detail/import-modal/import-modal.tsx#ImportModal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { RouteComponentProps, Redirect, Link } from 'react-router-dom';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport {\n  Button,\n  DropdownItem,\n  Alert,\n  AlertActionCloseButton,\n  ClipboardCopy,\n} from '@patternfly/react-core';\n\nimport * as ReactMarkdown from 'react-markdown';\n\nimport {\n  CollectionListType,\n  CollectionAPI,\n  NamespaceAPI,\n  NamespaceType,\n} from '../../api';\n\nimport {\n  CollectionList,\n  PartnerHeader,\n  StatefulDropdown,\n  LoadingPageWithHeader,\n  Main,\n  APIButton,\n} from '../../components';\n\nimport { ImportModal } from './import-modal/import-modal';\n\nimport { ParamHelper, getRepoUrl } from '../../utilities';\nimport { Paths, formatPath } from '../../paths';\nimport { AppContext } from '../../loaders/app-context';\n\ninterface IState {\n  collections: CollectionListType[];\n  namespace: NamespaceType;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n    tab?: string;\n    keywords?: string;\n    namespace?: string;\n  };\n  redirect: string;\n  itemCount: number;\n  showImportModal: boolean;\n  warning: string;\n  updateCollection: CollectionListType;\n}\n\ninterface IProps extends RouteComponentProps {\n  showControls: boolean;\n  breadcrumbs: { name: string; url?: string }[];\n}\n\nexport class NamespaceDetail extends React.Component<IProps, IState> {\n  nonAPIParams = ['tab'];\n\n  // namespace is a positional url argument, so don't include it in the\n  // query params\n  nonQueryStringParams = ['namespace'];\n\n  constructor(props) {\n    super(props);\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['namespace'] = props.match.params['namespace'];\n\n    this.state = {\n      collections: [],\n      namespace: null,\n      params: params,\n      redirect: null,\n      itemCount: 0,\n      showImportModal: false,\n      warning: '',\n      updateCollection: null,\n    };\n  }\n\n  componentDidMount() {\n    this.loadAll();\n  }\n\n  render() {\n    const {\n      collections,\n      namespace,\n      params,\n      redirect,\n      itemCount,\n      showImportModal,\n      warning,\n      updateCollection,\n    } = this.state;\n\n    const { breadcrumbs } = this.props;\n\n    if (redirect) {\n      return <Redirect to={redirect} />;\n    }\n\n    if (!namespace) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const tabs = ['Collections'];\n\n    if (this.props.showControls) {\n      tabs.push('CLI Configuration');\n    }\n    const tab = params['tab'] || 'collections';\n\n    if (namespace.resources) {\n      tabs.push('Resources');\n    }\n\n    const repositoryUrl = getRepoUrl('inbound-' + namespace.name);\n\n    return (\n      <React.Fragment>\n        <ImportModal\n          isOpen={showImportModal}\n          onUploadSuccess={result =>\n            this.props.history.push(\n              formatPath(\n                Paths.myImports,\n                {},\n                {\n                  namespace: namespace.name,\n                },\n              ),\n            )\n          }\n          // onCancel\n          setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n          collection={updateCollection}\n          namespace={namespace.name}\n        />\n        {warning ? (\n          <Alert\n            style={{\n              position: 'fixed',\n              right: '5px',\n              top: '80px',\n              zIndex: 300,\n            }}\n            variant='warning'\n            title={warning}\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => this.setState({ warning: '' })}\n              />\n            }\n          ></Alert>\n        ) : null}\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={breadcrumbs.concat([{ name: namespace.name }])}\n          tabs={tabs}\n          params={params}\n          updateParams={p => this.updateParams(p)}\n          pageControls={this.renderPageControls()}\n        ></PartnerHeader>\n        <Main>\n          <Section className='body'>\n            {tab.toLowerCase() === 'collections' ? (\n              <CollectionList\n                updateParams={params =>\n                  this.updateParams(params, () => this.loadCollections())\n                }\n                params={params}\n                collections={collections}\n                itemCount={itemCount}\n                showControls={this.props.showControls}\n                handleControlClick={(id, action) =>\n                  this.handleCollectionAction(id, action)\n                }\n                repo={this.context.selectedRepo}\n              />\n            ) : null}\n            {tab.toLowerCase() === 'cli configuration' ? (\n              <div>\n                <ClipboardCopy isReadOnly>{repositoryUrl}</ClipboardCopy>\n                <div>\n                  <b>Note:</b> Use this URL to configure ansible-galaxy to\n                  upload collections to this namespace. More information on\n                  ansible-galaxy configurations can be found{' '}\n                  <a\n                    href='https://docs.ansible.com/ansible/latest/galaxy/user_guide.html#configuring-the-ansible-galaxy-client'\n                    target='_blank'\n                  >\n                    here\n                  </a>\n                  .\n                </div>\n              </div>\n            ) : null}\n            {tab.toLowerCase() === 'resources'\n              ? this.renderResources(namespace)\n              : null}\n          </Section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private handleCollectionAction(id, action) {\n    const collection = this.state.collections.find(x => x.id === id);\n\n    switch (action) {\n      case 'upload':\n        this.setState({\n          updateCollection: collection,\n          showImportModal: true,\n        });\n        break;\n      case 'deprecate':\n        CollectionAPI.setDeprecation(\n          collection,\n          !collection.deprecated,\n          this.context.selectedRepo,\n        )\n          .then(() => this.loadCollections())\n          .catch(error => {\n            this.setState({\n              warning: 'API Error: Failed to set deprecation.',\n            });\n          });\n        break;\n    }\n  }\n\n  private renderResources(namespace: NamespaceType) {\n    return (\n      <div className='pf-c-content preview'>\n        <ReactMarkdown source={namespace.resources} />\n      </div>\n    );\n  }\n\n  private loadCollections() {\n    CollectionAPI.list(\n      {\n        ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n      },\n      this.context.selectedRepo,\n    ).then(result => {\n      this.setState({\n        collections: result.data.data,\n        itemCount: result.data.meta.count,\n      });\n    });\n  }\n\n  private loadAll() {\n    Promise.all([\n      CollectionAPI.list(\n        {\n          ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n        },\n        this.context.selectedRepo,\n      ),\n      NamespaceAPI.get(this.props.match.params['namespace']),\n    ])\n      .then(val => {\n        this.setState({\n          collections: val[0].data.data,\n          itemCount: val[0].data.meta.count,\n          namespace: val[1].data,\n        });\n      })\n      .catch(response => {\n        this.setState({ redirect: Paths.notFound });\n      });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonQueryStringParams);\n  }\n\n  private renderPageControls() {\n    if (!this.props.showControls) {\n      return (\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <APIButton style={{ marginLeft: '8px' }} />\n        </div>\n      );\n    }\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Button onClick={() => this.setState({ showImportModal: true })}>\n          Upload collection\n        </Button>\n        <APIButton style={{ marginLeft: '8px' }} />\n        <StatefulDropdown\n          items={[\n            <DropdownItem\n              key='1'\n              component={\n                <Link\n                  to={formatPath(Paths.editNamespace, {\n                    namespace: this.state.namespace.name,\n                  })}\n                >\n                  Edit namespace\n                </Link>\n              }\n            />,\n            <DropdownItem\n              key='2'\n              component={\n                <Link\n                  to={formatPath(\n                    Paths.myImports,\n                    {},\n                    {\n                      namespace: this.state.namespace.name,\n                    },\n                  )}\n                >\n                  Imports\n                </Link>\n              }\n            />,\n          ]}\n        />\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    const newState = { showImportModal: isOpen };\n    if (warning) {\n      newState['warning'] = warning;\n    }\n\n    if (!isOpen) {\n      newState['updateCollection'] = null;\n    }\n\n    this.setState(newState);\n  }\n}\n\nNamespaceDetail.contextType = AppContext;\ntry {\n    // @ts-ignore\n    NamespaceDetail.displayName = \"NamespaceDetail\";\n    // @ts-ignore\n    NamespaceDetail.__docgenInfo = { \"description\": \"\", \"displayName\": \"NamespaceDetail\", \"props\": { \"showControls\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"showControls\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"breadcrumbs\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"breadcrumbs\", \"required\": true, \"type\": { \"name\": \"{ name: string; url?: string; }[]\" } }, \"history\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"history\", \"required\": true, \"type\": { \"name\": \"History<any>\" } }, \"location\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"location\", \"required\": true, \"type\": { \"name\": \"Location<any>\" } }, \"match\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"match<{}>\" } }, \"staticContext\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"staticContext\", \"required\": false, \"type\": { \"name\": \"StaticContext\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/namespace-detail/namespace-detail.tsx#NamespaceDetail\"] = { docgenInfo: NamespaceDetail.__docgenInfo, name: \"NamespaceDetail\", path: \"src/containers/namespace-detail/namespace-detail.tsx#NamespaceDetail\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./import-modal.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./import-modal.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./import-modal.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\n\nimport { Section, Spinner } from '@redhat-cloud-services/frontend-components';\nimport { withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\n\nimport {\n  PartnerHeader,\n  NamespaceForm,\n  ResourcesForm,\n  AlertList,\n  closeAlertMixin,\n  AlertType,\n  Main,\n} from '../../components';\nimport {\n  MyNamespaceAPI,\n  NamespaceType,\n  ActiveUserAPI,\n  NamespaceLinkType,\n} from '../../api';\n\nimport { Form, ActionGroup, Button } from '@patternfly/react-core';\n\nimport { Paths, formatPath } from '../../paths';\nimport { ParamHelper, mapErrorMessages } from '../../utilities';\n\ninterface IState {\n  namespace: NamespaceType;\n  newLinkName: string;\n  newLinkURL: string;\n  errorMessages: any;\n  saving: boolean;\n  redirect: string;\n  unsavedData: boolean;\n  alerts: AlertType[];\n  params: {\n    tab?: string;\n  };\n  userId: string;\n}\n\nclass EditNamespace extends React.Component<RouteComponentProps, IState> {\n  queryParams: URLSearchParams;\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search);\n\n    if (!params['tab']) {\n      params['tab'] = 'edit details';\n    }\n\n    this.state = {\n      alerts: [],\n      namespace: null,\n      userId: '',\n      newLinkURL: '',\n      newLinkName: '',\n      errorMessages: {},\n      saving: false,\n      redirect: null,\n      unsavedData: false,\n      params: params,\n    };\n  }\n\n  componentDidMount() {\n    ActiveUserAPI.getUser().then(result => {\n      this.setState({ userId: result.account_number }, () =>\n        this.loadNamespace(),\n      );\n    });\n  }\n\n  render() {\n    const {\n      namespace,\n      errorMessages,\n      saving,\n      redirect,\n      params,\n      userId,\n    } = this.state;\n\n    if (redirect) {\n      return <Redirect to={redirect} />;\n    }\n\n    if (!namespace) {\n      return null;\n    }\n    return (\n      <React.Fragment>\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={[\n            { name: 'My namespaces', url: Paths.myNamespaces },\n            {\n              name: namespace.name,\n              url: formatPath(Paths.myCollections, {\n                namespace: namespace.name,\n              }),\n            },\n            { name: 'Edit' },\n          ]}\n          tabs={['Edit details', 'Edit resources']}\n          params={params}\n          updateParams={p => this.updateParams(p)}\n        ></PartnerHeader>\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={i => this.closeAlert(i)}\n        />\n        <Main>\n          <Section className='body'>\n            {params.tab.toLowerCase() === 'edit details' ? (\n              <NamespaceForm\n                userId={userId}\n                namespace={namespace}\n                errorMessages={errorMessages}\n                updateNamespace={namespace =>\n                  this.setState({\n                    namespace: namespace,\n                    unsavedData: true,\n                  })\n                }\n              />\n            ) : (\n              <ResourcesForm\n                updateNamespace={namespace =>\n                  this.setState({\n                    namespace: namespace,\n                    unsavedData: true,\n                  })\n                }\n                namespace={namespace}\n              />\n            )}\n            <Form>\n              <ActionGroup>\n                <Button variant='primary' onClick={() => this.saveNamespace()}>\n                  Save\n                </Button>\n                <Button variant='secondary' onClick={() => this.cancel()}>\n                  Cancel\n                </Button>\n\n                {saving ? <Spinner></Spinner> : null}\n              </ActionGroup>\n              {this.state.unsavedData ? (\n                <div style={{ color: 'red' }}>You have unsaved changes</div>\n              ) : null}\n            </Form>\n          </Section>\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n\n  private loadNamespace() {\n    MyNamespaceAPI.get(this.props.match.params['namespace'])\n      .then(response => {\n        // Add an empty link to the end of the links array to create an empty field\n        // on the link edit form for adding new links\n        const emptyLink: NamespaceLinkType = { name: '', url: '' };\n        response.data.links.push(emptyLink);\n        this.setState({ namespace: response.data });\n      })\n      .catch(response => {\n        this.setState({ redirect: Paths.notFound });\n      });\n  }\n\n  private saveNamespace() {\n    this.setState({ saving: true }, () => {\n      const namespace = { ...this.state.namespace };\n      const setLinks: NamespaceLinkType[] = [];\n\n      // remove any empty links from the list before saving\n      for (const link of namespace.links) {\n        if (link.url !== '' || link.name !== '') {\n          setLinks.push(link);\n        }\n      }\n\n      namespace.links = setLinks;\n\n      MyNamespaceAPI.update(this.state.namespace.name, namespace)\n        .then(result => {\n          this.setState({\n            namespace: result.data,\n            errorMessages: {},\n            saving: false,\n            unsavedData: false,\n            redirect: formatPath(Paths.myCollections, {\n              namespace: this.state.namespace.name,\n            }),\n          });\n        })\n        .catch(error => {\n          const result = error.response;\n          if (result.status === 400) {\n            this.setState({\n              errorMessages: mapErrorMessages(error),\n              saving: false,\n            });\n          } else if (result.status === 404) {\n            this.setState({\n              alerts: this.state.alerts.concat({\n                variant: 'danger',\n                title: `API Error: ${error.response.status}`,\n                description: `You don't have permissions to update this namespace.`,\n              }),\n              saving: false,\n            });\n          }\n        });\n    });\n  }\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private cancel() {\n    this.setState({\n      redirect: formatPath(Paths.myCollections, {\n        namespace: this.state.namespace.name,\n      }),\n    });\n  }\n}\n\nexport default withRouter(EditNamespace);\ntry {\n    // @ts-ignore\n    editnamespace.displayName = \"editnamespace\";\n    // @ts-ignore\n    editnamespace.__docgenInfo = { \"description\": \"\", \"displayName\": \"editnamespace\", \"props\": { \"wrappedComponentRef\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"wrappedComponentRef\", \"required\": false, \"type\": { \"name\": \"Ref<EditNamespace>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/edit-namespace/edit-namespace.tsx#editnamespace\"] = { docgenInfo: editnamespace.__docgenInfo, name: \"editnamespace\", path: \"src/containers/edit-namespace/edit-namespace.tsx#editnamespace\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { NamespaceDetail } from './namespace-detail';\nimport { Paths } from '../../paths';\n\ninterface IProps extends RouteComponentProps {\n  selectedRepo: string;\n}\n\nclass ManageNamespace extends React.Component<IProps> {\n  render() {\n    return (\n      <NamespaceDetail\n        {...this.props}\n        showControls={true}\n        breadcrumbs={[{ url: Paths.myNamespaces, name: 'My namespaces' }]}\n      ></NamespaceDetail>\n    );\n  }\n}\n\nexport default withRouter(ManageNamespace);\ntry {\n    // @ts-ignore\n    managenamespace.displayName = \"managenamespace\";\n    // @ts-ignore\n    managenamespace.__docgenInfo = { \"description\": \"\", \"displayName\": \"managenamespace\", \"props\": { \"selectedRepo\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selectedRepo\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"wrappedComponentRef\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"wrappedComponentRef\", \"required\": false, \"type\": { \"name\": \"Ref<ManageNamespace>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/namespace-detail/manage-namespace.tsx#managenamespace\"] = { docgenInfo: managenamespace.__docgenInfo, name: \"managenamespace\", path: \"src/containers/namespace-detail/manage-namespace.tsx#managenamespace\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { NamespaceDetail } from './namespace-detail';\nimport { Paths } from '../../paths';\n\ninterface IProps extends RouteComponentProps {\n  selectedRepo: string;\n}\nclass PartnerDetail extends React.Component<IProps> {\n  render() {\n    var name = NAMESPACE_TERM.charAt(0).toUpperCase() + NAMESPACE_TERM.slice(1);\n\n    return (\n      <NamespaceDetail\n        {...this.props}\n        showControls={false}\n        breadcrumbs={[{ url: Paths[NAMESPACE_TERM], name: name }]}\n      ></NamespaceDetail>\n    );\n  }\n}\n\nexport default withRouter(PartnerDetail);\ntry {\n    // @ts-ignore\n    partnerdetail.displayName = \"partnerdetail\";\n    // @ts-ignore\n    partnerdetail.__docgenInfo = { \"description\": \"\", \"displayName\": \"partnerdetail\", \"props\": { \"selectedRepo\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selectedRepo\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"wrappedComponentRef\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"wrappedComponentRef\", \"required\": false, \"type\": { \"name\": \"Ref<PartnerDetail>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/namespace-detail/partner-detail.tsx#partnerdetail\"] = { docgenInfo: partnerdetail.__docgenInfo, name: \"partnerdetail\", path: \"src/containers/namespace-detail/partner-detail.tsx#partnerdetail\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"sourceRoot":""}