{"version":3,"sources":["webpack:///./src/containers/namespace-detail/import-modal/import-modal.scss","webpack:///./src/containers/namespace-detail/import-modal/import-modal.tsx","webpack:///./src/containers/namespace-detail/namespace-detail.tsx","webpack:///./src/containers/namespace-detail/import-modal/import-modal.scss?0d53","webpack:///./src/containers/edit-namespace/edit-namespace.tsx","webpack:///./src/containers/namespace-detail/manage-namespace.tsx","webpack:///./src/containers/namespace-detail/partner-detail.tsx"],"names":["module","exports","push","i","Status","props","acceptedFileTypes","COLLECTION_NAME_REGEX","state","file","undefined","errors","uploadProgress","uploadStatus","waiting","render","this","isOpen","collection","Modal","variant","title","name","onClose","handleClose","actions","Button","key","onClick","saveFile","isDisabled","canUpload","className","disabled","type","id","onChange","e","handleFileUpload","target","files","htmlFor","renderFileIcon","style","width","uploading","newCollection","length","setState","includes","test","split","namespace","artifact","sha256","cancelToken","getCancelToken","upload","loaded","total","then","response","onUploadSuccess","catch","errorMessage","a","isCancel","data","messages","err","detail","code","status","join","finally","_","msg","cancel","setOpen","displayName","__docgenInfo","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","nonAPIParams","nonQueryStringParams","params","parseParamString","location","search","match","collections","redirect","itemCount","showImportModal","warning","updateCollection","componentDidMount","loadAll","breadcrumbs","Redirect","to","tabs","showControls","tab","resources","repositoryUrl","noData","result","history","myImports","warn","toggleImportModal","Alert","position","right","top","zIndex","actionClose","AlertActionCloseButton","concat","updateParams","p","pageControls","renderPageControls","toLowerCase","description","button","loadCollections","handleControlClick","action","handleCollectionAction","repo","context","selectedRepo","ClipboardCopy","isReadOnly","href","renderResources","find","x","setDeprecation","deprecated","error","source","list","getReduced","meta","count","Promise","all","get","val","notFound","updateParamsMixin","display","alignItems","marginLeft","items","DropdownItem","component","Link","editNamespace","newState","contextType","content","options","transform","update","locals","hot","accept","newContent","b","idx","Error","dispose","alerts","userId","newLinkURL","newLinkName","errorMessages","saving","unsavedData","unauthorized","getUser","account_number","loadNamespace","url","myNamespaces","myCollections","closeAlert","updateNamespace","saveNamespace","color","links","setLinks","link","EditNamespace","editnamespace","ManageNamespace","managenamespace","charAt","toUpperCase","slice","PartnerDetail","partnerdetail"],"mappings":"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","file":"js/namespace_detail.js","sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".upload-collection .file-error-messages{color:#cc0000}.upload-collection .upload-file{width:0.1px;height:0.1px;opacity:0;overflow:hidden;position:absolute;z-index:-1}.upload-collection .upload-file-label{display:inline-block;cursor:pointer;width:100%;font-weight:normal}.upload-collection .upload-file-label .upload-box{display:flex;border-style:solid;border-width:thin;width:100%;border-radius:3px}.upload-collection .upload-file-label .upload-box .upload-button,.upload-collection .upload-file-label .upload-box .upload-text{padding:5px}.upload-collection .upload-file-label .upload-box .upload-button{border-right:thin solid;padding-left:10px;padding-right:10px}.upload-collection .upload-file-label .upload-box .upload-button:hover{color:white;background-color:gray}.upload-collection .upload-file-label .upload-box .upload-text{position:relative;width:100%}.upload-collection .upload-file-label .upload-box .loading-bar{position:absolute;height:3px;background-color:#5bb75b;bottom:0px;left:0px}\\n\", \"\"]);\n\n","import * as React from 'react';\nimport './import-modal.scss';\nimport axios from 'axios';\n\nimport { Modal, Button } from '@patternfly/react-core';\nimport { FolderOpenIcon, SpinnerIcon } from '@patternfly/react-icons';\n\nimport {\n  CollectionListType,\n  CollectionAPI,\n  CollectionUploadType,\n} from 'src/api';\n\nenum Status {\n  uploading = 'uploading',\n  waiting = 'waiting',\n}\n\ninterface IProps {\n  isOpen: boolean;\n  setOpen: (isOpen, warnings?) => void;\n  onUploadSuccess: (result) => void;\n\n  collection?: CollectionListType;\n  namespace: string;\n}\n\ninterface IState {\n  file?: File;\n  errors?: string;\n  uploadProgress: number;\n  uploadStatus: Status;\n}\n\nexport class ImportModal extends React.Component<IProps, IState> {\n  acceptedFileTypes = ['application/x-gzip', 'application/gzip'];\n  cancelToken: any;\n  COLLECTION_NAME_REGEX = /[0-9a-z_]+\\-[0-9a-z_]+\\-[0-9A-Za-z.+-]+/;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: undefined,\n      errors: '',\n      uploadProgress: 0,\n      uploadStatus: Status.waiting,\n    };\n  }\n  render() {\n    const { isOpen, collection } = this.props;\n\n    const { file, errors, uploadProgress, uploadStatus } = this.state;\n    return (\n      <Modal\n        variant='small'\n        title={\n          collection ? 'New version of ' + collection.name : 'New collection'\n        }\n        isOpen={isOpen}\n        onClose={() => this.handleClose()}\n        actions={[\n          <Button\n            key='confirm'\n            variant='primary'\n            onClick={() => this.saveFile()}\n            isDisabled={!this.canUpload()}\n          >\n            Upload\n          </Button>,\n          <Button\n            key='cancel'\n            variant='secondary'\n            onClick={() => this.handleClose()}\n          >\n            Cancel\n          </Button>,\n        ]}\n      >\n        <div className='upload-collection'>\n          <form>\n            <input\n              disabled={uploadStatus !== Status.waiting}\n              className='upload-file'\n              type='file'\n              id='collection-widget'\n              onChange={e => this.handleFileUpload(e.target.files)}\n            />\n            <label className='upload-file-label' htmlFor='collection-widget'>\n              <div className='upload-box'>\n                <div className='upload-button'>{this.renderFileIcon()}</div>\n                <div className='upload-text'>\n                  {file != null ? file.name : 'Select file'}\n                  <div\n                    className='loading-bar'\n                    style={{\n                      width: uploadProgress * 100 + '%',\n                    }}\n                  />\n                </div>\n              </div>\n            </label>\n          </form>\n          {errors ? (\n            <span className='file-error-messages'>\n              <i className='pficon-error-circle-o' /> {errors}\n            </span>\n          ) : null}\n        </div>\n      </Modal>\n    );\n  }\n\n  private canUpload() {\n    if (this.state.errors) {\n      return false;\n    }\n\n    if (this.state.uploadStatus !== Status.waiting) {\n      return false;\n    }\n\n    if (!this.state.file) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private renderFileIcon() {\n    switch (this.state.uploadStatus) {\n      case Status.uploading:\n        return <SpinnerIcon className='fa-spin'></SpinnerIcon>;\n      default:\n        return <FolderOpenIcon></FolderOpenIcon>;\n    }\n  }\n\n  private handleFileUpload(files) {\n    // Selects the artifact that will be uploaded and performs some basic\n    // preliminary checks on it.\n    const newCollection = files[0];\n    const { collection } = this.props;\n\n    if (files.length > 1) {\n      this.setState({\n        errors: 'Please select no more than one file.',\n      });\n    } else if (!this.acceptedFileTypes.includes(newCollection.type)) {\n      this.setState({\n        errors: 'Invalid file format.',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (!this.COLLECTION_NAME_REGEX.test(newCollection.name)) {\n      this.setState({\n        errors: `Invalid file name. Collections must be formatted as 'namespace-collection_name-1.0.0'`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (\n      collection &&\n      collection.name !== newCollection.name.split('-')[1]\n    ) {\n      this.setState({\n        errors: `The collection you have selected doesn't appear to match ${collection.name}`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else if (this.props.namespace != newCollection.name.split('-')[0]) {\n      this.setState({\n        errors: `The collection you have selected does not match this namespace.`,\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    } else {\n      this.setState({\n        errors: '',\n        file: newCollection,\n        uploadProgress: 0,\n      });\n    }\n  }\n\n  saveFile() {\n    this.setState({ uploadStatus: Status.uploading });\n    const artifact = {\n      file: this.state.file,\n      sha256: '',\n    } as CollectionUploadType;\n\n    this.cancelToken = CollectionAPI.getCancelToken();\n\n    CollectionAPI.upload(\n      'inbound-' + this.props.namespace,\n      artifact,\n      e => {\n        this.setState({\n          uploadProgress: e.loaded / e.total,\n        });\n      },\n      this.cancelToken,\n    )\n      .then(response => {\n        this.props.onUploadSuccess(response);\n      })\n      .catch(errors => {\n        let errorMessage = '';\n\n        // If request was canceled by the user\n        if (!axios.isCancel(errors)) {\n          // Upload fails\n          if (errors.response.data.errors) {\n            const messages = [];\n            for (let err of errors.response.data.errors) {\n              messages.push(\n                err.detail ||\n                  err.title ||\n                  err.code ||\n                  'API error. Status code: ' + err.status,\n              );\n            }\n            errorMessage = messages.join(', ');\n          } else {\n            errorMessage = 'API error. Status code: ' + errors.response.status;\n          }\n        }\n\n        this.setState({\n          uploadStatus: Status.waiting,\n          errors: errorMessage,\n        });\n      })\n      .finally(_ => {\n        this.cancelToken = null;\n      });\n  }\n\n  handleClose() {\n    let msg = null;\n    if (this.cancelToken && this.state.uploadStatus === Status.uploading) {\n      msg = 'Collection upload canceled';\n      this.cancelToken.cancel(msg);\n    }\n\n    this.setState(\n      {\n        file: undefined,\n        errors: '',\n        uploadProgress: 0,\n        uploadStatus: Status.waiting,\n      },\n      () => this.props.setOpen(false, msg),\n    );\n  }\n}\ntry {\n    // @ts-ignore\n    ImportModal.displayName = \"ImportModal\";\n    // @ts-ignore\n    ImportModal.__docgenInfo = { \"description\": \"\", \"displayName\": \"ImportModal\", \"props\": { \"isOpen\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isOpen\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"setOpen\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"setOpen\", \"required\": true, \"type\": { \"name\": \"(isOpen: any, warnings?: any) => void\" } }, \"onUploadSuccess\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onUploadSuccess\", \"required\": true, \"type\": { \"name\": \"(result: any) => void\" } }, \"collection\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"collection\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"namespace\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"namespace\", \"required\": true, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/namespace-detail/import-modal/import-modal.tsx#ImportModal\"] = { docgenInfo: ImportModal.__docgenInfo, name: \"ImportModal\", path: \"src/containers/namespace-detail/import-modal/import-modal.tsx#ImportModal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { RouteComponentProps, Link, Redirect } from 'react-router-dom';\nimport { Section } from '@redhat-cloud-services/frontend-components';\nimport {\n  Button,\n  DropdownItem,\n  Alert,\n  AlertActionCloseButton,\n  ClipboardCopy,\n} from '@patternfly/react-core';\n\nimport * as ReactMarkdown from 'react-markdown';\n\nimport {\n  CollectionListType,\n  CollectionAPI,\n  NamespaceAPI,\n  NamespaceType,\n} from 'src/api';\n\nimport {\n  CollectionList,\n  PartnerHeader,\n  StatefulDropdown,\n  LoadingPageWithHeader,\n  Main,\n  APIButton,\n  EmptyStateUnauthorized,\n  EmptyStateFilter,\n  EmptyStateNoData,\n} from 'src/components';\n\nimport { ImportModal } from './import-modal/import-modal';\n\nimport { ParamHelper, getRepoUrl, filterIsSet } from 'src/utilities';\nimport { Paths, formatPath } from 'src/paths';\nimport { AppContext } from 'src/loaders/app-context';\n\ninterface IState {\n  collections: CollectionListType[];\n  namespace: NamespaceType;\n  params: {\n    sort?: string;\n    page?: number;\n    page_size?: number;\n    tab?: string;\n    keywords?: string;\n    namespace?: string;\n  };\n  redirect: string;\n  itemCount: number;\n  showImportModal: boolean;\n  warning: string;\n  updateCollection: CollectionListType;\n}\n\ninterface IProps extends RouteComponentProps {\n  showControls: boolean;\n  breadcrumbs: { name: string; url?: string }[];\n}\n\nexport class NamespaceDetail extends React.Component<IProps, IState> {\n  nonAPIParams = ['tab'];\n\n  // namespace is a positional url argument, so don't include it in the\n  // query params\n  nonQueryStringParams = ['namespace'];\n\n  constructor(props) {\n    super(props);\n    const params = ParamHelper.parseParamString(props.location.search, [\n      'page',\n      'page_size',\n    ]);\n\n    params['namespace'] = props.match.params['namespace'];\n\n    this.state = {\n      collections: [],\n      namespace: null,\n      params: params,\n      redirect: null,\n      itemCount: 0,\n      showImportModal: false,\n      warning: '',\n      updateCollection: null,\n    };\n  }\n\n  componentDidMount() {\n    this.loadAll();\n  }\n\n  render() {\n    const {\n      collections,\n      namespace,\n      params,\n      redirect,\n      itemCount,\n      showImportModal,\n      warning,\n      updateCollection,\n    } = this.state;\n\n    const { breadcrumbs } = this.props;\n\n    if (redirect) {\n      return <Redirect to={redirect} />;\n    }\n\n    if (!namespace) {\n      return <LoadingPageWithHeader></LoadingPageWithHeader>;\n    }\n\n    const tabs = ['Collections'];\n\n    if (this.props.showControls) {\n      tabs.push('CLI Configuration');\n    }\n    const tab = params['tab'] || 'collections';\n\n    if (namespace.resources) {\n      tabs.push('Resources');\n    }\n\n    const repositoryUrl = getRepoUrl('inbound-' + namespace.name);\n\n    const noData = itemCount === 0 && !filterIsSet(params, ['keywords']);\n\n    return (\n      <React.Fragment>\n        <ImportModal\n          isOpen={showImportModal}\n          onUploadSuccess={result =>\n            this.props.history.push(\n              formatPath(\n                Paths.myImports,\n                {},\n                {\n                  namespace: namespace.name,\n                },\n              ),\n            )\n          }\n          // onCancel\n          setOpen={(isOpen, warn) => this.toggleImportModal(isOpen, warn)}\n          collection={updateCollection}\n          namespace={namespace.name}\n        />\n        {warning ? (\n          <Alert\n            style={{\n              position: 'fixed',\n              right: '5px',\n              top: '80px',\n              zIndex: 300,\n            }}\n            variant='warning'\n            title={warning}\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => this.setState({ warning: '' })}\n              />\n            }\n          ></Alert>\n        ) : null}\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={breadcrumbs.concat([{ name: namespace.name }])}\n          tabs={tabs}\n          params={params}\n          updateParams={p => this.updateParams(p)}\n          pageControls={this.renderPageControls()}\n        ></PartnerHeader>\n        <Main>\n          {tab.toLowerCase() === 'collections' ? (\n            noData ? (\n              <EmptyStateNoData\n                title={'No collections yet'}\n                description={'Collections will appear once uploaded'}\n                button={\n                  this.props.showControls && (\n                    <Button\n                      onClick={() => this.setState({ showImportModal: true })}\n                    >\n                      Upload collection\n                    </Button>\n                  )\n                }\n              />\n            ) : (\n              <Section className='body'>\n                <CollectionList\n                  updateParams={params =>\n                    this.updateParams(params, () => this.loadCollections())\n                  }\n                  params={params}\n                  collections={collections}\n                  itemCount={itemCount}\n                  showControls={this.props.showControls}\n                  handleControlClick={(id, action) =>\n                    this.handleCollectionAction(id, action)\n                  }\n                  repo={this.context.selectedRepo}\n                />\n              </Section>\n            )\n          ) : null}\n          {tab.toLowerCase() === 'cli configuration' ? (\n            <Section className='body'>\n              <div>\n                <ClipboardCopy isReadOnly>{repositoryUrl}</ClipboardCopy>\n                <div>\n                  <b>Note:</b> Use this URL to configure ansible-galaxy to\n                  upload collections to this namespace. More information on\n                  ansible-galaxy configurations can be found{' '}\n                  <a\n                    href='https://docs.ansible.com/ansible/latest/galaxy/user_guide.html#configuring-the-ansible-galaxy-client'\n                    target='_blank'\n                  >\n                    here\n                  </a>\n                  .\n                </div>\n              </div>\n            </Section>\n          ) : null}\n          {tab.toLowerCase() === 'resources'\n            ? this.renderResources(namespace)\n            : null}\n        </Main>\n      </React.Fragment>\n    );\n  }\n\n  private handleCollectionAction(id, action) {\n    const collection = this.state.collections.find(x => x.id === id);\n\n    switch (action) {\n      case 'upload':\n        this.setState({\n          updateCollection: collection,\n          showImportModal: true,\n        });\n        break;\n      case 'deprecate':\n        CollectionAPI.setDeprecation(\n          collection,\n          !collection.deprecated,\n          this.context.selectedRepo,\n        )\n          .then(() => this.loadCollections())\n          .catch(error => {\n            this.setState({\n              warning: 'API Error: Failed to set deprecation.',\n            });\n          });\n        break;\n    }\n  }\n\n  private renderResources(namespace: NamespaceType) {\n    return (\n      <div className='pf-c-content preview'>\n        <ReactMarkdown source={namespace.resources} />\n      </div>\n    );\n  }\n\n  private loadCollections() {\n    CollectionAPI.list(\n      {\n        ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n      },\n      this.context.selectedRepo,\n    ).then(result => {\n      this.setState({\n        collections: result.data.data,\n        itemCount: result.data.meta.count,\n      });\n    });\n  }\n\n  private loadAll() {\n    Promise.all([\n      CollectionAPI.list(\n        {\n          ...ParamHelper.getReduced(this.state.params, this.nonAPIParams),\n        },\n        this.context.selectedRepo,\n      ),\n      NamespaceAPI.get(this.props.match.params['namespace']),\n    ])\n      .then(val => {\n        this.setState({\n          collections: val[0].data.data,\n          itemCount: val[0].data.meta.count,\n          namespace: val[1].data,\n        });\n      })\n      .catch(response => {\n        this.setState({ redirect: Paths.notFound });\n      });\n  }\n\n  private get updateParams() {\n    return ParamHelper.updateParamsMixin(this.nonQueryStringParams);\n  }\n\n  private renderPageControls() {\n    const { collections } = this.state;\n    if (!this.props.showControls) {\n      return (\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <APIButton style={{ marginLeft: '8px' }} />\n        </div>\n      );\n    }\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        {' '}\n        {collections.length !== 0 && (\n          <Button onClick={() => this.setState({ showImportModal: true })}>\n            Upload collection\n          </Button>\n        )}\n        <APIButton style={{ marginLeft: '8px' }} />\n        <StatefulDropdown\n          items={[\n            <DropdownItem\n              key='1'\n              component={\n                <Link\n                  to={formatPath(Paths.editNamespace, {\n                    namespace: this.state.namespace.name,\n                  })}\n                >\n                  Edit namespace\n                </Link>\n              }\n            />,\n            <DropdownItem\n              key='2'\n              component={\n                <Link\n                  to={formatPath(\n                    Paths.myImports,\n                    {},\n                    {\n                      namespace: this.state.namespace.name,\n                    },\n                  )}\n                >\n                  Imports\n                </Link>\n              }\n            />,\n          ]}\n        />\n      </div>\n    );\n  }\n\n  private toggleImportModal(isOpen: boolean, warning?: string) {\n    const newState = { showImportModal: isOpen };\n    if (warning) {\n      newState['warning'] = warning;\n    }\n\n    if (!isOpen) {\n      newState['updateCollection'] = null;\n    }\n\n    this.setState(newState);\n  }\n}\n\nNamespaceDetail.contextType = AppContext;\ntry {\n    // @ts-ignore\n    NamespaceDetail.displayName = \"NamespaceDetail\";\n    // @ts-ignore\n    NamespaceDetail.__docgenInfo = { \"description\": \"\", \"displayName\": \"NamespaceDetail\", \"props\": { \"showControls\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"showControls\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"breadcrumbs\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"breadcrumbs\", \"required\": true, \"type\": { \"name\": \"{ name: string; url?: string; }[]\" } }, \"history\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"history\", \"required\": true, \"type\": { \"name\": \"History<any>\" } }, \"location\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"location\", \"required\": true, \"type\": { \"name\": \"Location<any>\" } }, \"match\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"match<{}>\" } }, \"staticContext\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"staticContext\", \"required\": false, \"type\": { \"name\": \"StaticContext\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/namespace-detail/namespace-detail.tsx#NamespaceDetail\"] = { docgenInfo: NamespaceDetail.__docgenInfo, name: \"NamespaceDetail\", path: \"src/containers/namespace-detail/namespace-detail.tsx#NamespaceDetail\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./import-modal.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./import-modal.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./import-modal.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\n\nimport { Section, Spinner } from '@redhat-cloud-services/frontend-components';\nimport { withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\n\nimport {\n  PartnerHeader,\n  NamespaceForm,\n  ResourcesForm,\n  AlertList,\n  closeAlertMixin,\n  AlertType,\n  Main,\n  EmptyStateUnauthorized,\n} from 'src/components';\nimport {\n  MyNamespaceAPI,\n  NamespaceType,\n  ActiveUserAPI,\n  NamespaceLinkType,\n} from 'src/api';\n\nimport { Form, ActionGroup, Button } from '@patternfly/react-core';\n\nimport { Paths, formatPath } from 'src/paths';\nimport { ParamHelper, mapErrorMessages } from 'src/utilities';\n\ninterface IState {\n  namespace: NamespaceType;\n  newLinkName: string;\n  newLinkURL: string;\n  errorMessages: any;\n  saving: boolean;\n  redirect: string;\n  unsavedData: boolean;\n  alerts: AlertType[];\n  params: {\n    tab?: string;\n  };\n  userId: string;\n  unauthorized: boolean;\n}\n\nclass EditNamespace extends React.Component<RouteComponentProps, IState> {\n  queryParams: URLSearchParams;\n\n  constructor(props) {\n    super(props);\n\n    const params = ParamHelper.parseParamString(props.location.search);\n\n    if (!params['tab']) {\n      params['tab'] = 'edit details';\n    }\n\n    this.state = {\n      alerts: [],\n      namespace: null,\n      userId: '',\n      newLinkURL: '',\n      newLinkName: '',\n      errorMessages: {},\n      saving: false,\n      redirect: null,\n      unsavedData: false,\n      params: params,\n      unauthorized: false,\n    };\n  }\n\n  componentDidMount() {\n    ActiveUserAPI.getUser().then(result => {\n      this.setState({ userId: result.account_number }, () =>\n        this.loadNamespace(),\n      );\n    });\n  }\n\n  render() {\n    const {\n      namespace,\n      errorMessages,\n      saving,\n      redirect,\n      params,\n      userId,\n      unauthorized,\n    } = this.state;\n\n    if (!namespace) {\n      return null;\n    }\n\n    if (redirect) {\n      return <Redirect to={redirect} />;\n    }\n    return (\n      <React.Fragment>\n        <PartnerHeader\n          namespace={namespace}\n          breadcrumbs={[\n            { name: 'My namespaces', url: Paths.myNamespaces },\n            {\n              name: namespace.name,\n              url: formatPath(Paths.myCollections, {\n                namespace: namespace.name,\n              }),\n            },\n            { name: 'Edit' },\n          ]}\n          tabs={['Edit details', 'Edit resources']}\n          params={params}\n          updateParams={p => this.updateParams(p)}\n        ></PartnerHeader>\n        <AlertList\n          alerts={this.state.alerts}\n          closeAlert={i => this.closeAlert(i)}\n        />\n        {unauthorized ? (\n          <EmptyStateUnauthorized />\n        ) : (\n          <Main>\n            <Section className='body'>\n              {params.tab.toLowerCase() === 'edit details' ? (\n                <NamespaceForm\n                  userId={userId}\n                  namespace={namespace}\n                  errorMessages={errorMessages}\n                  updateNamespace={namespace =>\n                    this.setState({\n                      namespace: namespace,\n                      unsavedData: true,\n                    })\n                  }\n                />\n              ) : (\n                <ResourcesForm\n                  updateNamespace={namespace =>\n                    this.setState({\n                      namespace: namespace,\n                      unsavedData: true,\n                    })\n                  }\n                  namespace={namespace}\n                />\n              )}\n              <Form>\n                <ActionGroup>\n                  <Button\n                    variant='primary'\n                    onClick={() => this.saveNamespace()}\n                  >\n                    Save\n                  </Button>\n                  <Button variant='secondary' onClick={() => this.cancel()}>\n                    Cancel\n                  </Button>\n\n                  {saving ? <Spinner></Spinner> : null}\n                </ActionGroup>\n                {this.state.unsavedData ? (\n                  <div style={{ color: 'red' }}>You have unsaved changes</div>\n                ) : null}\n              </Form>\n            </Section>\n          </Main>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  get updateParams() {\n    return ParamHelper.updateParamsMixin();\n  }\n\n  private loadNamespace() {\n    MyNamespaceAPI.get(this.props.match.params['namespace'])\n      .then(response => {\n        // Add an empty link to the end of the links array to create an empty field\n        // on the link edit form for adding new links\n        const emptyLink: NamespaceLinkType = { name: '', url: '' };\n        response.data.links.push(emptyLink);\n        this.setState({ namespace: response.data });\n      })\n      .catch(response => {\n        this.setState({ unauthorized: true });\n      });\n  }\n\n  private saveNamespace() {\n    this.setState({ saving: true }, () => {\n      const namespace = { ...this.state.namespace };\n      const setLinks: NamespaceLinkType[] = [];\n\n      // remove any empty links from the list before saving\n      for (const link of namespace.links) {\n        if (link.url !== '' || link.name !== '') {\n          setLinks.push(link);\n        }\n      }\n\n      namespace.links = setLinks;\n\n      MyNamespaceAPI.update(this.state.namespace.name, namespace)\n        .then(result => {\n          this.setState({\n            namespace: result.data,\n            errorMessages: {},\n            saving: false,\n            unsavedData: false,\n            redirect: formatPath(Paths.myCollections, {\n              namespace: this.state.namespace.name,\n            }),\n          });\n        })\n        .catch(error => {\n          const result = error.response;\n          if (result.status === 400) {\n            this.setState({\n              errorMessages: mapErrorMessages(error),\n              saving: false,\n            });\n          } else if (result.status === 404) {\n            this.setState({\n              alerts: this.state.alerts.concat({\n                variant: 'danger',\n                title: `API Error: ${error.response.status}`,\n                description: `You don't have permissions to update this namespace.`,\n              }),\n              saving: false,\n            });\n          }\n        });\n    });\n  }\n  private get closeAlert() {\n    return closeAlertMixin('alerts');\n  }\n\n  private cancel() {\n    this.setState({\n      redirect: formatPath(Paths.myCollections, {\n        namespace: this.state.namespace.name,\n      }),\n    });\n  }\n}\n\nexport default withRouter(EditNamespace);\ntry {\n    // @ts-ignore\n    editnamespace.displayName = \"editnamespace\";\n    // @ts-ignore\n    editnamespace.__docgenInfo = { \"description\": \"\", \"displayName\": \"editnamespace\", \"props\": { \"wrappedComponentRef\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"wrappedComponentRef\", \"required\": false, \"type\": { \"name\": \"Ref<EditNamespace>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/edit-namespace/edit-namespace.tsx#editnamespace\"] = { docgenInfo: editnamespace.__docgenInfo, name: \"editnamespace\", path: \"src/containers/edit-namespace/edit-namespace.tsx#editnamespace\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { NamespaceDetail } from './namespace-detail';\nimport { Paths } from 'src/paths';\n\ninterface IProps extends RouteComponentProps {\n  selectedRepo: string;\n}\n\nclass ManageNamespace extends React.Component<IProps> {\n  render() {\n    return (\n      <NamespaceDetail\n        {...this.props}\n        showControls={true}\n        breadcrumbs={[{ url: Paths.myNamespaces, name: 'My namespaces' }]}\n      ></NamespaceDetail>\n    );\n  }\n}\n\nexport default withRouter(ManageNamespace);\ntry {\n    // @ts-ignore\n    managenamespace.displayName = \"managenamespace\";\n    // @ts-ignore\n    managenamespace.__docgenInfo = { \"description\": \"\", \"displayName\": \"managenamespace\", \"props\": { \"selectedRepo\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selectedRepo\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"wrappedComponentRef\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"wrappedComponentRef\", \"required\": false, \"type\": { \"name\": \"Ref<ManageNamespace>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/namespace-detail/manage-namespace.tsx#managenamespace\"] = { docgenInfo: managenamespace.__docgenInfo, name: \"managenamespace\", path: \"src/containers/namespace-detail/manage-namespace.tsx#managenamespace\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\n\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { NamespaceDetail } from './namespace-detail';\nimport { Paths } from 'src/paths';\n\ninterface IProps extends RouteComponentProps {\n  selectedRepo: string;\n}\nclass PartnerDetail extends React.Component<IProps> {\n  render() {\n    var name = NAMESPACE_TERM.charAt(0).toUpperCase() + NAMESPACE_TERM.slice(1);\n\n    return (\n      <NamespaceDetail\n        {...this.props}\n        showControls={false}\n        breadcrumbs={[{ url: Paths[NAMESPACE_TERM], name: name }]}\n      ></NamespaceDetail>\n    );\n  }\n}\n\nexport default withRouter(PartnerDetail);\ntry {\n    // @ts-ignore\n    partnerdetail.displayName = \"partnerdetail\";\n    // @ts-ignore\n    partnerdetail.__docgenInfo = { \"description\": \"\", \"displayName\": \"partnerdetail\", \"props\": { \"selectedRepo\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selectedRepo\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"wrappedComponentRef\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"wrappedComponentRef\", \"required\": false, \"type\": { \"name\": \"Ref<PartnerDetail>\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/namespace-detail/partner-detail.tsx#partnerdetail\"] = { docgenInfo: partnerdetail.__docgenInfo, name: \"partnerdetail\", path: \"src/containers/namespace-detail/partner-detail.tsx#partnerdetail\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"sourceRoot":""}