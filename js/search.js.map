{"version":3,"sources":["webpack:///./src/containers/search/search.scss","webpack:///./src/containers/search/search.scss?5a3c","webpack:///./src/containers/search/search.tsx"],"names":["module","exports","push","i","content","options","transform","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","props","params","parseParamString","location","search","localStorage","getItem","SEARCH_VIEW_TYPE_LOCAL_KEY","state","collections","numberOfResults","loading","tags","componentDidMount","this","queryCollections","render","className","title","pageControls","size","updateParams","p","setItem","view_type","searchPlaceholder","count","isTop","renderCollections","length","renderEmpty","renderList","renderCards","variant","full","icon","headingLevel","map","c","id","showNamespace","setState","list","getReduced","then","result","data","meta","updateParamsMixin","Search"],"mappings":"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","file":"js/search.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"/* logo blue */\\n/* well background color */\\n/* alert info background color */\\n/* alert info border color */\\n.toolbar {\\n  margin-bottom: 16px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center; }\\n\\n.header {\\n  border-bottom: 1px solid #d8d8d8; }\\n\\n.collection-container {\\n  min-height: calc(100vh - 285px); }\\n  @media (min-width: 1000px) {\\n    .collection-container {\\n      display: flex; } }\\n  .collection-container .sidebar {\\n    margin-left: -24px;\\n    margin-top: -24px;\\n    background-color: white;\\n    min-width: 190px;\\n    padding: 16px;\\n    padding-top: 24px; }\\n  .collection-container .cards {\\n    display: flex;\\n    flex-wrap: wrap;\\n    align-content: flex-start; }\\n    .collection-container .cards .card {\\n      margin-left: 24px;\\n      margin-bottom: 24px; }\\n  .collection-container .list-container {\\n    width: 100%; }\\n  .collection-container .list {\\n    margin-bottom: 24px;\\n    margin-left: 24px;\\n    overflow: hidden; }\\n    .collection-container .list .data-list {\\n      margin-top: -17px;\\n      margin-bottom: -17px; }\\n  .collection-container .empty {\\n    flex-grow: 1; }\\n\\n.footer {\\n  border-top: 1px solid #d8d8d8;\\n  margin: 0px -24px -24px -24px; }\\n\", \"\"]);\n\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./search.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./search.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./search.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\nimport './search.scss';\n\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { Main, Section } from '@redhat-cloud-services/frontend-components';\nimport {\n    DataList,\n    EmptyState,\n    EmptyStateIcon,\n    Title,\n    EmptyStateBody,\n    EmptyStateVariant,\n} from '@patternfly/react-core';\n\nimport { WarningTriangleIcon } from '@patternfly/react-icons';\n\nimport {\n    BaseHeader,\n    CollectionCard,\n    Toolbar,\n    TagFilter,\n    CardListSwitcher,\n    CollectionListItem,\n    Pagination,\n    LoadingPageSpinner,\n} from '../../components';\nimport { CollectionAPI, CollectionListType } from '../../api';\nimport { ParamHelper } from '../../utilities/param-helper';\nimport { Constants } from '../../constants';\n\ninterface IState {\n    collections: CollectionListType[];\n    numberOfResults: number;\n    params: {\n        page?: number;\n        page_size?: number;\n        keywords?: string;\n        tags?: string;\n        view_type?: string;\n    };\n    loading: boolean;\n}\n\nclass Search extends React.Component<RouteComponentProps, IState> {\n    tags: string[];\n\n    constructor(props) {\n        super(props);\n\n        const params = ParamHelper.parseParamString(props.location.search, [\n            'page',\n            'page_size',\n        ]);\n\n        // Load view type from local storage if it's not set. This allows a\n        // user's view type preference to persist\n        if (!params['view_type']) {\n            params['view_type'] = localStorage.getItem(\n                Constants.SEARCH_VIEW_TYPE_LOCAL_KEY,\n            );\n        }\n\n        this.state = {\n            collections: [],\n            params: params,\n            numberOfResults: 0,\n            loading: true,\n        };\n\n        this.tags = ['network', 'cloud', 'package', 'security'];\n    }\n\n    componentDidMount() {\n        this.queryCollections();\n    }\n\n    render() {\n        const { collections, params, numberOfResults, loading } = this.state;\n\n        return (\n            <React.Fragment>\n                <BaseHeader\n                    className='header'\n                    title='Collections'\n                    pageControls={\n                        <CardListSwitcher\n                            size='sm'\n                            params={params}\n                            updateParams={p =>\n                                this.updateParams(p, () =>\n                                    // Note, we have to use this.state.params instead\n                                    // of params in the callback because the callback\n                                    // executes before the page can re-run render\n                                    // which means params doesn't contain the most\n                                    // up to date state\n                                    localStorage.setItem(\n                                        Constants.SEARCH_VIEW_TYPE_LOCAL_KEY,\n                                        this.state.params.view_type,\n                                    ),\n                                )\n                            }\n                        />\n                    }\n                >\n                    <div className='toolbar'>\n                        <Toolbar\n                            params={params}\n                            updateParams={p =>\n                                this.updateParams(p, () =>\n                                    this.queryCollections(),\n                                )\n                            }\n                            searchPlaceholder='Search collections'\n                        />\n\n                        <Pagination\n                            params={params}\n                            updateParams={p =>\n                                this.updateParams(p, () =>\n                                    this.queryCollections(),\n                                )\n                            }\n                            count={numberOfResults}\n                            isTop\n                        />\n                    </div>\n                </BaseHeader>\n                <Main>\n                    <Section className='collection-container'>\n                        <div className='sidebar'>\n                            <TagFilter\n                                params={params}\n                                updateParams={p =>\n                                    this.updateParams(p, () =>\n                                        this.queryCollections(),\n                                    )\n                                }\n                                tags={this.tags}\n                            />\n                        </div>\n\n                        {this.renderCollections(collections, params)}\n                    </Section>\n                    <Section className='body footer'>\n                        <Pagination\n                            params={params}\n                            updateParams={p =>\n                                this.updateParams(p, () =>\n                                    this.queryCollections(),\n                                )\n                            }\n                            count={numberOfResults}\n                        />\n                    </Section>\n                </Main>\n            </React.Fragment>\n        );\n    }\n\n    private renderCollections(collections, params) {\n        if (this.state.loading) {\n            return <LoadingPageSpinner></LoadingPageSpinner>;\n        }\n        if (collections.length === 0) {\n            return this.renderEmpty();\n        }\n        if (params.view_type === 'list') {\n            return this.renderList(collections);\n        } else {\n            return this.renderCards(collections);\n        }\n    }\n\n    private renderEmpty() {\n        return (\n            <EmptyState className='empty' variant={EmptyStateVariant.full}>\n                <EmptyStateIcon icon={WarningTriangleIcon} />\n                <Title headingLevel='h2' size='lg'>\n                    No matches\n                </Title>\n                <EmptyStateBody>\n                    Please try adjusting your search query\n                </EmptyStateBody>\n            </EmptyState>\n        );\n    }\n\n    private renderCards(collections) {\n        return (\n            <div className='cards'>\n                {collections.map(c => {\n                    return (\n                        <CollectionCard className='card' key={c.id} {...c} />\n                    );\n                })}\n            </div>\n        );\n    }\n\n    private renderList(collections) {\n        return (\n            <div className='list-container'>\n                <div className='body list'>\n                    <DataList\n                        className='data-list'\n                        aria-label={'List of Collections'}\n                    >\n                        {collections.map(c => (\n                            <CollectionListItem\n                                showNamespace={true}\n                                key={c.id}\n                                {...c}\n                            />\n                        ))}\n                    </DataList>\n                </div>\n            </div>\n        );\n    }\n\n    private queryCollections() {\n        this.setState({ loading: true }, () => {\n            CollectionAPI.list(\n                ParamHelper.getReduced(this.state.params, [\n                    'view_type',\n                ]),\n            ).then(result => {\n                this.setState({\n                    collections: result.data.data,\n                    numberOfResults: result.data.meta.count,\n                    loading: false,\n                });\n            });\n        });\n    }\n\n    private get updateParams() {\n        return ParamHelper.updateParamsMixin();\n    }\n}\n\nexport default withRouter(Search);\n"],"sourceRoot":""}